"use strict";

exports.__esModule = true;
exports.default = createScaleFromScaleType;

var _d3Scale = require("d3-scale");

var _VegaLite = require("../../types/VegaLite");

function createScaleFromScaleType(config) {
  switch (config.type) {
    case _VegaLite.ScaleType.LINEAR:
      return (0, _d3Scale.scaleLinear)();

    case _VegaLite.ScaleType.LOG:
      return typeof config.base === 'undefined' ? (0, _d3Scale.scaleLog)() : (0, _d3Scale.scaleLog)().base(config.base);

    case _VegaLite.ScaleType.POW:
      return typeof config.exponent === 'undefined' ? (0, _d3Scale.scalePow)() : (0, _d3Scale.scalePow)().exponent(config.exponent);

    case _VegaLite.ScaleType.SQRT:
      return (0, _d3Scale.scaleSqrt)();

    case _VegaLite.ScaleType.TIME:
      return (0, _d3Scale.scaleTime)();

    case _VegaLite.ScaleType.UTC:
      return (0, _d3Scale.scaleUtc)();

    case _VegaLite.ScaleType.QUANTILE:
      return (0, _d3Scale.scaleQuantile)();

    case _VegaLite.ScaleType.QUANTIZE:
      return (0, _d3Scale.scaleQuantize)();

    case _VegaLite.ScaleType.THRESHOLD:
      return (0, _d3Scale.scaleThreshold)();

    case _VegaLite.ScaleType.ORDINAL:
      return (0, _d3Scale.scaleOrdinal)();

    case _VegaLite.ScaleType.POINT:
      return (0, _d3Scale.scalePoint)();

    case _VegaLite.ScaleType.BAND:
      return (0, _d3Scale.scaleBand)();

    case _VegaLite.ScaleType.SYMLOG:
      // TODO: d3-scale typings does not include scaleSymlog yet
      // needs to patch the declaration file before continue.
      throw new Error("\"scale.type = " + config.type + "\" is not supported yet.");

    case _VegaLite.ScaleType.BIN_ORDINAL:
      // TODO: Pending scale.bins implementation
      throw new Error("\"scale.type = " + config.type + "\" is not supported yet.");

    default:
      return (0, _d3Scale.scaleLinear)();
  }
}
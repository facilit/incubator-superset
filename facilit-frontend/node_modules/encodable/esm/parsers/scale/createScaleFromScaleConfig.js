"use strict";

exports.__esModule = true;
exports.default = void 0;

var _color = require("@superset-ui/color");

var _VegaLite = require("../../types/VegaLite");

var _createScaleFromScaleType = _interopRequireDefault(require("./createScaleFromScaleType"));

var _applyNice = _interopRequireDefault(require("./applyNice"));

var _applyZero = _interopRequireDefault(require("./applyZero"));

var _applyInterpolate = _interopRequireDefault(require("./applyInterpolate"));

var _applyRound = _interopRequireDefault(require("./applyRound"));

var _applyDomain = _interopRequireDefault(require("./applyDomain"));

var _applyRange = _interopRequireDefault(require("./applyRange"));

var _applyPadding = _interopRequireDefault(require("./applyPadding"));

var _applyAlign = _interopRequireDefault(require("./applyAlign"));

var _applyClamp = _interopRequireDefault(require("./applyClamp"));

var _Scale = require("../../typeGuards/Scale");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createScaleFromScaleConfig(config) {
  const {
    range
  } = config; // Handle categorical color scales
  // An ordinal scale without specified range
  // is assumed to be a color scale.

  if (config.type === _VegaLite.ScaleType.ORDINAL && typeof range === 'undefined') {
    const scheme = 'scheme' in config ? config.scheme : undefined;
    const namespace = 'namespace' in config ? config.namespace : undefined;

    const colorScale = _color.CategoricalColorNamespace.getScale(scheme && (0, _Scale.isSchemeParams)(scheme) ? scheme.name : scheme, namespace);

    (0, _applyDomain.default)(config, colorScale);
    return colorScale;
  }

  const scale = (0, _createScaleFromScaleType.default)(config); // domain and range apply to all scales

  (0, _applyDomain.default)(config, scale);
  (0, _applyRange.default)(config, scale); // Sort other properties alphabetically.

  (0, _applyAlign.default)(config, scale);
  (0, _applyClamp.default)(config, scale);
  (0, _applyInterpolate.default)(config, scale);
  (0, _applyNice.default)(config, scale);
  (0, _applyPadding.default)(config, scale);
  (0, _applyRound.default)(config, scale);
  (0, _applyZero.default)(config, scale);
  return scale;
}

var _default = createScaleFromScaleConfig;
exports.default = _default;
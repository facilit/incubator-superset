{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/es.promise.finally\";import \"core-js/modules/web.dom-collections.iterator\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/dashboardList/DashboardList.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * regarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport ExpandableList from 'src/components/ExpandableList';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst PAGE_SIZE = 25;\nclass DashboardList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      dashboardCount: 0,\n      dashboards: [],\n      filterOperators: {},\n      filters: [],\n      lastFetchDataConfig: null,\n      loading: false,\n      permissions: [],\n      dashboardToEdit: null };\n\n    this.initialSort = [{ id: 'changed_on', desc: true }];\n    this.columns = [\n    {\n      Cell: ({ row: { original: { url, dashboard_title: dashboardTitle } } }) => ___EmotionJSX(\"a\", { href: url, __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this }, dashboardTitle),\n      Header: t('Title'),\n      accessor: 'dashboard_title',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { owners } } }) => ___EmotionJSX(ExpandableList, { items: _mapInstanceProperty(owners).call(owners, ({ first_name: firstName, last_name: lastName }) => firstName + \" \" + lastName), display: 2, __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: this }),\n      Header: t('Owners'),\n      accessor: 'owners' },\n\n    {\n      Cell: ({ row: { original: { changed_by_name: changedByName, changed_by_url: changedByUrl } } }) => ___EmotionJSX(\"a\", { href: changedByUrl, __source: { fileName: _jsxFileName, lineNumber: 61 }, __self: this }, changedByName),\n      Header: t('Creator'),\n      accessor: 'changed_by_fk',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { published } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\", __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this },\n      published ? ___EmotionJSX(\"i\", { className: \"fa fa-check\", __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: this }) : ''),\n\n      Header: t('Published'),\n      accessor: 'published',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_on: changedOn } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\", __source: { fileName: _jsxFileName, lineNumber: 75 }, __self: this }, moment(changedOn).fromNow()),\n      Header: t('Modified'),\n      accessor: 'changed_on',\n      sortable: true },\n\n    {\n      accessor: 'slug',\n      hidden: true },\n\n    {\n      Cell: ({ row: { state, original } }) => {\n        const handleDelete = () => this.handleDashboardDelete(original);\n        const handleEdit = () => this.openDashboardEditModal(original);\n        const handleExport = () => this.handleBulkDashboardExport([original]);\n        if (!this.canEdit && !this.canDelete && !this.canExport) {\n          return null;\n        }\n        return ___EmotionJSX(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible'), __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this },\n        this.canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please Confirm'), description: ___EmotionJSX(React.Fragment, null,\n          t('Are you sure you want to delete'), ' ',\n          ___EmotionJSX(\"b\", { __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this }, original.dashboard_title), \"?\"),\n          onConfirm: handleDelete, __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: this },\n        confirmDelete => ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete, __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: this },\n        ___EmotionJSX(\"i\", { className: \"fa fa-trash\", __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this }))),\n\n\n        this.canExport && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleExport, __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this },\n        ___EmotionJSX(\"i\", { className: \"fa fa-database\", __source: { fileName: _jsxFileName, lineNumber: 102 }, __self: this })),\n\n        this.canEdit && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleEdit, __source: { fileName: _jsxFileName, lineNumber: 104 }, __self: this },\n        ___EmotionJSX(\"i\", { className: \"fa fa-pencil\", __source: { fileName: _jsxFileName, lineNumber: 105 }, __self: this })));\n\n\n      },\n      Header: t('Actions'),\n      id: 'actions' }];\n\n\n    this.hasPerm = perm => {var _context;\n      if (!this.state.permissions.length) {\n        return false;\n      }\n      return Boolean(_findInstanceProperty(_context = this.state.permissions).call(_context, p => p === perm));\n    };\n    this.openDashboardEditModal = dashboard => {\n      this.setState({\n        dashboardToEdit: dashboard });\n\n    };\n    this.handleDashboardEdit = edits => {\n      this.setState({ loading: true });\n      return SupersetClient.get({\n        endpoint: \"/api/v1/dashboard/\" + edits.id }).\n\n      then(({ json = {} }) => {var _context2;\n        this.setState({\n          dashboards: _mapInstanceProperty(_context2 = this.state.dashboards).call(_context2, dashboard => {\n            if (dashboard.id === json.id) {\n              return json.result;\n            }\n            return dashboard;\n          }),\n          loading: false });\n\n      }).\n      catch(e => {\n        this.props.addDangerToast(t('An error occurred while fetching dashboards: %s', e.statusText));\n      });\n    };\n    this.handleDashboardDelete = ({ id, dashboard_title: dashboardTitle }) => SupersetClient.delete({\n      endpoint: \"/api/v1/dashboard/\" + id }).\n    then(() => {\n      const { lastFetchDataConfig } = this.state;\n      if (lastFetchDataConfig) {\n        this.fetchData(lastFetchDataConfig);\n      }\n      this.props.addSuccessToast(t('Deleted: %s', dashboardTitle));\n    }, err => {\n      console.error(err);\n      this.props.addDangerToast(t('There was an issue deleting %s', dashboardTitle));\n    });\n    this.handleBulkDashboardDelete = dashboards => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/dashboard/?q=\" + rison.encode(_mapInstanceProperty(dashboards).call(dashboards, ({ id }) => id)) }).\n      then(({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      }, err => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected dashboards: ', err.statusText));\n      });\n    };\n    this.handleBulkDashboardExport = dashboards => {\n      return window.location.assign(\"/api/v1/dashboard/export/?q=\" + rison.encode(_mapInstanceProperty(dashboards).call(dashboards, ({ id }) => id)));\n    };\n    this.fetchData = ({ pageIndex, pageSize, sortBy, filters }) => {\n      // set loading state, cache the last config for fetching data in this component.\n      this.setState({\n        lastFetchDataConfig: {\n          filters,\n          pageIndex,\n          pageSize,\n          sortBy },\n\n        loading: true });\n\n      const filterExps = _mapInstanceProperty(filters).call(filters, ({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value }));\n\n      const queryParams = rison.encode(_Object$assign({\n        order_column: sortBy[0].id,\n        order_direction: sortBy[0].desc ? 'desc' : 'asc',\n        page: pageIndex,\n        page_size: pageSize },\n      filterExps.length ? { filters: filterExps } : {}));\n\n      return SupersetClient.get({\n        endpoint: \"/api/v1/dashboard/?q=\" + queryParams }).\n\n      then(({ json = {} }) => {\n        this.setState({ dashboards: json.result, dashboardCount: json.count });\n      }).\n      catch(e => {\n        this.props.addDangerToast(t('An error occurred while fetching dashboards: %s', e.statusText));\n      }).\n      finally(() => {\n        this.setState({ loading: false });\n      });\n    };\n    this.fetchOwners = async (filterValue = '', pageIndex, pageSize) => {\n      const resource = '/api/v1/dashboard/related/owners';\n      try {var _json$result;\n        const queryParams = rison.encode(_Object$assign({},\n        pageIndex ? { page: pageIndex } : {}, {},\n        pageSize ? { page_ize: pageSize } : {}, {},\n        filterValue ? { filter: filterValue } : {}));\n\n        const { json = {} } = await SupersetClient.get({\n          endpoint: resource + \"?q=\" + queryParams });\n\n        return json === null || json === void 0 ? void 0 : (_json$result = json.result) === null || _json$result === void 0 ? void 0 : _mapInstanceProperty(_json$result).call(_json$result, ({ text: label, value }) => ({\n          label,\n          value }));\n\n      }\n      catch (e) {\n        console.error(e);\n        this.props.addDangerToast(t('An error occurred while fetching chart owner values: %s', e.statusText));\n      }\n      return [];\n    };\n    this.updateFilters = async () => {var _context3, _context4, _context5, _context6;\n      const { filterOperators } = this.state;\n      if (this.isNewUIEnabled) {\n        return this.setState({\n          filters: [\n          {\n            Header: 'Owner',\n            id: 'owners',\n            input: 'select',\n            operator: 'rel_m_m',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchOwners,\n            paginate: true },\n\n          {\n            Header: 'Published',\n            id: 'published',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'Any',\n            selects: [\n            { label: 'Published', value: true },\n            { label: 'Unpublished', value: false }] },\n\n\n          {\n            Header: 'Search',\n            id: 'dashboard_title',\n            input: 'search',\n            operator: 'title_or_slug' }] });\n\n\n\n      }\n      const convertFilter = ({ name: label, operator }) => ({ label, value: operator });\n      const owners = await this.fetchOwners();\n      return this.setState({\n        filters: [\n        {\n          Header: 'Dashboard',\n          id: 'dashboard_title',\n          operators: _mapInstanceProperty(_context3 = filterOperators.dashboard_title).call(_context3, convertFilter) },\n\n        {\n          Header: 'Slug',\n          id: 'slug',\n          operators: _mapInstanceProperty(_context4 = filterOperators.slug).call(_context4, convertFilter) },\n\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: _mapInstanceProperty(_context5 = filterOperators.owners).call(_context5, convertFilter),\n          selects: owners },\n\n        {\n          Header: 'Published',\n          id: 'published',\n          input: 'checkbox',\n          operators: _mapInstanceProperty(_context6 = filterOperators.published).call(_context6, convertFilter) }] });\n\n\n\n    };\n  }\n  componentDidMount() {\n    SupersetClient.get({\n      endpoint: \"/api/v1/dashboard/_info\" }).\n    then(({ json: infoJson = {} }) => {\n      this.setState({\n        filterOperators: infoJson.filters,\n        permissions: infoJson.permissions },\n      this.updateFilters);\n    }, e => {\n      this.props.addDangerToast(t('An error occurred while fetching Dashboards: %s, %s', e.statusText));\n      console.error(e);\n    });\n  }\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n  get canExport() {\n    return this.hasPerm('can_mulexport');\n  }\n  get isNewUIEnabled() {\n    return isFeatureEnabled(FeatureFlag.LIST_VIEWS_NEW_UI);\n  }\n  render() {\n    const { dashboards, dashboardCount, loading, filters, dashboardToEdit } = this.state;\n    return ___EmotionJSX(\"div\", { className: \"container welcome\", __source: { fileName: _jsxFileName, lineNumber: 323 }, __self: this },\n    ___EmotionJSX(Panel, { __source: { fileName: _jsxFileName, lineNumber: 324 }, __self: this },\n    ___EmotionJSX(Panel.Body, { __source: { fileName: _jsxFileName, lineNumber: 325 }, __self: this },\n    ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected dashboards?'), onConfirm: this.handleBulkDashboardDelete, __source: { fileName: _jsxFileName, lineNumber: 326 }, __self: this },\n    confirmDelete => {\n      const bulkActions = [];\n      if (this.canDelete) {\n        bulkActions.push({\n          key: 'delete',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-trash\", __source: { fileName: _jsxFileName, lineNumber: 333 }, __self: this }), \" Delete\"),\n\n          onSelect: confirmDelete });\n\n      }\n      if (this.canExport) {\n        bulkActions.push({\n          key: 'export',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-database\", __source: { fileName: _jsxFileName, lineNumber: 342 }, __self: this }), \" Export\"),\n\n          onSelect: this.handleBulkDashboardExport });\n\n      }\n      return ___EmotionJSX(React.Fragment, null,\n      dashboardToEdit && ___EmotionJSX(PropertiesModal, { show: true, dashboardId: dashboardToEdit.id, onHide: () => this.setState({ dashboardToEdit: null }), onDashboardSave: this.handleDashboardEdit, __source: { fileName: _jsxFileName, lineNumber: 348 }, __self: this }),\n      ___EmotionJSX(ListView, { className: \"dashboard-list-view\", title: 'Dashboards', columns: this.columns, data: dashboards, count: dashboardCount, pageSize: PAGE_SIZE, fetchData: this.fetchData, loading: loading, initialSort: this.initialSort, filters: filters, bulkActions: bulkActions, useNewUIFilters: this.isNewUIEnabled, __source: { fileName: _jsxFileName, lineNumber: 349 }, __self: this }));\n\n    }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}DashboardList.propTypes = {\n  addDangerToast: PropTypes.func.isRequired };const _default =\n\nwithToasts(DashboardList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/dashboardList/DashboardList.tsx\");reactHotLoader.register(DashboardList, \"DashboardList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/dashboardList/DashboardList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/dashboardList/DashboardList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/dashboardList/DashboardList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport ExpandableList from 'src/components/ExpandableList';\nimport {\n  FetchDataConfig,\n  FilterOperatorMap,\n  Filters,\n} from 'src/components/ListView/types';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nconst PAGE_SIZE = 25;\n\ninterface Props {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\ninterface State {\n  dashboards: any[];\n  dashboardCount: number;\n  loading: boolean;\n  filterOperators: FilterOperatorMap;\n  filters: Filters;\n  permissions: string[];\n  lastFetchDataConfig: FetchDataConfig | null;\n  dashboardToEdit: Dashboard | null;\n}\n\ninterface Dashboard {\n  id: number;\n  changed_by: string;\n  changed_by_name: string;\n  changed_by_url: string;\n  changed_on: string;\n  dashboard_title: string;\n  published: boolean;\n  url: string;\n}\n\nclass DashboardList extends React.PureComponent<Props, State> {\n  static propTypes = {\n    addDangerToast: PropTypes.func.isRequired,\n  };\n\n  state: State = {\n    dashboardCount: 0,\n    dashboards: [],\n    filterOperators: {},\n    filters: [],\n    lastFetchDataConfig: null,\n    loading: false,\n    permissions: [],\n    dashboardToEdit: null,\n  };\n\n  componentDidMount() {\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/_info`,\n    }).then(\n      ({ json: infoJson = {} }) => {\n        this.setState(\n          {\n            filterOperators: infoJson.filters,\n            permissions: infoJson.permissions,\n          },\n          this.updateFilters,\n        );\n      },\n      e => {\n        this.props.addDangerToast(\n          t(\n            'An error occurred while fetching Dashboards: %s, %s',\n            e.statusText,\n          ),\n        );\n        console.error(e);\n      },\n    );\n  }\n\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n\n  get canExport() {\n    return this.hasPerm('can_mulexport');\n  }\n\n  get isNewUIEnabled() {\n    return isFeatureEnabled(FeatureFlag.LIST_VIEWS_NEW_UI);\n  }\n\n  initialSort = [{ id: 'changed_on', desc: true }];\n\n  columns = [\n    {\n      Cell: ({\n        row: {\n          original: { url, dashboard_title: dashboardTitle },\n        },\n      }: any) => <a href={url}>{dashboardTitle}</a>,\n      Header: t('Title'),\n      accessor: 'dashboard_title',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { owners },\n        },\n      }: any) => (\n        <ExpandableList\n          items={owners.map(\n            ({ first_name: firstName, last_name: lastName }: any) =>\n              `${firstName} ${lastName}`,\n          )}\n          display={2}\n        />\n      ),\n      Header: t('Owners'),\n      accessor: 'owners',\n    },\n    {\n      Cell: ({\n        row: {\n          original: {\n            changed_by_name: changedByName,\n            changed_by_url: changedByUrl,\n          },\n        },\n      }: any) => <a href={changedByUrl}>{changedByName}</a>,\n      Header: t('Creator'),\n      accessor: 'changed_by_fk',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { published },\n        },\n      }: any) => (\n        <span className=\"no-wrap\">\n          {published ? <i className=\"fa fa-check\" /> : ''}\n        </span>\n      ),\n      Header: t('Published'),\n      accessor: 'published',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { changed_on: changedOn },\n        },\n      }: any) => <span className=\"no-wrap\">{moment(changedOn).fromNow()}</span>,\n      Header: t('Modified'),\n      accessor: 'changed_on',\n      sortable: true,\n    },\n    {\n      accessor: 'slug',\n      hidden: true,\n    },\n    {\n      Cell: ({ row: { state, original } }: any) => {\n        const handleDelete = () => this.handleDashboardDelete(original);\n        const handleEdit = () => this.openDashboardEditModal(original);\n        const handleExport = () => this.handleBulkDashboardExport([original]);\n        if (!this.canEdit && !this.canDelete && !this.canExport) {\n          return null;\n        }\n        return (\n          <span\n            className={`actions ${state && state.hover ? '' : 'invisible'}`}\n          >\n            {this.canDelete && (\n              <ConfirmStatusChange\n                title={t('Please Confirm')}\n                description={\n                  <>\n                    {t('Are you sure you want to delete')}{' '}\n                    <b>{original.dashboard_title}</b>?\n                  </>\n                }\n                onConfirm={handleDelete}\n              >\n                {confirmDelete => (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={confirmDelete}\n                  >\n                    <i className=\"fa fa-trash\" />\n                  </span>\n                )}\n              </ConfirmStatusChange>\n            )}\n            {this.canExport && (\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={handleExport}\n              >\n                <i className=\"fa fa-database\" />\n              </span>\n            )}\n            {this.canEdit && (\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={handleEdit}\n              >\n                <i className=\"fa fa-pencil\" />\n              </span>\n            )}\n          </span>\n        );\n      },\n      Header: t('Actions'),\n      id: 'actions',\n    },\n  ];\n\n  hasPerm = (perm: string) => {\n    if (!this.state.permissions.length) {\n      return false;\n    }\n\n    return Boolean(this.state.permissions.find(p => p === perm));\n  };\n\n  openDashboardEditModal = (dashboard: Dashboard) => {\n    this.setState({\n      dashboardToEdit: dashboard,\n    });\n  };\n\n  handleDashboardEdit = (edits: any) => {\n    this.setState({ loading: true });\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${edits.id}`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({\n          dashboards: this.state.dashboards.map(dashboard => {\n            if (dashboard.id === json.id) {\n              return json.result;\n            }\n            return dashboard;\n          }),\n          loading: false,\n        });\n      })\n      .catch(e => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching dashboards: %s', e.statusText),\n        );\n      });\n  };\n\n  handleDashboardDelete = ({\n    id,\n    dashboard_title: dashboardTitle,\n  }: Dashboard) =>\n    SupersetClient.delete({\n      endpoint: `/api/v1/dashboard/${id}`,\n    }).then(\n      () => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted: %s', dashboardTitle));\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(\n          t('There was an issue deleting %s', dashboardTitle),\n        );\n      },\n    );\n\n  handleBulkDashboardDelete = (dashboards: Dashboard[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dashboard/?q=${rison.encode(\n        dashboards.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(\n          t(\n            'There was an issue deleting the selected dashboards: ',\n            err.statusText,\n          ),\n        );\n      },\n    );\n  };\n\n  handleBulkDashboardExport = (dashboards: Dashboard[]) => {\n    return window.location.assign(\n      `/api/v1/dashboard/export/?q=${rison.encode(\n        dashboards.map(({ id }) => id),\n      )}`,\n    );\n  };\n\n  fetchData = ({ pageIndex, pageSize, sortBy, filters }: FetchDataConfig) => {\n    // set loading state, cache the last config for fetching data in this component.\n    this.setState({\n      lastFetchDataConfig: {\n        filters,\n        pageIndex,\n        pageSize,\n        sortBy,\n      },\n      loading: true,\n    });\n    const filterExps = filters.map(({ id: col, operator: opr, value }) => ({\n      col,\n      opr,\n      value,\n    }));\n\n    const queryParams = rison.encode({\n      order_column: sortBy[0].id,\n      order_direction: sortBy[0].desc ? 'desc' : 'asc',\n      page: pageIndex,\n      page_size: pageSize,\n      ...(filterExps.length ? { filters: filterExps } : {}),\n    });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({ dashboards: json.result, dashboardCount: json.count });\n      })\n      .catch(e => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching dashboards: %s', e.statusText),\n        );\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  fetchOwners = async (\n    filterValue = '',\n    pageIndex?: number,\n    pageSize?: number,\n  ) => {\n    const resource = '/api/v1/dashboard/related/owners';\n\n    try {\n      const queryParams = rison.encode({\n        ...(pageIndex ? { page: pageIndex } : {}),\n        ...(pageSize ? { page_ize: pageSize } : {}),\n        ...(filterValue ? { filter: filterValue } : {}),\n      });\n      const { json = {} } = await SupersetClient.get({\n        endpoint: `${resource}?q=${queryParams}`,\n      });\n\n      return json?.result?.map(\n        ({ text: label, value }: { text: string; value: any }) => ({\n          label,\n          value,\n        }),\n      );\n    } catch (e) {\n      console.error(e);\n      this.props.addDangerToast(\n        t(\n          'An error occurred while fetching chart owner values: %s',\n          e.statusText,\n        ),\n      );\n    }\n    return [];\n  };\n\n  updateFilters = async () => {\n    const { filterOperators } = this.state;\n\n    if (this.isNewUIEnabled) {\n      return this.setState({\n        filters: [\n          {\n            Header: 'Owner',\n            id: 'owners',\n            input: 'select',\n            operator: 'rel_m_m',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchOwners,\n            paginate: true,\n          },\n          {\n            Header: 'Published',\n            id: 'published',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'Any',\n            selects: [\n              { label: 'Published', value: true },\n              { label: 'Unpublished', value: false },\n            ],\n          },\n          {\n            Header: 'Search',\n            id: 'dashboard_title',\n            input: 'search',\n            operator: 'title_or_slug',\n          },\n        ],\n      });\n    }\n\n    const convertFilter = ({\n      name: label,\n      operator,\n    }: {\n      name: string;\n      operator: string;\n    }) => ({ label, value: operator });\n\n    const owners = await this.fetchOwners();\n\n    return this.setState({\n      filters: [\n        {\n          Header: 'Dashboard',\n          id: 'dashboard_title',\n          operators: filterOperators.dashboard_title.map(convertFilter),\n        },\n        {\n          Header: 'Slug',\n          id: 'slug',\n          operators: filterOperators.slug.map(convertFilter),\n        },\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: filterOperators.owners.map(convertFilter),\n          selects: owners,\n        },\n        {\n          Header: 'Published',\n          id: 'published',\n          input: 'checkbox',\n          operators: filterOperators.published.map(convertFilter),\n        },\n      ],\n    });\n  };\n\n  render() {\n    const {\n      dashboards,\n      dashboardCount,\n      loading,\n      filters,\n      dashboardToEdit,\n    } = this.state;\n    return (\n      <div className=\"container welcome\">\n        <Panel>\n          <Panel.Body>\n            <ConfirmStatusChange\n              title={t('Please confirm')}\n              description={t(\n                'Are you sure you want to delete the selected dashboards?',\n              )}\n              onConfirm={this.handleBulkDashboardDelete}\n            >\n              {confirmDelete => {\n                const bulkActions = [];\n                if (this.canDelete) {\n                  bulkActions.push({\n                    key: 'delete',\n                    name: (\n                      <>\n                        <i className=\"fa fa-trash\" /> Delete\n                      </>\n                    ),\n                    onSelect: confirmDelete,\n                  });\n                }\n                if (this.canExport) {\n                  bulkActions.push({\n                    key: 'export',\n                    name: (\n                      <>\n                        <i className=\"fa fa-database\" /> Export\n                      </>\n                    ),\n                    onSelect: this.handleBulkDashboardExport,\n                  });\n                }\n                return (\n                  <>\n                    {dashboardToEdit && (\n                      <PropertiesModal\n                        show\n                        dashboardId={dashboardToEdit.id}\n                        onHide={() => this.setState({ dashboardToEdit: null })}\n                        onDashboardSave={this.handleDashboardEdit}\n                      />\n                    )}\n                    <ListView\n                      className=\"dashboard-list-view\"\n                      title={'Dashboards'}\n                      columns={this.columns}\n                      data={dashboards}\n                      count={dashboardCount}\n                      pageSize={PAGE_SIZE}\n                      fetchData={this.fetchData}\n                      loading={loading}\n                      initialSort={this.initialSort}\n                      filters={filters}\n                      bulkActions={bulkActions}\n                      useNewUIFilters={this.isNewUIEnabled}\n                    />\n                  </>\n                );\n              }}\n            </ConfirmStatusChange>\n          </Panel.Body>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withToasts(DashboardList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
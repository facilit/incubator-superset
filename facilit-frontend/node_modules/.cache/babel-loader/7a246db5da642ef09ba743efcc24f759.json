{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/es.regexp.to-string\";import \"core-js/modules/web.dom-collections.iterator\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * distributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * to you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *\nnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */\n/* eslint no-undef: 'error' */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport URI from 'urijs';\nimport moment from 'moment';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport { isFeatureEnabled, FeatureFlag } from '../featureFlags';\nimport {\ngetAnnotationJsonUrl,\ngetExploreUrl,\ngetHostName,\ngetLegacyEndpointType,\nbuildV1ChartDataPayload,\npostForm,\nshouldUseLegacyApi,\ngetChartDataUri } from\n'../explore/exploreUtils';\nimport {\nrequiresQuery,\nANNOTATION_SOURCE_TYPES } from\n'../modules/AnnotationTypes';\n\nimport { addDangerToast } from '../messageToasts/actions';\nimport { logEvent } from '../logger/actions';\nimport { Logger, LOG_ACTIONS_LOAD_CHART } from '../logger/LogUtils';\nimport getClientErrorObject from '../utils/getClientErrorObject';\nimport { allowCrossDomain as allowDomainSharding } from '../utils/hostNamesConfig';\n\nexport const CHART_UPDATE_STARTED = 'CHART_UPDATE_STARTED';\nexport function chartUpdateStarted(queryController, latestQueryFormData, key) {\n  return {\n    type: CHART_UPDATE_STARTED,\n    queryController,\n    latestQueryFormData,\n    key };\n\n}\n\nexport const CHART_UPDATE_SUCCEEDED = 'CHART_UPDATE_SUCCEEDED';\nexport function chartUpdateSucceeded(queryResponse, key) {\n  return { type: CHART_UPDATE_SUCCEEDED, queryResponse, key };\n}\n\nexport const CHART_UPDATE_STOPPED = 'CHART_UPDATE_STOPPED';\nexport function chartUpdateStopped(key) {\n  return { type: CHART_UPDATE_STOPPED, key };\n}\n\nexport const CHART_UPDATE_TIMEOUT = 'CHART_UPDATE_TIMEOUT';\nexport function chartUpdateTimeout(statusText, timeout, key) {\n  return { type: CHART_UPDATE_TIMEOUT, statusText, timeout, key };\n}\n\nexport const CHART_UPDATE_FAILED = 'CHART_UPDATE_FAILED';\nexport function chartUpdateFailed(queryResponse, key) {\n  return { type: CHART_UPDATE_FAILED, queryResponse, key };\n}\n\nexport const CHART_RENDERING_FAILED = 'CHART_RENDERING_FAILED';\nexport function chartRenderingFailed(error, key, stackTrace) {\n  return { type: CHART_RENDERING_FAILED, error, key, stackTrace };\n}\n\nexport const CHART_RENDERING_SUCCEEDED = 'CHART_RENDERING_SUCCEEDED';\nexport function chartRenderingSucceeded(key) {\n  return { type: CHART_RENDERING_SUCCEEDED, key };\n}\n\nexport const REMOVE_CHART = 'REMOVE_CHART';\nexport function removeChart(key) {\n  return { type: REMOVE_CHART, key };\n}\n\nexport const ANNOTATION_QUERY_SUCCESS = 'ANNOTATION_QUERY_SUCCESS';\nexport function annotationQuerySuccess(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_SUCCESS, annotation, queryResponse, key };\n}\n\nexport const ANNOTATION_QUERY_STARTED = 'ANNOTATION_QUERY_STARTED';\nexport function annotationQueryStarted(annotation, queryController, key) {\n  return { type: ANNOTATION_QUERY_STARTED, annotation, queryController, key };\n}\n\nexport const ANNOTATION_QUERY_FAILED = 'ANNOTATION_QUERY_FAILED';\nexport function annotationQueryFailed(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_FAILED, annotation, queryResponse, key };\n}\n\nconst legacyChartDataRequest = async (\nformData,\nresultFormat,\nresultType,\nforce,\nmethod = 'POST',\nrequestParams = {}) =>\n{\n  const endpointType = getLegacyEndpointType({ resultFormat, resultType });\n  const url = getExploreUrl({\n    formData,\n    endpointType,\n    force,\n    allowDomainSharding,\n    method,\n    requestParams: requestParams.dashboard_id ?\n    { dashboard_id: requestParams.dashboard_id } :\n    {} });\n\n  const querySettings = _Object$assign({},\n  requestParams, {\n    url,\n    postPayload: { form_data: formData } });\n\n\n  const clientMethod =\n  'GET' && isFeatureEnabled(FeatureFlag.CLIENT_CACHE) ?\n  SupersetClient.get :\n  SupersetClient.post;\n  return clientMethod(querySettings).then(({ json }) => {\n    // Make the legacy endpoint return a payload that corresponds to the\n    // V1 chart data endpoint response signature.\n    return {\n      result: [json] };\n\n  });\n};\n\nconst v1ChartDataRequest = async (\nformData,\nresultFormat,\nresultType,\nforce,\nrequestParams) =>\n{\n  const payload = buildV1ChartDataPayload({\n    formData,\n    resultType,\n    resultFormat,\n    force });\n\n\n  // The dashboard id is added to query params for tracking purposes\n  const qs = requestParams.dashboard_id ?\n  { dashboard_id: requestParams.dashboard_id } :\n  {};\n  const url = getChartDataUri({\n    path: '/api/v1/chart/data',\n    qs,\n    allowDomainSharding }).\n  toString();\n\n  const querySettings = _Object$assign({},\n  requestParams, {\n    url,\n    headers: { 'Content-Type': 'application/json' },\n    body: _JSON$stringify(payload) });\n\n  return SupersetClient.post(querySettings).then(({ json }) => {\n    return json;\n  });\n};\n\nexport async function getChartDataRequest({\n  formData,\n  resultFormat = 'json',\n  resultType = 'full',\n  force = false,\n  method = 'POST',\n  requestParams = {} })\n{\n  let querySettings = _Object$assign({},\n  requestParams);\n\n\n  if (allowDomainSharding) {\n    querySettings = _Object$assign({},\n    querySettings, {\n      mode: 'cors',\n      credentials: 'include' });\n\n  }\n\n  if (shouldUseLegacyApi(formData)) {\n    return legacyChartDataRequest(\n    formData,\n    resultFormat,\n    resultType,\n    force,\n    method,\n    querySettings);\n\n  }\n  return v1ChartDataRequest(\n  formData,\n  resultFormat,\n  resultType,\n  force,\n  querySettings);\n\n}\n\nexport function runAnnotationQuery(\nannotation,\ntimeout = 60,\nformData = null,\nkey,\nisDashboardRequest = false)\n{\n  return function (dispatch, getState) {var _context;\n    const sliceKey = key || _Object$keys(getState().charts)[0];\n    // make a copy of formData, not modifying original formData\n    const fd = _Object$assign({},\n    formData || getState().charts[sliceKey].latestQueryFormData);\n\n\n    if (!requiresQuery(annotation.sourceType)) {\n      return _Promise.resolve();\n    }\n\n    const granularity = fd.time_grain_sqla || fd.granularity;\n    fd.time_grain_sqla = granularity;\n    fd.granularity = granularity;\n    const overridesKeys = _Object$keys(annotation.overrides);\n    if (_includesInstanceProperty(overridesKeys).call(overridesKeys, 'since') || _includesInstanceProperty(overridesKeys).call(overridesKeys, 'until')) {\n      annotation.overrides = _Object$assign({},\n      annotation.overrides, {\n        time_range: null });\n\n    }\n    const sliceFormData = _reduceInstanceProperty(_context = _Object$keys(annotation.overrides)).call(_context,\n    (d, k) => _Object$assign({},\n    d, {\n      [k]: annotation.overrides[k] || fd[k] }),\n\n    {});\n\n\n    if (!isDashboardRequest && fd) {\n      const hasExtraFilters = fd.extra_filters && fd.extra_filters.length > 0;\n      sliceFormData.extra_filters = hasExtraFilters ?\n      fd.extra_filters :\n      undefined;\n    }\n\n    const isNative = annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE;\n    const url = getAnnotationJsonUrl(annotation.value, sliceFormData, isNative);\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    dispatch(annotationQueryStarted(annotation, controller, sliceKey));\n\n    return SupersetClient.get({\n      url,\n      signal,\n      timeout: timeout * 1000 }).\n\n    then(({ json }) =>\n    dispatch(annotationQuerySuccess(annotation, json, sliceKey))).\n\n    catch((response) =>\n    getClientErrorObject(response).then(err => {var _context2;\n      if (err.statusText === 'timeout') {\n        dispatch(\n        annotationQueryFailed(\n        annotation,\n        { error: 'Query Timeout' },\n        sliceKey));\n\n\n      } else if (_includesInstanceProperty(_context2 = (err.error || '').toLowerCase()).call(_context2, 'no data')) {\n        dispatch(annotationQuerySuccess(annotation, err, sliceKey));\n      } else if (err.statusText !== 'abort') {\n        dispatch(annotationQueryFailed(annotation, err, sliceKey));\n      }\n    }));\n\n  };\n}\n\nexport const TRIGGER_QUERY = 'TRIGGER_QUERY';\nexport function triggerQuery(value = true, key) {\n  return { type: TRIGGER_QUERY, value, key };\n}\n\n// this action is used for forced re-render without fetch data\nexport const RENDER_TRIGGERED = 'RENDER_TRIGGERED';\nexport function renderTriggered(value, key) {\n  return { type: RENDER_TRIGGERED, value, key };\n}\n\nexport const UPDATE_QUERY_FORM_DATA = 'UPDATE_QUERY_FORM_DATA';\nexport function updateQueryFormData(value, key) {\n  return { type: UPDATE_QUERY_FORM_DATA, value, key };\n}\n\n// in the sql lab -> explore flow, user can inline edit chart title,\n// then the chart will be assigned a new slice_id\nexport const UPDATE_CHART_ID = 'UPDATE_CHART_ID';\nexport function updateChartId(newId, key = 0) {\n  return { type: UPDATE_CHART_ID, newId, key };\n}\n\nexport const ADD_CHART = 'ADD_CHART';\nexport function addChart(chart, key) {\n  return { type: ADD_CHART, chart, key };\n}\n\nexport function exploreJSON(\nformData,\nforce = false,\ntimeout = 60,\nkey,\nmethod,\ndashboardId)\n{\n  return async dispatch => {\n    const logStart = Logger.getTimestamp();\n    const controller = new AbortController();\n\n    const requestParams = {\n      signal: controller.signal,\n      timeout: timeout * 1000 };\n\n    if (dashboardId) requestParams.dashboard_id = dashboardId;\n\n    const chartDataRequest = getChartDataRequest({\n      formData,\n      resultFormat: 'json',\n      resultType: 'full',\n      force,\n      method,\n      requestParams });\n\n\n    dispatch(chartUpdateStarted(controller, formData, key));\n\n    const chartDataRequestCaught = chartDataRequest.\n    then(response => {\n      // new API returns an object with an array of restults\n      // problem: response holds a list of results, when before we were just getting one result.\n      // How to make the entire app compatible with multiple results?\n      // For now just use the first result.\n      const result = response.result[0];\n      dispatch(\n      logEvent(LOG_ACTIONS_LOAD_CHART, {\n        slice_id: key,\n        is_cached: result.is_cached,\n        force_refresh: force,\n        row_count: result.rowcount,\n        datasource: formData.datasource,\n        start_offset: logStart,\n        ts: new Date().getTime(),\n        duration: Logger.getTimestamp() - logStart,\n        has_extra_filters:\n        formData.extra_filters && formData.extra_filters.length > 0,\n        viz_type: formData.viz_type,\n        data_age: result.is_cached ?\n        moment(new Date()).diff(moment.utc(result.cached_dttm)) :\n        null }));\n\n\n      return dispatch(chartUpdateSucceeded(result, key));\n    }).\n    catch(response => {\n      const appendErrorLog = (errorDetails, isCached) => {\n        dispatch(\n        logEvent(LOG_ACTIONS_LOAD_CHART, {\n          slice_id: key,\n          has_err: true,\n          is_cached: isCached,\n          error_details: errorDetails,\n          datasource: formData.datasource,\n          start_offset: logStart,\n          ts: new Date().getTime(),\n          duration: Logger.getTimestamp() - logStart }));\n\n\n      };\n\n      if (response.statusText === 'timeout') {\n        appendErrorLog('timeout');\n        return dispatch(\n        chartUpdateTimeout(response.statusText, timeout, key));\n\n      } else if (response.name === 'AbortError') {\n        appendErrorLog('abort');\n        return dispatch(chartUpdateStopped(key));\n      }\n      return getClientErrorObject(response).then(parsedResponse => {\n        // query is processed, but error out.\n        appendErrorLog(parsedResponse.error, parsedResponse.is_cached);\n        return dispatch(chartUpdateFailed(parsedResponse, key));\n      });\n    });\n\n    const annotationLayers = formData.annotation_layers || [];\n    const isDashboardRequest = dashboardId > 0;\n\n    return _Promise.all([\n    chartDataRequestCaught,\n    dispatch(triggerQuery(false, key)),\n    dispatch(updateQueryFormData(formData, key)),\n    ..._mapInstanceProperty(annotationLayers).call(annotationLayers, (x) =>\n    dispatch(\n    runAnnotationQuery(x, timeout, formData, key, isDashboardRequest)))]);\n\n\n\n  };\n}\n\nexport const GET_SAVED_CHART = 'GET_SAVED_CHART';\nexport function getSavedChart(\nformData,\nforce = false,\ntimeout = 60,\nkey,\ndashboardId)\n{\n  /*\n   * Perform a GET request to `/explore_json`.\n   *\n   * This will return the payload of a saved chart, optionally filtered by\n   * ad-hoc or extra filters from dashboards. Eg:\n   *\n   *  GET  /explore_json?{\"chart_id\":1}\n   *  GET  /explore_json?{\"chart_id\":1,\"extra_filters\":\"...\"}\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'GET', dashboardId);\n}\n\nexport const POST_CHART_FORM_DATA = 'POST_CHART_FORM_DATA';\nexport function postChartFormData(\nformData,\nforce = false,\ntimeout = 60,\nkey,\ndashboardId)\n{\n  /*\n   * Perform a POST request to `/explore_json`.\n   *\n   * This will post the form data to the endpoint, returning a new chart.\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'POST', dashboardId);\n}\n\nexport function redirectSQLLab(formData) {\n  return dispatch => {\n    getChartDataRequest({ formData, resultFormat: 'json', resultType: 'query' }).\n    then(({ result }) => {\n      const redirectUrl = '/superset/sqllab';\n      const payload = {\n        datasourceKey: formData.datasource,\n        sql: result[0].query };\n\n      postForm(redirectUrl, payload);\n    }).\n    catch(() =>\n    dispatch(addDangerToast(t('An error occurred while loading the SQL'))));\n\n  };\n}\n\nexport function refreshChart(chartKey, force, dashboardId) {\n  return (dispatch, getState) => {\n    const chart = (getState().charts || {})[chartKey];\n    const timeout = getState().dashboardInfo.common.conf.\n    SUPERSET_WEBSERVER_TIMEOUT;\n\n    if (\n    !chart.latestQueryFormData ||\n    _Object$keys(chart.latestQueryFormData).length === 0)\n    {\n      return;\n    }\n    dispatch(\n    postChartFormData(\n    chart.latestQueryFormData,\n    force,\n    timeout,\n    chart.id,\n    dashboardId));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_UPDATE_STARTED, \"CHART_UPDATE_STARTED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateStarted, \"chartUpdateStarted\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_SUCCEEDED, \"CHART_UPDATE_SUCCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateSucceeded, \"chartUpdateSucceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_STOPPED, \"CHART_UPDATE_STOPPED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateStopped, \"chartUpdateStopped\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_TIMEOUT, \"CHART_UPDATE_TIMEOUT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateTimeout, \"chartUpdateTimeout\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_FAILED, \"CHART_UPDATE_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateFailed, \"chartUpdateFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_RENDERING_FAILED, \"CHART_RENDERING_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartRenderingFailed, \"chartRenderingFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_RENDERING_SUCCEEDED, \"CHART_RENDERING_SUCCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartRenderingSucceeded, \"chartRenderingSucceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(REMOVE_CHART, \"REMOVE_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(removeChart, \"removeChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_SUCCESS, \"ANNOTATION_QUERY_SUCCESS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQuerySuccess, \"annotationQuerySuccess\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_STARTED, \"ANNOTATION_QUERY_STARTED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQueryStarted, \"annotationQueryStarted\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_FAILED, \"ANNOTATION_QUERY_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQueryFailed, \"annotationQueryFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(legacyChartDataRequest, \"legacyChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(v1ChartDataRequest, \"v1ChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(getChartDataRequest, \"getChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(runAnnotationQuery, \"runAnnotationQuery\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(TRIGGER_QUERY, \"TRIGGER_QUERY\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(triggerQuery, \"triggerQuery\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(RENDER_TRIGGERED, \"RENDER_TRIGGERED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(renderTriggered, \"renderTriggered\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(UPDATE_QUERY_FORM_DATA, \"UPDATE_QUERY_FORM_DATA\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(updateQueryFormData, \"updateQueryFormData\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(UPDATE_CHART_ID, \"UPDATE_CHART_ID\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(updateChartId, \"updateChartId\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ADD_CHART, \"ADD_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(addChart, \"addChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(exploreJSON, \"exploreJSON\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(GET_SAVED_CHART, \"GET_SAVED_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(getSavedChart, \"getSavedChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(POST_CHART_FORM_DATA, \"POST_CHART_FORM_DATA\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(postChartFormData, \"postChartFormData\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(redirectSQLLab, \"redirectSQLLab\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(refreshChart, \"refreshChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
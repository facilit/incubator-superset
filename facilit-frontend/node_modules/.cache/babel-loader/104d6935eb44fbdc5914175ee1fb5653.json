{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import \"core-js/modules/web.dom-collections.iterator\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _defineProperty from \"@babel/runtime-corejs3/helpers/defineProperty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport {\nFormGroup,\nInputGroup,\nForm,\nFormControl,\nLabel,\nOverlayTrigger,\nTooltip } from\n'react-bootstrap';\nimport Split from 'react-split';\nimport { t } from '@superset-ui/translation';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\n\nimport Button from '../../components/Button';\nimport Checkbox from '../../components/Checkbox';\nimport LimitControl from './LimitControl';\nimport TemplateParamsEditor from './TemplateParamsEditor';\nimport SouthPane from './SouthPane';\nimport SaveQuery from './SaveQuery';\nimport ScheduleQueryButton from './ScheduleQueryButton';\nimport EstimateQueryCostButton from './EstimateQueryCostButton';\nimport ShareSqlLabQuery from './ShareSqlLabQuery';\nimport Timer from '../../components/Timer';\nimport Hotkeys from '../../components/Hotkeys';\nimport SqlEditorLeftBar from './SqlEditorLeftBar';\nimport AceEditorWrapper from './AceEditorWrapper';\nimport {\nSTATE_BSSTYLE_MAP,\nSQL_EDITOR_GUTTER_HEIGHT,\nSQL_EDITOR_GUTTER_MARGIN,\nSQL_TOOLBAR_HEIGHT } from\n'../constants';\nimport RunQueryActionButton from './RunQueryActionButton';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst SQL_EDITOR_PADDING = 10;\nconst INITIAL_NORTH_PERCENT = 30;\nconst INITIAL_SOUTH_PERCENT = 70;\nconst SET_QUERY_EDITOR_SQL_DEBOUNCE_MS = 2000;\nconst VALIDATION_DEBOUNCE_MS = 600;\nconst WINDOW_RESIZE_THROTTLE_MS = 100;\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  database: PropTypes.object,\n  latestQuery: PropTypes.object,\n  tables: PropTypes.array.isRequired,\n  editorQueries: PropTypes.array.isRequired,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  hideLeftBar: PropTypes.bool,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\n\nconst defaultProps = {\n  database: null,\n  latestQuery: null,\n  hideLeftBar: false,\n  scheduleQueryWarning: null };\n\n\nclass SqlEditor extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context14, _context15;\n    super(props);_defineProperty(this, \"handleToggleAutocompleteEnabled\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    () => {\n      this.setState({ autocompleteEnabled: !this.state.autocompleteEnabled });\n    });this.state = { autorun: props.queryEditor.autorun, ctas: '', northPercent: props.queryEditor.northPercent || INITIAL_NORTH_PERCENT, southPercent: props.queryEditor.southPercent || INITIAL_SOUTH_PERCENT, sql: props.queryEditor.sql, autocompleteEnabled: true };this.sqlEditorRef = React.createRef();this.northPaneRef = React.createRef();this.elementStyle = _bindInstanceProperty(_context = this.elementStyle).call(_context, this);this.onResizeStart = _bindInstanceProperty(_context2 = this.onResizeStart).call(_context2, this);this.onResizeEnd = _bindInstanceProperty(_context3 = this.onResizeEnd).call(_context3, this);this.canValidateQuery = _bindInstanceProperty(_context4 = this.canValidateQuery).call(_context4, this);this.runQuery = _bindInstanceProperty(_context5 = this.runQuery).call(_context5, this);this.stopQuery = _bindInstanceProperty(_context6 = this.stopQuery).call(_context6, this);this.onSqlChanged = _bindInstanceProperty(_context7 = this.onSqlChanged).call(_context7, this);this.setQueryEditorSql = _bindInstanceProperty(_context8 = this.setQueryEditorSql).call(_context8, this);this.setQueryEditorSqlWithDebounce = debounce(_bindInstanceProperty(_context9 = this.setQueryEditorSql).call(_context9, this), SET_QUERY_EDITOR_SQL_DEBOUNCE_MS);this.queryPane = _bindInstanceProperty(_context10 = this.queryPane).call(_context10, this);this.getAceEditorAndSouthPaneHeights = _bindInstanceProperty(_context11 = this.getAceEditorAndSouthPaneHeights).call(_context11, this);this.getSqlEditorHeight = _bindInstanceProperty(_context12 = this.getSqlEditorHeight).call(_context12, this);this.requestValidation = debounce(_bindInstanceProperty(_context13 = this.requestValidation).call(_context13, this), VALIDATION_DEBOUNCE_MS);this.getQueryCostEstimate = _bindInstanceProperty(_context14 = this.getQueryCostEstimate).call(_context14, this);this.handleWindowResize = throttle(_bindInstanceProperty(_context15 = this.handleWindowResize).call(_context15, this), WINDOW_RESIZE_THROTTLE_MS);}UNSAFE_componentWillMount() {if (this.state.autorun) {this.setState({ autorun: false });this.props.actions.queryEditorSetAutorun(this.props.queryEditor, false);this.startQuery();}}componentDidMount() {// We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ height: this.getSqlEditorHeight() });window.addEventListener('resize', this.handleWindowResize);}componentWillUnmount() {window.removeEventListener('resize', this.handleWindowResize);}onResizeStart() {// Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';}onResizeEnd([northPercent, southPercent]) {this.setState({ northPercent, southPercent });if (this.northPaneRef.current && this.northPaneRef.current.clientHeight) {this.props.actions.persistEditorHeight(this.props.queryEditor, northPercent, southPercent);}}onSqlChanged(sql) {this.setState({ sql });this.setQueryEditorSqlWithDebounce(sql); // Request server-side validation of the query text\n    if (this.canValidateQuery()) {// NB. requestValidation is debounced\n      this.requestValidation();}} // One layer of abstraction for easy spying in unit tests\n  getSqlEditorHeight() {return this.sqlEditorRef.current ? this.sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2 : 0;} // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  getAceEditorAndSouthPaneHeights(height, northPercent, southPercent) {return { aceEditorHeight: height * northPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) - SQL_TOOLBAR_HEIGHT, southPaneHeight: height * southPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) };}getHotkeyConfig() {return [{ name: 'runQuery1', key: 'ctrl+r', descr: t('Run query'), func: this.runQuery }, { name: 'runQuery2', key: 'ctrl+enter', descr: t('Run query'), func: this.runQuery }, { name: 'newTab', key: 'ctrl+t', descr: t('New tab'), func: () => {this.props.actions.addQueryEditor(_Object$assign({}, this.props.queryEditor, { title: t('Untitled Query'), sql: '' }));} }, { name: 'stopQuery', key: 'ctrl+x', descr: t('Stop query'), func: this.stopQuery }];}setQueryEditorSql(sql) {this.props.actions.queryEditorSetSql(this.props.queryEditor, sql);}setQueryLimit(queryLimit) {this.props.actions.queryEditorSetQueryLimit(this.props.queryEditor, queryLimit);}getQueryCostEstimate() {if (this.props.database) {const qe = this.props.queryEditor;const query = { dbId: qe.dbId, sql: qe.selectedText ? qe.selectedText : this.state.sql, sqlEditorId: qe.id, schema: qe.schema, templateParams: qe.templateParams };this.props.actions.estimateQueryCost(query);}}handleWindowResize() {this.setState({ height: this.getSqlEditorHeight() });}elementStyle(dimension, elementSize, gutterSize) {return { [dimension]: \"calc(\" + elementSize + \"% - \" + (gutterSize + SQL_EDITOR_GUTTER_MARGIN) + \"px)\" };}requestValidation() {if (this.props.database) {const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: this.state.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams };\n\n      this.props.actions.validateQuery(query);\n    }\n  }\n  canValidateQuery() {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    const validatorMap = window.featureFlags.SQL_VALIDATORS_BY_ENGINE;\n    if (this.props.database && validatorMap != null) {\n      return validatorMap.hasOwnProperty(this.props.database.backend);\n    }\n    return false;\n  }\n  runQuery() {\n    if (this.props.database) {\n      this.startQuery();\n    }\n  }\n  startQuery(ctas = false) {\n    const qe = this.props.queryEditor;\n    const query = {\n      dbId: qe.dbId,\n      sql: qe.selectedText ? qe.selectedText : this.state.sql,\n      sqlEditorId: qe.id,\n      tab: qe.title,\n      schema: qe.schema,\n      tempTableName: ctas ? this.state.ctas : '',\n      templateParams: qe.templateParams,\n      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n      runAsync: this.props.database ?\n      this.props.database.allow_run_async :\n      false,\n      ctas,\n      updateTabState: !qe.selectedText };\n\n    this.props.actions.runQuery(query);\n    this.props.actions.setActiveSouthPaneTab('Results');\n  }\n  stopQuery() {var _context16;\n    if (\n    this.props.latestQuery &&\n    _indexOfInstanceProperty(_context16 = ['running', 'pending']).call(_context16, this.props.latestQuery.state) >= 0)\n    {\n      this.props.actions.postStopQuery(this.props.latestQuery);\n    }\n  }\n  createTableAs() {\n    this.startQuery(true);\n  }\n  ctasChanged(event) {\n    this.setState({ ctas: event.target.value });\n  }\n  queryPane() {\n    const hotkeys = this.getHotkeyConfig();\n    const {\n      aceEditorHeight,\n      southPaneHeight } =\n    this.getAceEditorAndSouthPaneHeights(\n    this.state.height,\n    this.state.northPercent,\n    this.state.southPercent);\n\n    return (\n      ___EmotionJSX(Split, {\n        expandToMin: true,\n        className: \"queryPane\",\n        sizes: [this.state.northPercent, this.state.southPercent],\n        elementStyle: this.elementStyle,\n        minSize: 200,\n        direction: \"vertical\",\n        gutterSize: SQL_EDITOR_GUTTER_HEIGHT,\n        onDragStart: this.onResizeStart,\n        onDragEnd: this.onResizeEnd },\n\n      ___EmotionJSX(\"div\", { ref: this.northPaneRef, className: \"north-pane\" },\n      ___EmotionJSX(AceEditorWrapper, {\n        actions: this.props.actions,\n        autocomplete: this.state.autocompleteEnabled,\n        onBlur: this.setQueryEditorSql,\n        onChange: this.onSqlChanged,\n        queryEditor: this.props.queryEditor,\n        sql: this.props.queryEditor.sql,\n        schemas: this.props.queryEditor.schemaOptions,\n        tables: this.props.queryEditor.tableOptions,\n        functionNames:\n        this.props.database ? this.props.database.function_names : [],\n\n        extendedTables: this.props.tables,\n        height: aceEditorHeight + \"px\",\n        hotkeys: hotkeys }),\n\n      this.renderEditorBottomBar(hotkeys)),\n\n      ___EmotionJSX(SouthPane, {\n        editorQueries: this.props.editorQueries,\n        latestQueryId: this.props.latestQuery && this.props.latestQuery.id,\n        dataPreviewQueries: this.props.dataPreviewQueries,\n        actions: this.props.actions,\n        height: southPaneHeight,\n        displayLimit: this.props.displayLimit })));\n\n\n\n  }\n  renderEditorBottomBar(hotkeys) {var _context19;\n    let ctasControls;\n    if (this.props.database && this.props.database.allow_ctas) {var _context17, _context18;\n      const ctasToolTip = t('Create table as with query results');\n      ctasControls =\n      ___EmotionJSX(FormGroup, null,\n      ___EmotionJSX(InputGroup, null,\n      ___EmotionJSX(FormControl, {\n        type: \"text\",\n        bsSize: \"small\",\n        className: \"input-sm\",\n        placeholder: t('new table name'),\n        onChange: _bindInstanceProperty(_context17 = this.ctasChanged).call(_context17, this) }),\n\n      ___EmotionJSX(InputGroup.Button, null,\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        disabled: this.state.ctas.length === 0,\n        onClick: _bindInstanceProperty(_context18 = this.createTableAs).call(_context18, this),\n        tooltip: ctasToolTip },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-table\" }), \" CTAS\"))));\n\n\n\n\n\n    }\n    const qe = this.props.queryEditor;\n    let limitWarning = null;\n    if (\n    this.props.latestQuery &&\n    this.props.latestQuery.results &&\n    this.props.latestQuery.results.displayLimitReached)\n    {\n      const tooltip =\n      ___EmotionJSX(Tooltip, { id: \"tooltip\" },\n      t(\"It appears that the number of rows in the query results displayed\\n           was limited on the server side to\\n           the %s limit.\",\n\n\n\n      this.props.latestQuery.rows));\n\n\n\n      limitWarning =\n      ___EmotionJSX(OverlayTrigger, { placement: \"left\", overlay: tooltip },\n      ___EmotionJSX(Label, { bsStyle: \"warning\" }, \"LIMIT\"));\n\n\n    }\n    const successful =\n    this.props.latestQuery && this.props.latestQuery.state === 'success';\n    const scheduleToolTip = successful ?\n    t('Schedule the query periodically') :\n    t('You must run the query successfully first');\n    return (\n      ___EmotionJSX(\"div\", { className: \"sql-toolbar\", id: \"js-sql-toolbar\" },\n      ___EmotionJSX(\"div\", { className: \"leftItems\" },\n      ___EmotionJSX(Form, { inline: true },\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(RunQueryActionButton, {\n        allowAsync:\n        this.props.database ?\n        this.props.database.allow_run_async :\n        false,\n\n        dbId: qe.dbId,\n        queryState:\n        this.props.latestQuery && this.props.latestQuery.state,\n\n        runQuery: this.runQuery,\n        selectedText: qe.selectedText,\n        stopQuery: this.stopQuery,\n        sql: this.state.sql })),\n\n\n      isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n      this.props.database &&\n      this.props.database.allows_cost_estimate &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(EstimateQueryCostButton, {\n        dbId: qe.dbId,\n        schema: qe.schema,\n        sql: qe.sql,\n        getEstimate: this.getQueryCostEstimate,\n        queryCostEstimate: qe.queryCostEstimate,\n        selectedText: qe.selectedText,\n        tooltip: t('Estimate the cost before running a query') })),\n\n\n\n      isFeatureEnabled(FeatureFlag.SCHEDULED_QUERIES) &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(ScheduleQueryButton, {\n        defaultLabel: qe.title,\n        sql: qe.sql,\n        onSchedule: this.props.actions.scheduleQuery,\n        schema: qe.schema,\n        dbId: qe.dbId,\n        scheduleQueryWarning: this.props.scheduleQueryWarning,\n        tooltip: scheduleToolTip,\n        disabled: !successful })),\n\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(SaveQuery, {\n        query: qe,\n        defaultLabel:\n        qe.description == null ? qe.title : qe.description,\n\n        onSave: this.props.actions.saveQuery,\n        onUpdate: this.props.actions.updateSavedQuery,\n        saveQueryWarning: this.props.saveQueryWarning })),\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(ShareSqlLabQuery, { queryEditor: qe })),\n\n      ctasControls && ___EmotionJSX(\"span\", null, ctasControls),\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(LimitControl, {\n        value:\n        this.props.queryEditor.queryLimit !== undefined ?\n        this.props.queryEditor.queryLimit :\n        this.props.defaultQueryLimit,\n\n        defaultQueryLimit: this.props.defaultQueryLimit,\n        maxRow: this.props.maxRow,\n        onChange: _bindInstanceProperty(_context19 = this.setQueryLimit).call(_context19, this) })),\n\n\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(Hotkeys, { header: t('Keyboard shortcuts'), hotkeys: hotkeys })))),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"rightItems\" },\n      ___EmotionJSX(Button, {\n        className: \"autocomplete\",\n        onClick: this.handleToggleAutocompleteEnabled },\n\n      ___EmotionJSX(Checkbox, { checked: this.state.autocompleteEnabled }), ' ',\n      t('Autocomplete')),\n      ' ',\n      ___EmotionJSX(TemplateParamsEditor, {\n        language: \"json\",\n        onChange: params => {\n          this.props.actions.queryEditorSetTemplateParams(qe, params);\n        },\n        code: qe.templateParams }),\n\n      limitWarning,\n      this.props.latestQuery &&\n      ___EmotionJSX(Timer, {\n        startTime: this.props.latestQuery.startDttm,\n        endTime: this.props.latestQuery.endDttm,\n        state: STATE_BSSTYLE_MAP[this.props.latestQuery.state],\n        isRunning: this.props.latestQuery.state === 'running' }))));\n\n\n\n\n\n  }\n  render() {\n    return (\n      ___EmotionJSX(\"div\", { ref: this.sqlEditorRef, className: \"SqlEditor\" },\n      ___EmotionJSX(CSSTransition, {\n        classNames: \"schemaPane\",\n        in: !this.props.hideLeftBar,\n        timeout: 300 },\n\n      ___EmotionJSX(\"div\", { className: \"schemaPane\" },\n      ___EmotionJSX(SqlEditorLeftBar, {\n        database: this.props.database,\n        queryEditor: this.props.queryEditor,\n        tables: this.props.tables,\n        actions: this.props.actions }))),\n\n\n\n      this.queryPane()));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}SqlEditor.defaultProps = defaultProps;\nSqlEditor.propTypes = propTypes;const _default =\n\nSqlEditor;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SQL_EDITOR_PADDING, \"SQL_EDITOR_PADDING\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_NORTH_PERCENT, \"INITIAL_NORTH_PERCENT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_SOUTH_PERCENT, \"INITIAL_SOUTH_PERCENT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SET_QUERY_EDITOR_SQL_DEBOUNCE_MS, \"SET_QUERY_EDITOR_SQL_DEBOUNCE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(VALIDATION_DEBOUNCE_MS, \"VALIDATION_DEBOUNCE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(WINDOW_RESIZE_THROTTLE_MS, \"WINDOW_RESIZE_THROTTLE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SqlEditor, \"SqlEditor\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/web.dom-collections.iterator\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * software distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport { addChart, removeChart, refreshChart } from '../../chart/chartAction';\nimport { chart as initChart } from '../../chart/chartReducer';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport {\naddFilter,\nremoveFilter,\nupdateDirectPathToFilter } from\n'../../dashboard/actions/dashboardFilters';\nimport { applyDefaultFormData } from '../../explore/store';\nimport getClientErrorObject from '../../utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from '../util/constants';\nimport {\naddSuccessToast,\naddWarningToast,\naddDangerToast } from\n'../../messageToasts/actions';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from '../actions/dashboardLayout';\nimport serializeActiveFilterValues from '../util/serializeActiveFilterValues';\nimport serializeFilterScopes from '../util/serializeFilterScopes';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { safeStringify } from '../../utils/safeStringify';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: FAVESTAR_BASE_URL + \"/\" + id + \"/count/\" }).\n\n    then(({ json }) => {\n      if (json.count > 0) dispatch(toggleFaveStar(true));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(\n    t(\n    'There was an issue fetching the favorite status of this dashboard.'))));\n\n\n\n\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: FAVESTAR_BASE_URL + \"/\" + id + \"/\" + urlSuffix + \"/\" }).\n\n    then(() => {\n      dispatch(toggleFaveStar(!isStarred));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(t('There was an issue favoriting this dashboard.'))));\n\n\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: \"/api/v1/dashboard/\" + id,\n      headers: { 'Content-Type': 'application/json' },\n      body: _JSON$stringify({\n        published: isPublished }) }).\n\n\n    then(() => {\n      const nowPublished = isPublished ? 'published' : 'hidden';\n      dispatch(addSuccessToast(t(\"This dashboard is now \" + nowPublished)));\n      dispatch(togglePublished(isPublished));\n    }).\n    catch(() => {\n      dispatch(\n      addDangerToast(\n      t('You do not have permissions to edit this dashboard.')));\n\n\n    });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave() {\n  return { type: ON_SAVE };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess() {\n  return dispatch => {\n    dispatch(onSave());\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  const path = saveType === SAVE_TYPE_OVERWRITE ? 'save_dash' : 'copy_dash';\n\n  return (dispatch, getState) => {var _context;\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    _forEachInstanceProperty(_context = _Object$values(dashboardFilters)).call(_context, filter => {var _context2, _context3;\n      const { chartId } = filter;\n      const componentId = _sliceInstanceProperty(_context2 = filter.directPathToFilter).call(_context2).pop();\n      const directPathToFilter = _sliceInstanceProperty(_context3 = layout[componentId].parents || []).call(_context3);\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    return SupersetClient.post({\n      endpoint: \"/superset/\" + path + \"/\" + id + \"/\",\n      postPayload: {\n        data: _Object$assign({},\n        data, {\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes) }) } }).\n\n\n\n    then(response => {\n      dispatch(saveDashboardRequestSuccess());\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    }).\n    catch((response) =>\n    getClientErrorObject(response).then(({ error }) =>\n    dispatch(\n    addDangerToast(\n    t(\n    'Sorry, there was an error saving this dashboard: ') + \" \" +\n    error))));\n\n\n\n\n  };\n}\n\nexport function fetchCharts(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch, getState) => {\n    if (!interval) {\n      _forEachInstanceProperty(chartList).call(chartList, (chartKey) =>\n      dispatch(refreshChart(chartKey, force, dashboardId)));\n\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n      meta.stagger_refresh === undefined ?\n      true :\n      meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh ?\n    refreshTime / (chartList.length - 1) :\n    0;\n    _forEachInstanceProperty(chartList).call(chartList, (chartKey, i) => {\n      _setTimeout(\n      () => dispatch(refreshChart(chartKey, force, dashboardId)),\n      delay * i);\n\n    });\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane(builderPaneType) {\n  return { type: SHOW_BUILDER_PANE, builderPaneType };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n      addWarningToast(\n      'Sorry, there is no chart definition associated with the chart trying to be added.'));\n\n\n    }\n    const form_data = _Object$assign({},\n    selectedSlice.form_data, {\n      slice_id: selectedSlice.slice_id });\n\n    const newChart = _Object$assign({},\n    initChart, {\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data) });\n\n\n    return _Promise.all([\n    dispatch(addChart(newChart, id)),\n    dispatch(fetchDatasourceMetadata(form_data.datasource))]).\n    then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport function unsetFocusedFilterField() {\n  // same ACTION as setFocusedFilterField, without arguments\n  return { type: SET_FOCUSED_FILTER_FIELD };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded } };\n\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n    addWarningToast(\"You have used all \" +\n    historyLength + \" undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.\"));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FAVESTAR_BASE_URL, \"FAVESTAR_BASE_URL\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FETCH_FAVE_STAR, \"FETCH_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_FAVE_STAR, \"SAVE_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorSchemeAndUnsavedChanges, \"setColorSchemeAndUnsavedChanges\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js"],"names":["ActionCreators","UndoActionCreators","t","SupersetClient","addChart","removeChart","refreshChart","chart","initChart","fetchDatasourceMetadata","addFilter","removeFilter","updateDirectPathToFilter","applyDefaultFormData","getClientErrorObject","SAVE_TYPE_OVERWRITE","addSuccessToast","addWarningToast","addDangerToast","UPDATE_COMPONENTS_PARENTS_LIST","serializeActiveFilterValues","serializeFilterScopes","getActiveFilters","safeStringify","SET_UNSAVED_CHANGES","setUnsavedChanges","hasUnsavedChanges","type","payload","ADD_SLICE","addSlice","slice","REMOVE_SLICE","removeSlice","sliceId","FAVESTAR_BASE_URL","TOGGLE_FAVE_STAR","toggleFaveStar","isStarred","FETCH_FAVE_STAR","fetchFaveStar","id","fetchFaveStarThunk","dispatch","get","endpoint","then","json","count","catch","SAVE_FAVE_STAR","saveFaveStar","saveFaveStarThunk","urlSuffix","TOGGLE_PUBLISHED","togglePublished","isPublished","savePublished","savePublishedThunk","put","headers","body","published","nowPublished","TOGGLE_EXPAND_SLICE","toggleExpandSlice","UPDATE_CSS","updateCss","css","SET_EDIT_MODE","setEditMode","editMode","ON_CHANGE","onChange","ON_SAVE","onSave","SET_REFRESH_FREQUENCY","setRefreshFrequency","refreshFrequency","isPersistent","saveDashboardRequestSuccess","clearHistory","saveDashboardRequest","data","saveType","path","getState","dashboardFilters","dashboardLayout","layout","present","filter","chartId","componentId","directPathToFilter","pop","parents","push","serializedFilters","serializedFilterScopes","post","postPayload","default_filters","filter_scopes","response","error","fetchCharts","chartList","force","interval","dashboardId","chartKey","metadata","meta","dashboardInfo","refreshTime","Math","max","stagger_time","stagger_refresh","undefined","delay","length","i","SHOW_BUILDER_PANE","showBuilderPane","builderPaneType","addSliceToDashboard","component","sliceEntities","selectedSlice","slices","form_data","slice_id","newChart","formData","all","datasource","viz_type","removeSliceFromDashboard","sliceEntity","SET_COLOR_SCHEME","setColorScheme","colorScheme","setColorSchemeAndUnsavedChanges","SET_DIRECT_PATH","setDirectPathToChild","SET_FOCUSED_FILTER_FIELD","setFocusedFilterField","column","unsetFocusedFilterField","SET_MAX_UNDO_HISTORY_EXCEEDED","setMaxUndoHistoryExceeded","maxUndoHistoryExceeded","maxUndoHistoryToast","historyLength","past"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport { addChart, removeChart, refreshChart } from '../../chart/chartAction';\nimport { chart as initChart } from '../../chart/chartReducer';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport {\n  addFilter,\n  removeFilter,\n  updateDirectPathToFilter,\n} from '../../dashboard/actions/dashboardFilters';\nimport { applyDefaultFormData } from '../../explore/store';\nimport getClientErrorObject from '../../utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from '../util/constants';\nimport {\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n} from '../../messageToasts/actions';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from '../actions/dashboardLayout';\nimport serializeActiveFilterValues from '../util/serializeActiveFilterValues';\nimport serializeFilterScopes from '../util/serializeFilterScopes';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { safeStringify } from '../../utils/safeStringify';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/count/`,\n    })\n      .then(({ json }) => {\n        if (json.count > 0) dispatch(toggleFaveStar(true));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(\n            t(\n              'There was an issue fetching the favorite status of this dashboard.',\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: `${FAVESTAR_BASE_URL}/${id}/${urlSuffix}/`,\n    })\n      .then(() => {\n        dispatch(toggleFaveStar(!isStarred));\n      })\n      .catch(() =>\n        dispatch(\n          addDangerToast(t('There was an issue favoriting this dashboard.')),\n        ),\n      );\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${id}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        published: isPublished,\n      }),\n    })\n      .then(() => {\n        const nowPublished = isPublished ? 'published' : 'hidden';\n        dispatch(addSuccessToast(t(`This dashboard is now ${nowPublished}`)));\n        dispatch(togglePublished(isPublished));\n      })\n      .catch(() => {\n        dispatch(\n          addDangerToast(\n            t('You do not have permissions to edit this dashboard.'),\n          ),\n        );\n      });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave() {\n  return { type: ON_SAVE };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess() {\n  return dispatch => {\n    dispatch(onSave());\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  const path = saveType === SAVE_TYPE_OVERWRITE ? 'save_dash' : 'copy_dash';\n\n  return (dispatch, getState) => {\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    Object.values(dashboardFilters).forEach(filter => {\n      const { chartId } = filter;\n      const componentId = filter.directPathToFilter.slice().pop();\n      const directPathToFilter = (layout[componentId].parents || []).slice();\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    return SupersetClient.post({\n      endpoint: `/superset/${path}/${id}/`,\n      postPayload: {\n        data: {\n          ...data,\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes),\n        },\n      },\n    })\n      .then(response => {\n        dispatch(saveDashboardRequestSuccess());\n        dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n        return response;\n      })\n      .catch(response =>\n        getClientErrorObject(response).then(({ error }) =>\n          dispatch(\n            addDangerToast(\n              `${t(\n                'Sorry, there was an error saving this dashboard: ',\n              )} ${error}`,\n            ),\n          ),\n        ),\n      );\n  };\n}\n\nexport function fetchCharts(\n  chartList = [],\n  force = false,\n  interval = 0,\n  dashboardId,\n) {\n  return (dispatch, getState) => {\n    if (!interval) {\n      chartList.forEach(chartKey =>\n        dispatch(refreshChart(chartKey, force, dashboardId)),\n      );\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n        meta.stagger_refresh === undefined\n          ? true\n          : meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh\n      ? refreshTime / (chartList.length - 1)\n      : 0;\n    chartList.forEach((chartKey, i) => {\n      setTimeout(\n        () => dispatch(refreshChart(chartKey, force, dashboardId)),\n        delay * i,\n      );\n    });\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane(builderPaneType) {\n  return { type: SHOW_BUILDER_PANE, builderPaneType };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n        addWarningToast(\n          'Sorry, there is no chart definition associated with the chart trying to be added.',\n        ),\n      );\n    }\n    const form_data = {\n      ...selectedSlice.form_data,\n      slice_id: selectedSlice.slice_id,\n    };\n    const newChart = {\n      ...initChart,\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data),\n    };\n\n    return Promise.all([\n      dispatch(addChart(newChart, id)),\n      dispatch(fetchDatasourceMetadata(form_data.datasource)),\n    ]).then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport function unsetFocusedFilterField() {\n  // same ACTION as setFocusedFilterField, without arguments\n  return { type: SET_FOCUSED_FILTER_FIELD };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded },\n  };\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n      addWarningToast(\n        `You have used all ${historyLength} undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.`,\n      ),\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
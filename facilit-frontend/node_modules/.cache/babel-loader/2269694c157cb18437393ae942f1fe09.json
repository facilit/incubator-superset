{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\nhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { t } from '@superset-ui/translation';\n\nimport ExploreChartPanel from './ExploreChartPanel';\nimport ControlPanelsContainer from './ControlPanelsContainer';\nimport SaveModal from './SaveModal';\nimport QueryAndSaveBtns from './QueryAndSaveBtns';\nimport { getExploreLongUrl } from '../exploreUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\nimport { getFormDataFromControls } from '../controlUtils';\nimport { chartPropShape } from '../../dashboard/util/propShapes';\nimport * as exploreActions from '../actions/exploreActions';\nimport * as saveModalActions from '../actions/saveModalActions';\nimport * as chartActions from '../../chart/chartAction';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport * as logActions from '../../logger/actions/';\nimport {\nLOG_ACTIONS_MOUNT_EXPLORER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS } from\n'../../logger/LogUtils';\nimport Hotkeys from '../../components/Hotkeys';\n\n// Prolly need to move this to a global context\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";const keymap = {\n  RUN: 'ctrl + r, ctrl + enter',\n  SAVE: 'ctrl + s' };\n\n\nconst getHotKeys = () => {var _context;return (\n    _mapInstanceProperty(_context = _Object$keys(keymap)).call(_context, k => ({\n      name: k,\n      descr: keymap[k],\n      key: k })));};\n\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string };\n\n\nclass ExploreViewContainer extends React.Component {\n  constructor(props) {var _context2, _context3, _context4, _context5, _context6, _context7, _context8;\n    super(props);\n\n    this.state = {\n      height: this.getHeight(),\n      width: this.getWidth(),\n      showModal: false,\n      chartIsStale: false,\n      refreshOverlayVisible: false };\n\n\n    this.addHistory = _bindInstanceProperty(_context2 = this.addHistory).call(_context2, this);\n    this.handleResize = _bindInstanceProperty(_context3 = this.handleResize).call(_context3, this);\n    this.handlePopstate = _bindInstanceProperty(_context4 = this.handlePopstate).call(_context4, this);\n    this.onStop = _bindInstanceProperty(_context5 = this.onStop).call(_context5, this);\n    this.onQuery = _bindInstanceProperty(_context6 = this.onQuery).call(_context6, this);\n    this.toggleModal = _bindInstanceProperty(_context7 = this.toggleModal).call(_context7, this);\n    this.handleKeydown = _bindInstanceProperty(_context8 = this.handleKeydown).call(_context8, this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('popstate', this.handlePopstate);\n    document.addEventListener('keydown', this.handleKeydown);\n    this.addHistory({ isReplace: true });\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n\n    // Trigger the chart if there are no errors\n    const { chart } = this.props;\n    if (!this.hasErrors()) {\n      this.props.actions.triggerQuery(true, this.props.chart.id);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    nextProps.controls.viz_type.value !== this.props.controls.viz_type.value)\n    {\n      this.props.actions.resetControls();\n    }\n    if (\n    nextProps.controls.datasource && (\n    this.props.controls.datasource == null ||\n    nextProps.controls.datasource.value !==\n    this.props.controls.datasource.value))\n    {\n      fetchDatasourceMetadata(nextProps.form_data.datasource, true);\n    }\n\n    const changedControlKeys = this.findChangedControlKeys(\n    this.props.controls,\n    nextProps.controls);\n\n    if (this.hasDisplayControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.updateQueryFormData(\n      getFormDataFromControls(nextProps.controls),\n      this.props.chart.id);\n\n      this.props.actions.renderTriggered(\n      new Date().getTime(),\n      this.props.chart.id);\n\n    }\n    if (this.hasQueryControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n      this.setState({ chartIsStale: true, refreshOverlayVisible: true });\n    }\n  }\n\n  /* eslint no-unused-vars: 0 */\n  componentDidUpdate(prevProps, prevState) {\n    const changedControlKeys = this.findChangedControlKeys(\n    prevProps.controls,\n    this.props.controls);\n\n    if (\n    this.hasDisplayControlChanged(changedControlKeys, this.props.controls))\n    {\n      this.addHistory({});\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('popstate', this.handlePopstate);\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  onQuery() {\n    // remove alerts when query\n    this.props.actions.removeControlPanelAlert();\n    this.props.actions.triggerQuery(true, this.props.chart.id);\n\n    this.setState({ chartIsStale: false, refreshOverlayVisible: false });\n    this.addHistory({});\n  }\n\n  onStop() {\n    if (this.props.chart && this.props.chart.queryController) {\n      this.props.chart.queryController.abort();\n    }\n  }\n\n  getWidth() {\n    return window.innerWidth + \"px\";\n  }\n\n  getHeight() {\n    if (this.props.forcedHeight) {\n      return this.props.forcedHeight + 'px';\n    }\n    const navHeight = this.props.standalone ? 0 : 90;\n    return window.innerHeight - navHeight + \"px\";\n  }\n\n  handleKeydown(event) {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isEnter = event.key === 'Enter' || event.keyCode === 13;\n      const isS = event.key === 's' || event.keyCode === 83;\n      if (isEnter) {\n        this.onQuery();\n      } else if (isS) {\n        if (_sliceInstanceProperty(this.props)) {\n          this.props.actions.\n          saveSlice(this.props.form_data, {\n            action: 'overwrite',\n            slice_id: _sliceInstanceProperty(this.props).slice_id,\n            slice_name: _sliceInstanceProperty(this.props).slice_name,\n            add_to_dash: 'noSave',\n            goto_dash: false }).\n\n          then(({ data }) => {\n            window.location = _sliceInstanceProperty(data).slice_url;\n          });\n        }\n      }\n    }\n  }\n\n  findChangedControlKeys(prevControls, currentControls) {var _context9;\n    return _filterInstanceProperty(_context9 = _Object$keys(currentControls)).call(_context9,\n    (key) =>\n    typeof prevControls[key] !== 'undefined' &&\n    !areObjectsEqual(currentControls[key].value, prevControls[key].value));\n\n  }\n\n  hasDisplayControlChanged(changedControlKeys, currentControls) {\n    return _someInstanceProperty(changedControlKeys).call(changedControlKeys, key => currentControls[key].renderTrigger);\n  }\n\n  hasQueryControlChanged(changedControlKeys, currentControls) {\n    return _someInstanceProperty(changedControlKeys).call(changedControlKeys,\n    (key) =>\n    !currentControls[key].renderTrigger &&\n    !currentControls[key].dontRefreshOnChange);\n\n  }\n\n  addHistory({ isReplace = false, title }) {\n    const payload = _Object$assign({}, this.props.form_data);\n    const longUrl = getExploreLongUrl(this.props.form_data, null, false);\n    try {\n      if (isReplace) {\n        history.replaceState(payload, title, longUrl);\n      } else {\n        history.pushState(payload, title, longUrl);\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\n      'Failed at altering browser history',\n      payload,\n      title,\n      longUrl);\n\n    }\n\n    // it seems some browsers don't support pushState title attribute\n    if (title) {\n      document.title = title;\n    }\n  }\n\n  handleResize() {\n    clearTimeout(this.resizeTimer);\n    this.resizeTimer = _setTimeout(() => {\n      this.setState({ height: this.getHeight(), width: this.getWidth() });\n    }, 250);\n  }\n\n  handlePopstate() {\n    const formData = history.state;\n    if (formData && _Object$keys(formData).length) {\n      this.props.actions.setExploreControls(formData);\n      this.props.actions.postChartFormData(\n      formData,\n      false,\n      this.props.timeout,\n      this.props.chart.id);\n\n    }\n  }\n\n  toggleModal() {\n    this.setState({ showModal: !this.state.showModal });\n  }\n  hasErrors() {var _context10;\n    const ctrls = this.props.controls;\n    return _someInstanceProperty(_context10 = _Object$keys(ctrls)).call(_context10,\n    k => ctrls[k].validationErrors && ctrls[k].validationErrors.length > 0);\n\n  }\n  renderErrorMessage() {\n    // Returns an error message as a node if any errors are in the store\n    const errors = [];\n    const ctrls = this.props.controls;\n    for (const controlName in this.props.controls) {\n      const control = this.props.controls[controlName];\n      if (control.validationErrors && control.validationErrors.length > 0) {\n        errors.push(\n        ___EmotionJSX(\"div\", { key: controlName, __source: { fileName: _jsxFileName, lineNumber: 296 }, __self: this },\n        t('Control labeled '),\n        ___EmotionJSX(\"strong\", { __source: { fileName: _jsxFileName, lineNumber: 298 }, __self: this }, \" \\\"\" + control.label + \"\\\" \"),\n        control.validationErrors.join('. ')));\n\n\n      }\n    }\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = ___EmotionJSX(\"div\", { style: { textAlign: 'left' }, __source: { fileName: _jsxFileName, lineNumber: 306 }, __self: this }, errors);\n    }\n    return errorMessage;\n  }\n  renderChartContainer() {\n    return (\n      ___EmotionJSX(ExploreChartPanel, _extends({\n        width: this.state.width,\n        height: this.state.height },\n      this.props, {\n        errorMessage: this.renderErrorMessage(),\n        refreshOverlayVisible: this.state.refreshOverlayVisible,\n        addHistory: this.addHistory,\n        onQuery: this.onQuery, __source: { fileName: _jsxFileName, lineNumber: 312 }, __self: this })));\n\n\n  }\n\n  render() {\n    if (this.props.standalone) {\n      return this.renderChartContainer();\n    }\n    return (\n      ___EmotionJSX(\"div\", {\n        id: \"explore-container\",\n        className: \"container-fluid\",\n        style: { height: this.state.height, overflow: 'hidden' }, __source: { fileName: _jsxFileName, lineNumber: 329 }, __self: this },\n\n      this.state.showModal &&\n      ___EmotionJSX(SaveModal, {\n        onHide: this.toggleModal,\n        actions: this.props.actions,\n        form_data: this.props.form_data,\n        sliceName: this.props.sliceName, __source: { fileName: _jsxFileName, lineNumber: 335 }, __self: this }),\n\n\n      ___EmotionJSX(\"div\", { className: \"row\", __source: { fileName: _jsxFileName, lineNumber: 342 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"col-sm-4\", __source: { fileName: _jsxFileName, lineNumber: 343 }, __self: this },\n      ___EmotionJSX(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center' }, __source: { fileName: _jsxFileName, lineNumber: 344 }, __self: this },\n\n\n      ___EmotionJSX(QueryAndSaveBtns, {\n        canAdd: !!(this.props.can_add || this.props.can_overwrite),\n        onQuery: this.onQuery,\n        onSave: this.toggleModal,\n        onStop: this.onStop,\n        loading: this.props.chart.chartStatus === 'loading',\n        chartIsStale: this.state.chartIsStale,\n        errorMessage: this.renderErrorMessage(),\n        datasourceType: this.props.datasource_type, __source: { fileName: _jsxFileName, lineNumber: 351 }, __self: this }),\n\n      ___EmotionJSX(\"div\", { className: \"m-l-5 text-muted\", __source: { fileName: _jsxFileName, lineNumber: 361 }, __self: this },\n      ___EmotionJSX(Hotkeys, {\n        header: \"Keyboard shortcuts\",\n        hotkeys: getHotKeys(),\n        placement: \"right\", __source: { fileName: _jsxFileName, lineNumber: 362 }, __self: this }))),\n\n\n\n      ___EmotionJSX(\"br\", { __source: { fileName: _jsxFileName, lineNumber: 369 }, __self: this }),\n      ___EmotionJSX(ControlPanelsContainer, {\n        actions: this.props.actions,\n        form_data: this.props.form_data,\n        controls: this.props.controls,\n        datasource_type: this.props.datasource_type,\n        isDatasourceMetaLoading: this.props.isDatasourceMetaLoading, __source: { fileName: _jsxFileName, lineNumber: 370 }, __self: this })),\n\n\n      ___EmotionJSX(\"div\", { className: \"col-sm-8\", __source: { fileName: _jsxFileName, lineNumber: 378 }, __self: this }, this.renderChartContainer()))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const { explore, charts, impressionId } = state;\n  const form_data = getFormDataFromControls(explore.controls);\n  const chartKey = _Object$keys(charts)[0];\n  const chart = charts[chartKey];\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource: explore.datasource,\n    datasource_type: explore.datasource.type,\n    datasourceId: explore.datasource_id,\n    controls: explore.controls,\n    can_overwrite: !!explore.can_overwrite,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    column_formats: explore.datasource ?\n    explore.datasource.column_formats :\n    null,\n    containerId: _sliceInstanceProperty(explore) ? \"slice-container-\" +\n    _sliceInstanceProperty(explore).slice_id :\n    'slice-container',\n    isStarred: explore.isStarred,\n    slice: _sliceInstanceProperty(explore),\n    sliceName: explore.sliceName,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: form_data.datasource_name,\n    vizType: form_data.viz_type,\n    standalone: explore.standalone,\n    forcedHeight: explore.forced_height,\n    chart,\n    timeout: explore.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    impressionId };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = _Object$assign({},\n  exploreActions, {},\n  saveModalActions, {},\n  chartActions, {},\n  logActions);\n\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}\n\nexport { ExploreViewContainer };const _default =\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nExploreViewContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(keymap, \"keymap\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(getHotKeys, \"getHotKeys\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(ExploreViewContainer, \"ExploreViewContainer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx"],"names":["React","PropTypes","bindActionCreators","connect","t","ExploreChartPanel","ControlPanelsContainer","SaveModal","QueryAndSaveBtns","getExploreLongUrl","areObjectsEqual","getFormDataFromControls","chartPropShape","exploreActions","saveModalActions","chartActions","fetchDatasourceMetadata","logActions","LOG_ACTIONS_MOUNT_EXPLORER","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","Hotkeys","keymap","RUN","SAVE","getHotKeys","k","name","descr","key","propTypes","actions","object","isRequired","datasource_type","string","isDatasourceMetaLoading","bool","chart","slice","sliceName","controls","forcedHeight","form_data","standalone","timeout","number","impressionId","ExploreViewContainer","Component","constructor","props","state","height","getHeight","width","getWidth","showModal","chartIsStale","refreshOverlayVisible","addHistory","handleResize","handlePopstate","onStop","onQuery","toggleModal","handleKeydown","componentDidMount","window","addEventListener","document","isReplace","logEvent","hasErrors","triggerQuery","id","UNSAFE_componentWillReceiveProps","nextProps","viz_type","value","resetControls","datasource","changedControlKeys","findChangedControlKeys","hasDisplayControlChanged","updateQueryFormData","renderTriggered","Date","getTime","hasQueryControlChanged","setState","componentDidUpdate","prevProps","prevState","componentWillUnmount","removeEventListener","removeControlPanelAlert","queryController","abort","innerWidth","navHeight","innerHeight","event","controlOrCommand","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","action","slice_id","slice_name","add_to_dash","goto_dash","then","data","location","slice_url","prevControls","currentControls","renderTrigger","dontRefreshOnChange","title","payload","longUrl","history","replaceState","pushState","e","console","warn","clearTimeout","resizeTimer","formData","length","setExploreControls","postChartFormData","ctrls","validationErrors","renderErrorMessage","errors","controlName","control","push","label","join","errorMessage","textAlign","renderChartContainer","render","overflow","display","flexDirection","alignItems","can_add","can_overwrite","chartStatus","mapStateToProps","explore","charts","chartKey","type","datasourceId","datasource_id","can_download","column_formats","containerId","isStarred","triggerRender","table_name","datasource_name","vizType","forced_height","common","conf","SUPERSET_WEBSERVER_TIMEOUT","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { t } from '@superset-ui/translation';\n\nimport ExploreChartPanel from './ExploreChartPanel';\nimport ControlPanelsContainer from './ControlPanelsContainer';\nimport SaveModal from './SaveModal';\nimport QueryAndSaveBtns from './QueryAndSaveBtns';\nimport { getExploreLongUrl } from '../exploreUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\nimport { getFormDataFromControls } from '../controlUtils';\nimport { chartPropShape } from '../../dashboard/util/propShapes';\nimport * as exploreActions from '../actions/exploreActions';\nimport * as saveModalActions from '../actions/saveModalActions';\nimport * as chartActions from '../../chart/chartAction';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport * as logActions from '../../logger/actions/';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from '../../logger/LogUtils';\nimport Hotkeys from '../../components/Hotkeys';\n\n// Prolly need to move this to a global context\nconst keymap = {\n  RUN: 'ctrl + r, ctrl + enter',\n  SAVE: 'ctrl + s',\n};\n\nconst getHotKeys = () =>\n  Object.keys(keymap).map(k => ({\n    name: k,\n    descr: keymap[k],\n    key: k,\n  }));\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n};\n\nclass ExploreViewContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      height: this.getHeight(),\n      width: this.getWidth(),\n      showModal: false,\n      chartIsStale: false,\n      refreshOverlayVisible: false,\n    };\n\n    this.addHistory = this.addHistory.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.handlePopstate = this.handlePopstate.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onQuery = this.onQuery.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('popstate', this.handlePopstate);\n    document.addEventListener('keydown', this.handleKeydown);\n    this.addHistory({ isReplace: true });\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n\n    // Trigger the chart if there are no errors\n    const { chart } = this.props;\n    if (!this.hasErrors()) {\n      this.props.actions.triggerQuery(true, this.props.chart.id);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.controls.viz_type.value !== this.props.controls.viz_type.value\n    ) {\n      this.props.actions.resetControls();\n    }\n    if (\n      nextProps.controls.datasource &&\n      (this.props.controls.datasource == null ||\n        nextProps.controls.datasource.value !==\n          this.props.controls.datasource.value)\n    ) {\n      fetchDatasourceMetadata(nextProps.form_data.datasource, true);\n    }\n\n    const changedControlKeys = this.findChangedControlKeys(\n      this.props.controls,\n      nextProps.controls,\n    );\n    if (this.hasDisplayControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.updateQueryFormData(\n        getFormDataFromControls(nextProps.controls),\n        this.props.chart.id,\n      );\n      this.props.actions.renderTriggered(\n        new Date().getTime(),\n        this.props.chart.id,\n      );\n    }\n    if (this.hasQueryControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n      this.setState({ chartIsStale: true, refreshOverlayVisible: true });\n    }\n  }\n\n  /* eslint no-unused-vars: 0 */\n  componentDidUpdate(prevProps, prevState) {\n    const changedControlKeys = this.findChangedControlKeys(\n      prevProps.controls,\n      this.props.controls,\n    );\n    if (\n      this.hasDisplayControlChanged(changedControlKeys, this.props.controls)\n    ) {\n      this.addHistory({});\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('popstate', this.handlePopstate);\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  onQuery() {\n    // remove alerts when query\n    this.props.actions.removeControlPanelAlert();\n    this.props.actions.triggerQuery(true, this.props.chart.id);\n\n    this.setState({ chartIsStale: false, refreshOverlayVisible: false });\n    this.addHistory({});\n  }\n\n  onStop() {\n    if (this.props.chart && this.props.chart.queryController) {\n      this.props.chart.queryController.abort();\n    }\n  }\n\n  getWidth() {\n    return `${window.innerWidth}px`;\n  }\n\n  getHeight() {\n    if (this.props.forcedHeight) {\n      return this.props.forcedHeight + 'px';\n    }\n    const navHeight = this.props.standalone ? 0 : 90;\n    return `${window.innerHeight - navHeight}px`;\n  }\n\n  handleKeydown(event) {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isEnter = event.key === 'Enter' || event.keyCode === 13;\n      const isS = event.key === 's' || event.keyCode === 83;\n      if (isEnter) {\n        this.onQuery();\n      } else if (isS) {\n        if (this.props.slice) {\n          this.props.actions\n            .saveSlice(this.props.form_data, {\n              action: 'overwrite',\n              slice_id: this.props.slice.slice_id,\n              slice_name: this.props.slice.slice_name,\n              add_to_dash: 'noSave',\n              goto_dash: false,\n            })\n            .then(({ data }) => {\n              window.location = data.slice.slice_url;\n            });\n        }\n      }\n    }\n  }\n\n  findChangedControlKeys(prevControls, currentControls) {\n    return Object.keys(currentControls).filter(\n      key =>\n        typeof prevControls[key] !== 'undefined' &&\n        !areObjectsEqual(currentControls[key].value, prevControls[key].value),\n    );\n  }\n\n  hasDisplayControlChanged(changedControlKeys, currentControls) {\n    return changedControlKeys.some(key => currentControls[key].renderTrigger);\n  }\n\n  hasQueryControlChanged(changedControlKeys, currentControls) {\n    return changedControlKeys.some(\n      key =>\n        !currentControls[key].renderTrigger &&\n        !currentControls[key].dontRefreshOnChange,\n    );\n  }\n\n  addHistory({ isReplace = false, title }) {\n    const payload = { ...this.props.form_data };\n    const longUrl = getExploreLongUrl(this.props.form_data, null, false);\n    try {\n      if (isReplace) {\n        history.replaceState(payload, title, longUrl);\n      } else {\n        history.pushState(payload, title, longUrl);\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Failed at altering browser history',\n        payload,\n        title,\n        longUrl,\n      );\n    }\n\n    // it seems some browsers don't support pushState title attribute\n    if (title) {\n      document.title = title;\n    }\n  }\n\n  handleResize() {\n    clearTimeout(this.resizeTimer);\n    this.resizeTimer = setTimeout(() => {\n      this.setState({ height: this.getHeight(), width: this.getWidth() });\n    }, 250);\n  }\n\n  handlePopstate() {\n    const formData = history.state;\n    if (formData && Object.keys(formData).length) {\n      this.props.actions.setExploreControls(formData);\n      this.props.actions.postChartFormData(\n        formData,\n        false,\n        this.props.timeout,\n        this.props.chart.id,\n      );\n    }\n  }\n\n  toggleModal() {\n    this.setState({ showModal: !this.state.showModal });\n  }\n  hasErrors() {\n    const ctrls = this.props.controls;\n    return Object.keys(ctrls).some(\n      k => ctrls[k].validationErrors && ctrls[k].validationErrors.length > 0,\n    );\n  }\n  renderErrorMessage() {\n    // Returns an error message as a node if any errors are in the store\n    const errors = [];\n    const ctrls = this.props.controls;\n    for (const controlName in this.props.controls) {\n      const control = this.props.controls[controlName];\n      if (control.validationErrors && control.validationErrors.length > 0) {\n        errors.push(\n          <div key={controlName}>\n            {t('Control labeled ')}\n            <strong>{` \"${control.label}\" `}</strong>\n            {control.validationErrors.join('. ')}\n          </div>,\n        );\n      }\n    }\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }\n  renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        width={this.state.width}\n        height={this.state.height}\n        {...this.props}\n        errorMessage={this.renderErrorMessage()}\n        refreshOverlayVisible={this.state.refreshOverlayVisible}\n        addHistory={this.addHistory}\n        onQuery={this.onQuery}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.standalone) {\n      return this.renderChartContainer();\n    }\n    return (\n      <div\n        id=\"explore-container\"\n        className=\"container-fluid\"\n        style={{ height: this.state.height, overflow: 'hidden' }}\n      >\n        {this.state.showModal && (\n          <SaveModal\n            onHide={this.toggleModal}\n            actions={this.props.actions}\n            form_data={this.props.form_data}\n            sliceName={this.props.sliceName}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <QueryAndSaveBtns\n                canAdd={!!(this.props.can_add || this.props.can_overwrite)}\n                onQuery={this.onQuery}\n                onSave={this.toggleModal}\n                onStop={this.onStop}\n                loading={this.props.chart.chartStatus === 'loading'}\n                chartIsStale={this.state.chartIsStale}\n                errorMessage={this.renderErrorMessage()}\n                datasourceType={this.props.datasource_type}\n              />\n              <div className=\"m-l-5 text-muted\">\n                <Hotkeys\n                  header=\"Keyboard shortcuts\"\n                  hotkeys={getHotKeys()}\n                  placement=\"right\"\n                />\n              </div>\n            </div>\n            <br />\n            <ControlPanelsContainer\n              actions={this.props.actions}\n              form_data={this.props.form_data}\n              controls={this.props.controls}\n              datasource_type={this.props.datasource_type}\n              isDatasourceMetaLoading={this.props.isDatasourceMetaLoading}\n            />\n          </div>\n          <div className=\"col-sm-8\">{this.renderChartContainer()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const { explore, charts, impressionId } = state;\n  const form_data = getFormDataFromControls(explore.controls);\n  const chartKey = Object.keys(charts)[0];\n  const chart = charts[chartKey];\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource: explore.datasource,\n    datasource_type: explore.datasource.type,\n    datasourceId: explore.datasource_id,\n    controls: explore.controls,\n    can_overwrite: !!explore.can_overwrite,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    column_formats: explore.datasource\n      ? explore.datasource.column_formats\n      : null,\n    containerId: explore.slice\n      ? `slice-container-${explore.slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice: explore.slice,\n    sliceName: explore.sliceName,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: form_data.datasource_name,\n    vizType: form_data.viz_type,\n    standalone: explore.standalone,\n    forcedHeight: explore.forced_height,\n    chart,\n    timeout: explore.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    impressionId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport { ExploreViewContainer };\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExploreViewContainer);\n"]},"metadata":{},"sourceType":"module"}
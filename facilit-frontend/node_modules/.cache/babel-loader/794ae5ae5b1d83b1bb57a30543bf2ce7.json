{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed\";import \"core-js/modules/es.string.search\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, ButtonGroup, ProgressBar } from 'react-bootstrap';\nimport shortid from 'shortid';\nimport { t } from '@superset-ui/translation';\n\nimport Loading from '../../components/Loading';\nimport ExploreCtasResultsButton from './ExploreCtasResultsButton';\nimport ExploreResultsButton from './ExploreResultsButton';\nimport HighlightedSql from './HighlightedSql';\nimport FilterableTable from '../../components/FilterableTable/FilterableTable';\nimport QueryStateLabel from './QueryStateLabel';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { prepareCopyToClipboardTabularData } from '../../utils/common';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object,\n  csv: PropTypes.bool,\n  query: PropTypes.object,\n  search: PropTypes.bool,\n  showSql: PropTypes.bool,\n  visualize: PropTypes.bool,\n  cache: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  database: PropTypes.object,\n  displayLimit: PropTypes.number.isRequired };\n\nconst defaultProps = {\n  search: true,\n  visualize: true,\n  showSql: false,\n  csv: true,\n  actions: {},\n  cache: false,\n  database: {} };\n\n\nconst SEARCH_HEIGHT = 46;\n\nconst LOADING_STYLES = { position: 'relative', minHeight: 100 };\n\nexport default class ResultSet extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    this.state = {\n      searchText: '',\n      showExploreResultsButton: false,\n      data: null };\n\n\n    this.changeSearch = _bindInstanceProperty(_context = this.changeSearch).call(_context, this);\n    this.fetchResults = _bindInstanceProperty(_context2 = this.fetchResults).call(_context2, this);\n    this.popSelectStar = _bindInstanceProperty(_context3 = this.popSelectStar).call(_context3, this);\n    this.reFetchQueryResults = _bindInstanceProperty(_context4 = this.reFetchQueryResults).call(_context4, this);\n    this.toggleExploreResultsButton = _bindInstanceProperty(_context5 = this.toggleExploreResultsButton).call(_context5,\n    this);\n\n  }\n  componentDidMount() {\n    // only do this the first time the component is rendered/mounted\n    this.reRunQueryIfSessionTimeoutErrorOnMount();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // when new results comes in, save them locally and clear in store\n    if (\n    this.props.cache &&\n    !nextProps.query.cached &&\n    nextProps.query.results &&\n    nextProps.query.results.data &&\n    nextProps.query.results.data.length > 0)\n    {\n      this.setState(\n      { data: nextProps.query.results.data },\n      this.clearQueryResults(nextProps.query));\n\n    }\n    if (\n    nextProps.query.resultsKey &&\n    nextProps.query.resultsKey !== this.props.query.resultsKey)\n    {\n      this.fetchResults(nextProps.query);\n    }\n  }\n  clearQueryResults(query) {\n    this.props.actions.clearQueryResults(query);\n  }\n  popSelectStar(tmpSchema, tmpTable) {\n    const qe = {\n      id: shortid.generate(),\n      title: tmpTable,\n      autorun: false,\n      dbId: this.props.query.dbId,\n      sql: \"SELECT * FROM \" + tmpSchema + \".\" + tmpTable };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n  toggleExploreResultsButton() {\n    this.setState({\n      showExploreResultsButton: !this.state.showExploreResultsButton });\n\n  }\n  changeSearch(event) {\n    this.setState({ searchText: event.target.value });\n  }\n  fetchResults(query) {\n    this.props.actions.fetchQueryResults(query, this.props.displayLimit);\n  }\n  reFetchQueryResults(query) {\n    this.props.actions.reFetchQueryResults(query);\n  }\n  reRunQueryIfSessionTimeoutErrorOnMount() {var _context6;\n    const { query } = this.props;\n    if (\n    query.errorMessage &&\n    _indexOfInstanceProperty(_context6 = query.errorMessage).call(_context6, 'session timed out') > 0)\n    {\n      this.props.actions.runQuery(query, true);\n    }\n  }\n  renderControls() {\n    if (this.props.search || this.props.visualize || this.props.csv) {\n      let data = this.props.query.results.data;\n      if (this.props.cache && this.props.query.cached) {\n        data = this.state.data;\n      }\n      return (\n        ___EmotionJSX(\"div\", { className: \"ResultSetControls\" },\n        ___EmotionJSX(\"div\", { className: \"ResultSetButtons\" },\n        this.props.visualize &&\n        ___EmotionJSX(ExploreResultsButton, {\n          query: this.props.query,\n          database: this.props.database,\n          actions: this.props.actions }),\n\n\n        this.props.csv &&\n        ___EmotionJSX(Button, {\n          bsSize: \"small\",\n          href: '/superset/csv/' + this.props.query.id },\n\n        ___EmotionJSX(\"i\", { className: \"fa fa-file-text-o\" }), \" \", t('.CSV')),\n\n\n\n        ___EmotionJSX(CopyToClipboard, {\n          text: prepareCopyToClipboardTabularData(data),\n          wrapped: false,\n          copyNode:\n          ___EmotionJSX(Button, { bsSize: \"small\" },\n          ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }), \" \", t('Clipboard')) })),\n\n\n\n\n        this.props.search &&\n        ___EmotionJSX(\"input\", {\n          type: \"text\",\n          onChange: this.changeSearch,\n          value: this.state.searchText,\n          className: \"form-control input-sm\",\n          placeholder: t('Filter Results') })));\n\n\n\n\n    }\n    return ___EmotionJSX(\"div\", { className: \"noControls\" });\n  }\n  render() {\n    const query = this.props.query;\n    const height = Math.max(\n    0,\n    this.props.search ? this.props.height - SEARCH_HEIGHT : this.props.height);\n\n    let sql;\n\n    if (this.props.showSql) {\n      sql = ___EmotionJSX(HighlightedSql, { sql: query.sql });\n    }\n\n    if (query.state === 'stopped') {\n      return ___EmotionJSX(Alert, { bsStyle: \"warning\" }, \"Query was stopped\");\n    } else if (query.state === 'failed') {\n      return (\n        ___EmotionJSX(Alert, { bsStyle: \"danger\" },\n        query.errorMessage,\n        query.link &&\n        ___EmotionJSX(\"a\", { href: query.link, target: \"_blank\", rel: \"noopener noreferrer\" },\n        ' ',\n        t('(Request Access)'), ' ')));\n\n\n\n\n    } else if (query.state === 'success' && query.ctas) {\n      // Async queries\n      let tmpSchema = query.tempSchema;\n      let tmpTable = query.tempTableName;\n      // Sync queries, query.results.query contains the source of truth for them.\n      if (query.results && query.results.query) {\n        tmpTable = query.results.query.tempTable;\n        tmpSchema = query.results.query.tempSchema;\n      }\n      return (\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Alert, { bsStyle: \"info\" },\n        t('Table'), \" [\",\n        ___EmotionJSX(\"strong\", null,\n        tmpSchema, \".\", tmpTable), \"] \",\n\n        t('was created'), \" \\xA0\",\n        ___EmotionJSX(ButtonGroup, null,\n        ___EmotionJSX(Button, {\n          bsSize: \"small\",\n          className: \"m-r-5\",\n          onClick: () => this.popSelectStar(tmpSchema, tmpTable) },\n\n        t('Query in a new tab')),\n\n        ___EmotionJSX(ExploreCtasResultsButton, {\n          table: tmpTable,\n          schema: tmpSchema,\n          dbId: query.dbId,\n          database: this.props.database,\n          actions: this.props.actions })))));\n\n\n\n\n\n    } else if (query.state === 'success' && query.results) {\n      const results = query.results;\n      let data;\n      if (this.props.cache && query.cached) {\n        data = this.state.data;\n      } else if (results && results.data) {\n        data = results.data;\n      }\n      if (data && data.length > 0) {var _context7, _context8;\n        const expandedColumns = results.expanded_columns ?\n        _mapInstanceProperty(_context7 = results.expanded_columns).call(_context7, col => col.name) :\n        [];\n        return (\n          ___EmotionJSX(React.Fragment, null,\n          this.renderControls(),\n          sql,\n          ___EmotionJSX(FilterableTable, {\n            data: data,\n            orderedColumnKeys: _mapInstanceProperty(_context8 = results.columns).call(_context8, col => col.name),\n            height: height,\n            filterText: this.state.searchText,\n            expandedColumns: expandedColumns })));\n\n\n\n      } else if (data && data.length === 0) {\n        return (\n          ___EmotionJSX(Alert, { bsStyle: \"warning\" }, t('The query returned no data')));\n\n      }\n    }\n    if (query.cached || query.state === 'success' && !query.results) {\n      if (query.isDataPreview) {\n        return (\n          ___EmotionJSX(Button, {\n            bsSize: \"sm\",\n            className: \"fetch\",\n            bsStyle: \"primary\",\n            onClick: () =>\n            this.reFetchQueryResults(_Object$assign({},\n            query, {\n              isDataPreview: true })) },\n\n\n\n          t('Fetch data preview')));\n\n\n      } else if (query.resultsKey) {\n        return (\n          ___EmotionJSX(Button, {\n            bsSize: \"sm\",\n            className: \"fetch\",\n            bsStyle: \"primary\",\n            onClick: () => this.fetchResults(query) },\n\n          t('Refetch Results')));\n\n\n      }\n    }\n    let progressBar;\n    let trackingUrl;\n    if (query.progress > 0) {\n      progressBar =\n      ___EmotionJSX(ProgressBar, {\n        striped: true,\n        now: query.progress,\n        label: query.progress.toFixed(0) + \"%\" });\n\n\n    }\n    if (query.trackingUrl) {\n      trackingUrl =\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: () => {\n          window.open(query.trackingUrl);\n        } },\n\n      t('Track Job'));\n\n\n    }\n    const progressMsg =\n    query && query.extra && query.extra.progress ?\n    query.extra.progress :\n    null;\n    return (\n      ___EmotionJSX(\"div\", { style: LOADING_STYLES },\n      ___EmotionJSX(\"div\", null, !progressBar && ___EmotionJSX(Loading, { position: \"normal\" })),\n      ___EmotionJSX(QueryStateLabel, { query: query }),\n      ___EmotionJSX(\"div\", null,\n      progressMsg && ___EmotionJSX(Alert, { bsStyle: \"success\" }, progressMsg)),\n\n      ___EmotionJSX(\"div\", null, progressBar),\n      ___EmotionJSX(\"div\", null, trackingUrl)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ResultSet.propTypes = propTypes;\nResultSet.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(SEARCH_HEIGHT, \"SEARCH_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(LOADING_STYLES, \"LOADING_STYLES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(ResultSet, \"ResultSet\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
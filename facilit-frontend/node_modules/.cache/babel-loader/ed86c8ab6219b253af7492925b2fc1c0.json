{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * with the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint-env browser */\nimport cx from 'classnames';\n// ParentSize uses resize observer so the dashboard will update size\n// when its container size changes, due to e.g., builder side panel opening\nimport { ParentSize } from '@vx/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport { TabContainer, TabContent, TabPane } from 'react-bootstrap';\n\nimport BuilderComponentPane from './BuilderComponentPane';\nimport DashboardHeader from '../containers/DashboardHeader';\nimport DashboardGrid from '../containers/DashboardGrid';\nimport IconButton from './IconButton';\nimport DragDroppable from './dnd/DragDroppable';\nimport DashboardComponent from '../containers/DashboardComponent';\nimport ToastPresenter from '../../messageToasts/containers/ToastPresenter';\nimport WithPopoverMenu from './menu/WithPopoverMenu';\n\nimport getDragDropManager from '../util/getDragDropManager';\nimport findTabIndexByComponentId from '../util/findTabIndexByComponentId';\n\nimport {\nBUILDER_PANE_TYPE,\nDASHBOARD_GRID_ID,\nDASHBOARD_ROOT_ID,\nDASHBOARD_ROOT_DEPTH } from\n'../util/constants';\nimport getDirectPathToTabIndex from '../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../util/getLeafComponentIdFromPath';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst TABS_HEIGHT = 47;\nconst HEADER_HEIGHT = 67;\n\nconst propTypes = {\n  // redux\n  dashboardLayout: PropTypes.object.isRequired,\n  deleteTopLevelTabs: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  colorScheme: PropTypes.string,\n  setColorSchemeAndUnsavedChanges: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  setDirectPathToChild: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  showBuilderPane: false,\n  directPathToChild: [],\n  colorScheme: undefined };\n\n\nclass DashboardBuilder extends React.Component {\n  static shouldFocusTabs(event, container) {\n    // don't focus the tabs when we click on a tab\n    return (\n      event.target.tagName === 'UL' ||\n      /icon-button/.test(event.target.className) &&\n      container.contains(event.target));\n\n  }\n\n  static getRootLevelTabIndex(dashboardLayout, directPathToChild) {\n    return Math.max(\n    0,\n    findTabIndexByComponentId({\n      currentComponent: DashboardBuilder.getRootLevelTabsComponent(\n      dashboardLayout),\n\n      directPathToChild }));\n\n\n  }\n\n  static getRootLevelTabsComponent(dashboardLayout) {\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    return rootChildId === DASHBOARD_GRID_ID ?\n    dashboardLayout[DASHBOARD_ROOT_ID] :\n    dashboardLayout[rootChildId];\n  }\n\n  constructor(props) {var _context, _context2;\n    super(props);\n\n    const { dashboardLayout, directPathToChild } = props;\n    const tabIndex = DashboardBuilder.getRootLevelTabIndex(\n    dashboardLayout,\n    directPathToChild);\n\n    this.state = {\n      tabIndex };\n\n\n    this.handleChangeTab = _bindInstanceProperty(_context = this.handleChangeTab).call(_context, this);\n    this.handleDeleteTopLevelTabs = _bindInstanceProperty(_context2 = this.handleDeleteTopLevelTabs).call(_context2, this);\n  }\n\n  getChildContext() {\n    return {\n      dragDropManager: this.context.dragDropManager || getDragDropManager() };\n\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextFocusComponent = getLeafComponentIdFromPath(\n    nextProps.directPathToChild);\n\n    const currentFocusComponent = getLeafComponentIdFromPath(\n    this.props.directPathToChild);\n\n    if (nextFocusComponent !== currentFocusComponent) {\n      const { dashboardLayout, directPathToChild } = nextProps;\n      const nextTabIndex = DashboardBuilder.getRootLevelTabIndex(\n      dashboardLayout,\n      directPathToChild);\n\n\n      this.setState(() => ({ tabIndex: nextTabIndex }));\n    }\n  }\n\n  handleDeleteTopLevelTabs() {\n    this.props.deleteTopLevelTabs();\n\n    const { dashboardLayout } = this.props;\n    const firstTab = getDirectPathToTabIndex(\n    DashboardBuilder.getRootLevelTabsComponent(dashboardLayout),\n    0);\n\n    this.props.setDirectPathToChild(firstTab);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  render() {\n    const {\n      handleComponentDrop,\n      dashboardLayout,\n      editMode,\n      showBuilderPane,\n      builderPaneType,\n      setColorSchemeAndUnsavedChanges,\n      colorScheme } =\n    this.props;\n    const { tabIndex } = this.state;\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    const topLevelTabs =\n    rootChildId !== DASHBOARD_GRID_ID && dashboardLayout[rootChildId];\n\n    const childIds = topLevelTabs ? topLevelTabs.children : [DASHBOARD_GRID_ID];\n\n    return (\n      ___EmotionJSX(StickyContainer, {\n        className: cx('dashboard', editMode && 'dashboard--editing'), __source: { fileName: _jsxFileName, lineNumber: 177 }, __self: this },\n\n      ___EmotionJSX(Sticky, { __source: { fileName: _jsxFileName, lineNumber: 180 }, __self: this },\n      ({ style }) =>\n      ___EmotionJSX(DragDroppable, {\n        component: dashboardRoot,\n        parentComponent: null,\n        depth: DASHBOARD_ROOT_DEPTH,\n        index: 0,\n        orientation: \"column\",\n        onDrop: handleComponentDrop,\n        editMode: editMode\n        // you cannot drop on/displace tabs if they already exist\n        , disableDragdrop: !!topLevelTabs,\n        style: _Object$assign({ zIndex: 100 }, style), __source: { fileName: _jsxFileName, lineNumber: 182 }, __self: this },\n\n      ({ dropIndicatorProps }) =>\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 195 }, __self: this },\n      ___EmotionJSX(DashboardHeader, { __source: { fileName: _jsxFileName, lineNumber: 196 }, __self: this }),\n      dropIndicatorProps && ___EmotionJSX(\"div\", _extends({}, dropIndicatorProps, { __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: this })),\n      topLevelTabs &&\n      ___EmotionJSX(WithPopoverMenu, {\n        shouldFocus: DashboardBuilder.shouldFocusTabs,\n        menuItems: [\n        ___EmotionJSX(IconButton, {\n          className: \"fa fa-level-down\",\n          label: \"Collapse tab content\",\n          onClick: this.handleDeleteTopLevelTabs, __source: { fileName: _jsxFileName, lineNumber: 202 }, __self: this })],\n\n\n        editMode: editMode, __source: { fileName: _jsxFileName, lineNumber: 199 }, __self: this },\n\n      ___EmotionJSX(DashboardComponent, {\n        id: topLevelTabs.id,\n        parentId: DASHBOARD_ROOT_ID,\n        depth: DASHBOARD_ROOT_DEPTH + 1,\n        index: 0,\n        renderTabContent: false,\n        renderHoverMenu: false,\n        onChangeTab: this.handleChangeTab, __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this }))))),\n\n\n\n\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"dashboard-content\", __source: { fileName: _jsxFileName, lineNumber: 227 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"grid-container\", __source: { fileName: _jsxFileName, lineNumber: 228 }, __self: this },\n      ___EmotionJSX(ParentSize, { __source: { fileName: _jsxFileName, lineNumber: 229 }, __self: this },\n      ({ width }) =>\n      /*\n                       We use a TabContainer irrespective of whether top-level tabs exist to maintain\n                       a consistent React component tree. This avoids expensive mounts/unmounts of\n                       the entire dashboard upon adding/removing top-level tabs, which would otherwise\n                       happen because of React's diffing algorithm\n                     */\n      ___EmotionJSX(TabContainer, {\n        id: DASHBOARD_GRID_ID,\n        activeKey: Math.min(tabIndex, childIds.length - 1),\n        onSelect: this.handleChangeTab,\n        animation: true,\n        mountOnEnter: true,\n        unmountOnExit: false, __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: this },\n\n      ___EmotionJSX(TabContent, { __source: { fileName: _jsxFileName, lineNumber: 245 }, __self: this },\n      _mapInstanceProperty(childIds).call(childIds, (id, index) =>\n      // Matching the key of the first TabPane irrespective of topLevelTabs\n      // lets us keep the same React component tree when !!topLevelTabs changes.\n      // This avoids expensive mounts/unmounts of the entire dashboard.\n      ___EmotionJSX(TabPane, {\n        key: index === 0 ? DASHBOARD_GRID_ID : id,\n        eventKey: index, __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this },\n\n      ___EmotionJSX(DashboardGrid, {\n        gridComponent: dashboardLayout[id]\n        // see isValidChild for why tabs do not increment the depth of their children\n        , depth: DASHBOARD_ROOT_DEPTH + 1 // (topLevelTabs ? 0 : 1)}\n        , width: width,\n        isComponentVisible: index === tabIndex, __source: { fileName: _jsxFileName, lineNumber: 254 }, __self: this }))))))),\n\n\n\n\n\n\n\n\n      editMode && builderPaneType !== BUILDER_PANE_TYPE.NONE &&\n      ___EmotionJSX(BuilderComponentPane, {\n        topOffset: HEADER_HEIGHT + (topLevelTabs ? TABS_HEIGHT : 0),\n        showBuilderPane: showBuilderPane,\n        builderPaneType: builderPaneType,\n        setColorSchemeAndUnsavedChanges: setColorSchemeAndUnsavedChanges,\n        colorScheme: colorScheme, __source: { fileName: _jsxFileName, lineNumber: 269 }, __self: this })),\n\n\n\n      ___EmotionJSX(ToastPresenter, { __source: { fileName: _jsxFileName, lineNumber: 278 }, __self: this })));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardBuilder.propTypes = propTypes;\nDashboardBuilder.defaultProps = defaultProps;\nDashboardBuilder.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired };const _default =\n\n\nDashboardBuilder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TABS_HEIGHT, \"TABS_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(HEADER_HEIGHT, \"HEADER_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(DashboardBuilder, \"DashboardBuilder\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx"],"names":["cx","ParentSize","PropTypes","React","Sticky","StickyContainer","TabContainer","TabContent","TabPane","BuilderComponentPane","DashboardHeader","DashboardGrid","IconButton","DragDroppable","DashboardComponent","ToastPresenter","WithPopoverMenu","getDragDropManager","findTabIndexByComponentId","BUILDER_PANE_TYPE","DASHBOARD_GRID_ID","DASHBOARD_ROOT_ID","DASHBOARD_ROOT_DEPTH","getDirectPathToTabIndex","getLeafComponentIdFromPath","TABS_HEIGHT","HEADER_HEIGHT","propTypes","dashboardLayout","object","isRequired","deleteTopLevelTabs","func","editMode","bool","showBuilderPane","builderPaneType","string","colorScheme","setColorSchemeAndUnsavedChanges","handleComponentDrop","directPathToChild","arrayOf","setDirectPathToChild","defaultProps","undefined","DashboardBuilder","Component","shouldFocusTabs","event","container","target","tagName","test","className","contains","getRootLevelTabIndex","Math","max","currentComponent","getRootLevelTabsComponent","dashboardRoot","rootChildId","children","constructor","props","tabIndex","state","handleChangeTab","handleDeleteTopLevelTabs","getChildContext","dragDropManager","context","UNSAFE_componentWillReceiveProps","nextProps","nextFocusComponent","currentFocusComponent","nextTabIndex","setState","firstTab","pathToTabIndex","render","topLevelTabs","childIds","style","zIndex","dropIndicatorProps","id","width","min","length","index","NONE","childContextTypes"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport cx from 'classnames';\n// ParentSize uses resize observer so the dashboard will update size\n// when its container size changes, due to e.g., builder side panel opening\nimport { ParentSize } from '@vx/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport { TabContainer, TabContent, TabPane } from 'react-bootstrap';\n\nimport BuilderComponentPane from './BuilderComponentPane';\nimport DashboardHeader from '../containers/DashboardHeader';\nimport DashboardGrid from '../containers/DashboardGrid';\nimport IconButton from './IconButton';\nimport DragDroppable from './dnd/DragDroppable';\nimport DashboardComponent from '../containers/DashboardComponent';\nimport ToastPresenter from '../../messageToasts/containers/ToastPresenter';\nimport WithPopoverMenu from './menu/WithPopoverMenu';\n\nimport getDragDropManager from '../util/getDragDropManager';\nimport findTabIndexByComponentId from '../util/findTabIndexByComponentId';\n\nimport {\n  BUILDER_PANE_TYPE,\n  DASHBOARD_GRID_ID,\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_ROOT_DEPTH,\n} from '../util/constants';\nimport getDirectPathToTabIndex from '../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../util/getLeafComponentIdFromPath';\n\nconst TABS_HEIGHT = 47;\nconst HEADER_HEIGHT = 67;\n\nconst propTypes = {\n  // redux\n  dashboardLayout: PropTypes.object.isRequired,\n  deleteTopLevelTabs: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  colorScheme: PropTypes.string,\n  setColorSchemeAndUnsavedChanges: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  setDirectPathToChild: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  showBuilderPane: false,\n  directPathToChild: [],\n  colorScheme: undefined,\n};\n\nclass DashboardBuilder extends React.Component {\n  static shouldFocusTabs(event, container) {\n    // don't focus the tabs when we click on a tab\n    return (\n      event.target.tagName === 'UL' ||\n      (/icon-button/.test(event.target.className) &&\n        container.contains(event.target))\n    );\n  }\n\n  static getRootLevelTabIndex(dashboardLayout, directPathToChild) {\n    return Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: DashboardBuilder.getRootLevelTabsComponent(\n          dashboardLayout,\n        ),\n        directPathToChild,\n      }),\n    );\n  }\n\n  static getRootLevelTabsComponent(dashboardLayout) {\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    return rootChildId === DASHBOARD_GRID_ID\n      ? dashboardLayout[DASHBOARD_ROOT_ID]\n      : dashboardLayout[rootChildId];\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { dashboardLayout, directPathToChild } = props;\n    const tabIndex = DashboardBuilder.getRootLevelTabIndex(\n      dashboardLayout,\n      directPathToChild,\n    );\n    this.state = {\n      tabIndex,\n    };\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleDeleteTopLevelTabs = this.handleDeleteTopLevelTabs.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      dragDropManager: this.context.dragDropManager || getDragDropManager(),\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextFocusComponent = getLeafComponentIdFromPath(\n      nextProps.directPathToChild,\n    );\n    const currentFocusComponent = getLeafComponentIdFromPath(\n      this.props.directPathToChild,\n    );\n    if (nextFocusComponent !== currentFocusComponent) {\n      const { dashboardLayout, directPathToChild } = nextProps;\n      const nextTabIndex = DashboardBuilder.getRootLevelTabIndex(\n        dashboardLayout,\n        directPathToChild,\n      );\n\n      this.setState(() => ({ tabIndex: nextTabIndex }));\n    }\n  }\n\n  handleDeleteTopLevelTabs() {\n    this.props.deleteTopLevelTabs();\n\n    const { dashboardLayout } = this.props;\n    const firstTab = getDirectPathToTabIndex(\n      DashboardBuilder.getRootLevelTabsComponent(dashboardLayout),\n      0,\n    );\n    this.props.setDirectPathToChild(firstTab);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  render() {\n    const {\n      handleComponentDrop,\n      dashboardLayout,\n      editMode,\n      showBuilderPane,\n      builderPaneType,\n      setColorSchemeAndUnsavedChanges,\n      colorScheme,\n    } = this.props;\n    const { tabIndex } = this.state;\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    const topLevelTabs =\n      rootChildId !== DASHBOARD_GRID_ID && dashboardLayout[rootChildId];\n\n    const childIds = topLevelTabs ? topLevelTabs.children : [DASHBOARD_GRID_ID];\n\n    return (\n      <StickyContainer\n        className={cx('dashboard', editMode && 'dashboard--editing')}\n      >\n        <Sticky>\n          {({ style }) => (\n            <DragDroppable\n              component={dashboardRoot}\n              parentComponent={null}\n              depth={DASHBOARD_ROOT_DEPTH}\n              index={0}\n              orientation=\"column\"\n              onDrop={handleComponentDrop}\n              editMode={editMode}\n              // you cannot drop on/displace tabs if they already exist\n              disableDragdrop={!!topLevelTabs}\n              style={{ zIndex: 100, ...style }}\n            >\n              {({ dropIndicatorProps }) => (\n                <div>\n                  <DashboardHeader />\n                  {dropIndicatorProps && <div {...dropIndicatorProps} />}\n                  {topLevelTabs && (\n                    <WithPopoverMenu\n                      shouldFocus={DashboardBuilder.shouldFocusTabs}\n                      menuItems={[\n                        <IconButton\n                          className=\"fa fa-level-down\"\n                          label=\"Collapse tab content\"\n                          onClick={this.handleDeleteTopLevelTabs}\n                        />,\n                      ]}\n                      editMode={editMode}\n                    >\n                      <DashboardComponent\n                        id={topLevelTabs.id}\n                        parentId={DASHBOARD_ROOT_ID}\n                        depth={DASHBOARD_ROOT_DEPTH + 1}\n                        index={0}\n                        renderTabContent={false}\n                        renderHoverMenu={false}\n                        onChangeTab={this.handleChangeTab}\n                      />\n                    </WithPopoverMenu>\n                  )}\n                </div>\n              )}\n            </DragDroppable>\n          )}\n        </Sticky>\n\n        <div className=\"dashboard-content\">\n          <div className=\"grid-container\">\n            <ParentSize>\n              {({ width }) => (\n                /*\n                  We use a TabContainer irrespective of whether top-level tabs exist to maintain\n                  a consistent React component tree. This avoids expensive mounts/unmounts of\n                  the entire dashboard upon adding/removing top-level tabs, which would otherwise\n                  happen because of React's diffing algorithm\n                */\n                <TabContainer\n                  id={DASHBOARD_GRID_ID}\n                  activeKey={Math.min(tabIndex, childIds.length - 1)}\n                  onSelect={this.handleChangeTab}\n                  animation\n                  mountOnEnter\n                  unmountOnExit={false}\n                >\n                  <TabContent>\n                    {childIds.map((id, index) => (\n                      // Matching the key of the first TabPane irrespective of topLevelTabs\n                      // lets us keep the same React component tree when !!topLevelTabs changes.\n                      // This avoids expensive mounts/unmounts of the entire dashboard.\n                      <TabPane\n                        key={index === 0 ? DASHBOARD_GRID_ID : id}\n                        eventKey={index}\n                      >\n                        <DashboardGrid\n                          gridComponent={dashboardLayout[id]}\n                          // see isValidChild for why tabs do not increment the depth of their children\n                          depth={DASHBOARD_ROOT_DEPTH + 1} // (topLevelTabs ? 0 : 1)}\n                          width={width}\n                          isComponentVisible={index === tabIndex}\n                        />\n                      </TabPane>\n                    ))}\n                  </TabContent>\n                </TabContainer>\n              )}\n            </ParentSize>\n          </div>\n          {editMode && builderPaneType !== BUILDER_PANE_TYPE.NONE && (\n            <BuilderComponentPane\n              topOffset={HEADER_HEIGHT + (topLevelTabs ? TABS_HEIGHT : 0)}\n              showBuilderPane={showBuilderPane}\n              builderPaneType={builderPaneType}\n              setColorSchemeAndUnsavedChanges={setColorSchemeAndUnsavedChanges}\n              colorScheme={colorScheme}\n            />\n          )}\n        </div>\n        <ToastPresenter />\n      </StickyContainer>\n    );\n  }\n}\n\nDashboardBuilder.propTypes = propTypes;\nDashboardBuilder.defaultProps = defaultProps;\nDashboardBuilder.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired,\n};\n\nexport default DashboardBuilder;\n"]},"metadata":{},"sourceType":"module"}
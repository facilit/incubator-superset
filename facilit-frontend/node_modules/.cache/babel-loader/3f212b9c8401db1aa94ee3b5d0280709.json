{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _isPlainObject from \"lodash/isPlainObject\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              *\nhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert, Tab, Tabs } from 'react-bootstrap';\n\nimport { t } from '@superset-ui/translation';\nimport { getChartControlPanelRegistry } from '@superset-ui/chart';\n\nimport ControlPanelSection from './ControlPanelSection';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport controlConfigs from '../controls';\nimport { sectionsToRender } from '../controlUtils';\nimport * as exploreActions from '../actions/exploreActions';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  alert: PropTypes.string,\n  datasource_type: PropTypes.string.isRequired,\n  exploreState: PropTypes.object.isRequired,\n  controls: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired };\n\n\nclass ControlPanelsContainer extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n\n    this.getControlData = _bindInstanceProperty(_context = this.getControlData).call(_context, this);\n    this.removeAlert = _bindInstanceProperty(_context2 = this.removeAlert).call(_context2, this);\n    this.renderControl = _bindInstanceProperty(_context3 = this.renderControl).call(_context3, this);\n    this.renderControlPanelSection = _bindInstanceProperty(_context4 = this.renderControlPanelSection).call(_context4, this);\n  }\n\n  getControlData(controlName) {\n    if (React.isValidElement(controlName)) {\n      return controlName;\n    }\n\n    const control = this.props.controls[controlName];\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    let mapF = controlConfigs[controlName].mapStateToProps;\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n    getChartControlPanelRegistry().get(this.props.controls.viz_type.value) ||\n    {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    if (\n    controlOverrides[controlName] &&\n    controlOverrides[controlName].mapStateToProps)\n    {\n      mapF = controlOverrides[controlName].mapStateToProps;\n    }\n    // Applying mapStateToProps if needed\n    if (mapF) {\n      return _Object$assign({},\n      control, {},\n      mapF(this.props.exploreState, control, this.props.actions));\n\n    }\n    return control;\n  }\n\n  sectionsToRender() {\n    return sectionsToRender(\n    this.props.form_data.viz_type,\n    this.props.datasource_type);\n\n  }\n\n  removeAlert() {\n    this.props.actions.removeControlPanelAlert();\n  }\n\n  renderControl(name, config, lookupControlData) {\n    const { actions, controls, exploreState, form_data: formData } = this.props;\n    const { visibility } = config;\n\n    // if visibility check says the config is not visible, don't render it\n    if (visibility && !visibility.call(config, this.props)) {\n      return null;\n    }\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n    getChartControlPanelRegistry().get(controls.viz_type.value) || {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    const overrides = controlOverrides[name];\n\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    const mapFn =\n    overrides && overrides.mapStateToProps ?\n    overrides.mapStateToProps :\n    config.mapStateToProps;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = lookupControlData ? controls[name] : config;\n\n    // Applying mapStateToProps if needed\n    const additionalProps = mapFn ? _Object$assign({},\n    controlData, {}, mapFn(exploreState, controlData, actions)) :\n    controlData;\n\n    const { validationErrors, provideFormDataToProps } = controlData;\n\n    return (\n      ___EmotionJSX(Control, _extends({\n        name: name,\n        key: \"control-\" + name,\n        value: formData[name],\n        validationErrors: validationErrors,\n        actions: actions,\n        formData: provideFormDataToProps ? formData : null },\n      additionalProps)));\n\n\n  }\n\n  renderControlPanelSection(section) {var _context5, _context6;\n    const { controls } = this.props;\n\n    const hasErrors = _someInstanceProperty(_context5 = section.controlSetRows).call(_context5, (rows) =>\n    _someInstanceProperty(rows).call(rows,\n    (s) =>\n    controls[s] &&\n    controls[s].validationErrors &&\n    controls[s].validationErrors.length > 0));\n\n\n\n    return (\n      ___EmotionJSX(ControlPanelSection, {\n        key: section.label,\n        label: section.label,\n        startExpanded: section.expanded,\n        hasErrors: hasErrors,\n        description: section.description },\n\n      _mapInstanceProperty(_context6 = section.controlSetRows).call(_context6, (controlSets, i) =>\n      ___EmotionJSX(ControlRow, {\n        key: \"controlsetrow-\" + i,\n        className: \"control-row\",\n        controls: _mapInstanceProperty(controlSets).call(controlSets, controlItem => {\n          if (!controlItem) {\n            // When the item is invalid\n            return null;\n          } else if (React.isValidElement(controlItem)) {\n            // When the item is a React element\n            return controlItem;\n          } else if (\n          _isPlainObject(controlItem) &&\n          controlItem.name &&\n          controlItem.config)\n          {\n            const { name, config } = controlItem;\n\n            return this.renderControl(name, config, false);\n          } else if (controls[controlItem]) {\n            // When the item is string name, meaning the control config\n            // is not specified directly. Have to look up the config from\n            // centralized configs.\n            const name = controlItem;\n            return this.renderControl(name, controlConfigs[name], true);\n          }\n          return null;\n        }) }))));\n\n\n\n\n  }\n  render() {\n    const allSectionsToRender = this.sectionsToRender();\n    const querySectionsToRender = [];\n    const displaySectionsToRender = [];\n    _forEachInstanceProperty(allSectionsToRender).call(allSectionsToRender, section => {var _context7;\n      // if at least one control in the secion is not `renderTrigger`\n      // or asks to be displayed at the Data tab\n      if (\n      section.tabOverride === 'data' ||\n      _someInstanceProperty(_context7 = section.controlSetRows).call(_context7, (rows) =>\n      _someInstanceProperty(rows).call(rows,\n      (control) =>\n      controlConfigs[control] && (\n      !controlConfigs[control].renderTrigger ||\n      controlConfigs[control].tabOverride === 'data'))))\n\n\n      {\n        querySectionsToRender.push(section);\n      } else {\n        displaySectionsToRender.push(section);\n      }\n    });\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"scrollbar-container\" },\n      ___EmotionJSX(\"div\", { className: \"scrollbar-content\" },\n      this.props.alert &&\n      ___EmotionJSX(Alert, { bsStyle: \"warning\" },\n      this.props.alert,\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-close pull-right\",\n        onClick: this.removeAlert,\n        style: { cursor: 'pointer' } })),\n\n\n\n      ___EmotionJSX(Tabs, { id: \"controlSections\" },\n      ___EmotionJSX(Tab, { eventKey: \"query\", title: t('Data') },\n      _mapInstanceProperty(querySectionsToRender).call(querySectionsToRender, this.renderControlPanelSection)),\n\n      displaySectionsToRender.length > 0 &&\n      ___EmotionJSX(Tab, { eventKey: \"display\", title: t('Customize') },\n      _mapInstanceProperty(displaySectionsToRender).call(displaySectionsToRender, this.renderControlPanelSection))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nControlPanelsContainer.propTypes = propTypes;\n\nfunction mapStateToProps({ explore }) {\n  return {\n    alert: explore.controlPanelAlert,\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    controls: explore.controls,\n    exploreState: explore };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(exploreActions, dispatch) };\n\n}\n\nexport { ControlPanelsContainer };const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nControlPanelsContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(ControlPanelsContainer, \"ControlPanelsContainer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx"],"names":["React","PropTypes","bindActionCreators","connect","Alert","Tab","Tabs","t","getChartControlPanelRegistry","ControlPanelSection","ControlRow","Control","controlConfigs","sectionsToRender","exploreActions","propTypes","actions","object","isRequired","alert","string","datasource_type","exploreState","controls","form_data","isDatasourceMetaLoading","bool","ControlPanelsContainer","Component","constructor","props","getControlData","removeAlert","renderControl","renderControlPanelSection","controlName","isValidElement","control","mapF","mapStateToProps","controlPanelConfig","get","viz_type","value","controlOverrides","removeControlPanelAlert","name","config","lookupControlData","formData","visibility","call","overrides","mapFn","controlData","additionalProps","validationErrors","provideFormDataToProps","section","hasErrors","controlSetRows","rows","s","length","label","expanded","description","controlSets","i","controlItem","render","allSectionsToRender","querySectionsToRender","displaySectionsToRender","tabOverride","renderTrigger","push","cursor","explore","controlPanelAlert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert, Tab, Tabs } from 'react-bootstrap';\nimport { isPlainObject } from 'lodash';\nimport { t } from '@superset-ui/translation';\nimport { getChartControlPanelRegistry } from '@superset-ui/chart';\n\nimport ControlPanelSection from './ControlPanelSection';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport controlConfigs from '../controls';\nimport { sectionsToRender } from '../controlUtils';\nimport * as exploreActions from '../actions/exploreActions';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  alert: PropTypes.string,\n  datasource_type: PropTypes.string.isRequired,\n  exploreState: PropTypes.object.isRequired,\n  controls: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n};\n\nclass ControlPanelsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getControlData = this.getControlData.bind(this);\n    this.removeAlert = this.removeAlert.bind(this);\n    this.renderControl = this.renderControl.bind(this);\n    this.renderControlPanelSection = this.renderControlPanelSection.bind(this);\n  }\n\n  getControlData(controlName) {\n    if (React.isValidElement(controlName)) {\n      return controlName;\n    }\n\n    const control = this.props.controls[controlName];\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    let mapF = controlConfigs[controlName].mapStateToProps;\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n      getChartControlPanelRegistry().get(this.props.controls.viz_type.value) ||\n      {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    if (\n      controlOverrides[controlName] &&\n      controlOverrides[controlName].mapStateToProps\n    ) {\n      mapF = controlOverrides[controlName].mapStateToProps;\n    }\n    // Applying mapStateToProps if needed\n    if (mapF) {\n      return {\n        ...control,\n        ...mapF(this.props.exploreState, control, this.props.actions),\n      };\n    }\n    return control;\n  }\n\n  sectionsToRender() {\n    return sectionsToRender(\n      this.props.form_data.viz_type,\n      this.props.datasource_type,\n    );\n  }\n\n  removeAlert() {\n    this.props.actions.removeControlPanelAlert();\n  }\n\n  renderControl(name, config, lookupControlData) {\n    const { actions, controls, exploreState, form_data: formData } = this.props;\n    const { visibility } = config;\n\n    // if visibility check says the config is not visible, don't render it\n    if (visibility && !visibility.call(config, this.props)) {\n      return null;\n    }\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n      getChartControlPanelRegistry().get(controls.viz_type.value) || {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    const overrides = controlOverrides[name];\n\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    const mapFn =\n      overrides && overrides.mapStateToProps\n        ? overrides.mapStateToProps\n        : config.mapStateToProps;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = lookupControlData ? controls[name] : config;\n\n    // Applying mapStateToProps if needed\n    const additionalProps = mapFn\n      ? { ...controlData, ...mapFn(exploreState, controlData, actions) }\n      : controlData;\n\n    const { validationErrors, provideFormDataToProps } = controlData;\n\n    return (\n      <Control\n        name={name}\n        key={`control-${name}`}\n        value={formData[name]}\n        validationErrors={validationErrors}\n        actions={actions}\n        formData={provideFormDataToProps ? formData : null}\n        {...additionalProps}\n      />\n    );\n  }\n\n  renderControlPanelSection(section) {\n    const { controls } = this.props;\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(\n        s =>\n          controls[s] &&\n          controls[s].validationErrors &&\n          controls[s].validationErrors.length > 0,\n      ),\n    );\n\n    return (\n      <ControlPanelSection\n        key={section.label}\n        label={section.label}\n        startExpanded={section.expanded}\n        hasErrors={hasErrors}\n        description={section.description}\n      >\n        {section.controlSetRows.map((controlSets, i) => (\n          <ControlRow\n            key={`controlsetrow-${i}`}\n            className=\"control-row\"\n            controls={controlSets.map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              } else if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              } else if (\n                isPlainObject(controlItem) &&\n                controlItem.name &&\n                controlItem.config\n              ) {\n                const { name, config } = controlItem;\n\n                return this.renderControl(name, config, false);\n              } else if (controls[controlItem]) {\n                // When the item is string name, meaning the control config\n                // is not specified directly. Have to look up the config from\n                // centralized configs.\n                const name = controlItem;\n                return this.renderControl(name, controlConfigs[name], true);\n              }\n              return null;\n            })}\n          />\n        ))}\n      </ControlPanelSection>\n    );\n  }\n  render() {\n    const allSectionsToRender = this.sectionsToRender();\n    const querySectionsToRender = [];\n    const displaySectionsToRender = [];\n    allSectionsToRender.forEach(section => {\n      // if at least one control in the secion is not `renderTrigger`\n      // or asks to be displayed at the Data tab\n      if (\n        section.tabOverride === 'data' ||\n        section.controlSetRows.some(rows =>\n          rows.some(\n            control =>\n              controlConfigs[control] &&\n              (!controlConfigs[control].renderTrigger ||\n                controlConfigs[control].tabOverride === 'data'),\n          ),\n        )\n      ) {\n        querySectionsToRender.push(section);\n      } else {\n        displaySectionsToRender.push(section);\n      }\n    });\n\n    return (\n      <div className=\"scrollbar-container\">\n        <div className=\"scrollbar-content\">\n          {this.props.alert && (\n            <Alert bsStyle=\"warning\">\n              {this.props.alert}\n              <i\n                className=\"fa fa-close pull-right\"\n                onClick={this.removeAlert}\n                style={{ cursor: 'pointer' }}\n              />\n            </Alert>\n          )}\n          <Tabs id=\"controlSections\">\n            <Tab eventKey=\"query\" title={t('Data')}>\n              {querySectionsToRender.map(this.renderControlPanelSection)}\n            </Tab>\n            {displaySectionsToRender.length > 0 && (\n              <Tab eventKey=\"display\" title={t('Customize')}>\n                {displaySectionsToRender.map(this.renderControlPanelSection)}\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nControlPanelsContainer.propTypes = propTypes;\n\nfunction mapStateToProps({ explore }) {\n  return {\n    alert: explore.controlPanelAlert,\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    controls: explore.controls,\n    exploreState: explore,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(exploreActions, dispatch),\n  };\n}\n\nexport { ControlPanelsContainer };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ControlPanelsContainer);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/web.dom-collections.iterator\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _valuesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/values\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Modal, FormControl } from 'react-bootstrap';\nimport Dialog from 'react-bootstrap-dialog';\nimport { AsyncSelect } from 'src/components/Select';\nimport AceEditor from 'react-ace';\nimport rison from 'rison';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport '../stylesheets/buttons.less';\n\nimport getClientErrorObject from '../../utils/getClientErrorObject';\nimport withToasts from '../../messageToasts/enhancers/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func,\n  onDashboardSave: PropTypes.func,\n  addSuccessToast: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  onHide: () => {},\n  onDashboardSave: () => {},\n  show: false };\n\n\nclass PropertiesModal extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n    super(props);\n    this.state = {\n      errors: [],\n      values: {\n        dashboard_title: '',\n        slug: '',\n        owners: [],\n        json_metadata: '' },\n\n      isDashboardLoaded: false,\n      isAdvancedOpen: false };\n\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.onMetadataChange = _bindInstanceProperty(_context2 = this.onMetadataChange).call(_context2, this);\n    this.onOwnersChange = _bindInstanceProperty(_context3 = this.onOwnersChange).call(_context3, this);\n    this.save = _bindInstanceProperty(_context4 = this.save).call(_context4, this);\n    this.toggleAdvanced = _bindInstanceProperty(_context5 = this.toggleAdvanced).call(_context5, this);\n    this.loadOwnerOptions = _bindInstanceProperty(_context6 = this.loadOwnerOptions).call(_context6, this);\n    this.handleErrorResponse = _bindInstanceProperty(_context7 = this.handleErrorResponse).call(_context7, this);\n  }\n\n  componentDidMount() {\n    this.fetchDashboardDetails();\n  }\n\n  onOwnersChange(value) {\n    this.updateFormState('owners', value);\n  }\n\n  onMetadataChange(metadata) {\n    this.updateFormState('json_metadata', metadata);\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n    this.updateFormState(name, value);\n  }\n\n  fetchDashboardDetails() {\n    // We fetch the dashboard details because not all code\n    // that renders this component have all the values we need.\n    // At some point when we have a more consistent frontend\n    // datamodel, the dashboard could probably just be passed as a prop.\n    SupersetClient.get({\n      endpoint: \"/api/v1/dashboard/\" + this.props.dashboardId }).\n    then(response => {var _context8;\n      const dashboard = response.json.result;\n      this.setState(state => ({\n        isDashboardLoaded: true,\n        values: _Object$assign({}, _valuesInstanceProperty(\n        state), {\n          dashboard_title: dashboard.dashboard_title || '',\n          slug: dashboard.slug || '',\n          json_metadata: dashboard.json_metadata || '' }) }));\n\n\n      const initialSelectedOwners = _mapInstanceProperty(_context8 = dashboard.owners).call(_context8, owner => ({\n        value: owner.id,\n        label: owner.first_name + \" \" + owner.last_name }));\n\n      this.onOwnersChange(initialSelectedOwners);\n    }, this.handleErrorResponse);\n  }\n\n  loadOwnerOptions(input = '') {\n    const query = rison.encode({ filter: input });\n    return SupersetClient.get({\n      endpoint: \"/api/v1/dashboard/related/owners?q=\" + query }).\n    then(\n    response => {var _context9;\n      return _mapInstanceProperty(_context9 = response.json.result).call(_context9, item => ({\n        value: item.value,\n        label: item.text }));\n\n    },\n    badResponse => {\n      this.handleErrorResponse(badResponse);\n      return [];\n    });\n\n  }\n\n  updateFormState(name, value) {\n    this.setState(state => ({\n      values: _Object$assign({}, _valuesInstanceProperty(\n      state), {\n        [name]: value }) }));\n\n\n  }\n\n  toggleAdvanced() {\n    this.setState(state => ({\n      isAdvancedOpen: !state.isAdvancedOpen }));\n\n  }\n\n  async handleErrorResponse(response) {\n    const { error, statusText } = await getClientErrorObject(response);\n    this.dialog.show({\n      title: 'Error',\n      bsSize: 'medium',\n      bsStyle: 'danger',\n      actions: [Dialog.DefaultAction('Ok', () => {}, 'btn-danger')],\n      body: error || statusText || t('An error has occurred') });\n\n  }\n\n  save(e) {var _context10;\n    e.preventDefault();\n    e.stopPropagation();\n    const { values } = this.state;\n    const owners = _mapInstanceProperty(_context10 = values.owners).call(_context10, o => o.value);\n\n    SupersetClient.put({\n      endpoint: \"/api/v1/dashboard/\" + this.props.dashboardId,\n      headers: { 'Content-Type': 'application/json' },\n      body: _JSON$stringify({\n        dashboard_title: values.dashboard_title,\n        slug: values.slug || null,\n        json_metadata: values.json_metadata || null,\n        owners }) }).\n\n    then(({ json }) => {\n      this.props.addSuccessToast(t('The dashboard has been saved'));\n      this.props.onDashboardSave({\n        id: this.props.dashboardId,\n        title: json.result.dashboard_title,\n        slug: json.result.slug,\n        jsonMetadata: json.result.json_metadata,\n        ownerIds: json.result.owners });\n\n      this.props.onHide();\n    }, this.handleErrorResponse);\n  }\n\n  render() {\n    const { values, isDashboardLoaded, isAdvancedOpen } = this.state;\n    return (\n      ___EmotionJSX(Modal, { show: this.props.show, onHide: this.props.onHide, bsSize: \"lg\" },\n      ___EmotionJSX(\"form\", { onSubmit: this.save },\n      ___EmotionJSX(Modal.Header, { closeButton: true },\n      ___EmotionJSX(Modal.Title, null,\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"span\", { className: \"float-left\" }, t('Dashboard Properties'))))),\n\n\n\n      ___EmotionJSX(Modal.Body, null,\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(\"h3\", null, t('Basic Information')))),\n\n\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 6 },\n      ___EmotionJSX(\"label\", { className: \"control-label\", htmlFor: \"embed-height\" },\n      t('Title')),\n\n      ___EmotionJSX(FormControl, {\n        name: \"dashboard_title\",\n        type: \"text\",\n        bsSize: \"sm\",\n        value: values.dashboard_title,\n        onChange: this.onChange,\n        disabled: !isDashboardLoaded })),\n\n\n      ___EmotionJSX(Col, { md: 6 },\n      ___EmotionJSX(\"label\", { className: \"control-label\", htmlFor: \"embed-height\" },\n      t('URL Slug')),\n\n      ___EmotionJSX(FormControl, {\n        name: \"slug\",\n        type: \"text\",\n        bsSize: \"sm\",\n        value: values.slug || '',\n        onChange: this.onChange,\n        disabled: !isDashboardLoaded }),\n\n      ___EmotionJSX(\"p\", { className: \"help-block\" },\n      t('A readable URL for your dashboard')))),\n\n\n\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 6 },\n      ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } }, t('Access')),\n      ___EmotionJSX(\"label\", { className: \"control-label\", htmlFor: \"owners\" },\n      t('Owners')),\n\n      ___EmotionJSX(AsyncSelect, {\n        name: \"owners\",\n        isMulti: true,\n        value: values.owners,\n        loadOptions: this.loadOwnerOptions,\n        defaultOptions: true // load options on render\n        , cacheOptions: true,\n        onChange: this.onOwnersChange,\n        disabled: !isDashboardLoaded,\n        filterOption: null // options are filtered at the api\n      }),\n      ___EmotionJSX(\"p\", { className: \"help-block\" },\n      t(\n      'Owners is a list of users who can alter the dashboard. Searchable by name or username.')))),\n\n\n\n\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(\"h3\", { style: { marginTop: '1em' } },\n      ___EmotionJSX(\"button\", {\n        type: \"button\",\n        className: \"text-button\",\n        onClick: this.toggleAdvanced },\n\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-angle-\" + (\n        isAdvancedOpen ? 'down' : 'right'),\n\n        style: { minWidth: '1em' } }),\n\n      t('Advanced'))),\n\n\n      isAdvancedOpen &&\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"label\", { className: \"control-label\", htmlFor: \"json_metadata\" },\n      t('JSON Metadata')),\n\n      ___EmotionJSX(AceEditor, {\n        mode: \"json\",\n        name: \"json_metadata\",\n        defaultValue: this.defaultMetadataValue,\n        value: values.json_metadata,\n        onChange: this.onMetadataChange,\n        theme: \"textmate\",\n        tabSize: 2,\n        width: \"100%\",\n        height: \"200px\" }),\n\n      ___EmotionJSX(\"p\", { className: \"help-block\" },\n      t(\n      'This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter specific parameters.')))))),\n\n\n\n\n\n\n\n      ___EmotionJSX(Modal.Footer, null,\n      ___EmotionJSX(\"span\", { className: \"float-right\" },\n      ___EmotionJSX(Button, {\n        type: \"submit\",\n        bsSize: \"sm\",\n        bsStyle: \"primary\",\n        className: \"m-r-5\",\n        disabled: this.state.errors.length > 0 },\n\n      t('Save')),\n\n      ___EmotionJSX(Button, { type: \"button\", bsSize: \"sm\", onClick: this.props.onHide },\n      t('Cancel')),\n\n      ___EmotionJSX(Dialog, {\n        ref: _ref => {\n          this.dialog = _ref;\n        } }))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nPropertiesModal.propTypes = propTypes;\nPropertiesModal.defaultProps = defaultProps;const _default =\n\nwithToasts(PropertiesModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/PropertiesModal.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/PropertiesModal.jsx\");reactHotLoader.register(PropertiesModal, \"PropertiesModal\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/PropertiesModal.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/PropertiesModal.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/PropertiesModal.jsx"],"names":["React","PropTypes","Row","Col","Button","Modal","FormControl","Dialog","AsyncSelect","AceEditor","rison","t","SupersetClient","getClientErrorObject","withToasts","propTypes","dashboardId","number","isRequired","show","bool","onHide","func","onDashboardSave","addSuccessToast","defaultProps","PropertiesModal","PureComponent","constructor","props","state","errors","values","dashboard_title","slug","owners","json_metadata","isDashboardLoaded","isAdvancedOpen","onChange","onMetadataChange","onOwnersChange","save","toggleAdvanced","loadOwnerOptions","handleErrorResponse","componentDidMount","fetchDashboardDetails","value","updateFormState","metadata","e","name","target","get","endpoint","then","response","dashboard","json","result","setState","initialSelectedOwners","owner","id","label","first_name","last_name","input","query","encode","filter","item","text","badResponse","error","statusText","dialog","title","bsSize","bsStyle","actions","DefaultAction","body","preventDefault","stopPropagation","o","put","headers","jsonMetadata","ownerIds","render","marginTop","minWidth","defaultMetadataValue","length","ref"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Modal, FormControl } from 'react-bootstrap';\nimport Dialog from 'react-bootstrap-dialog';\nimport { AsyncSelect } from 'src/components/Select';\nimport AceEditor from 'react-ace';\nimport rison from 'rison';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport '../stylesheets/buttons.less';\n\nimport getClientErrorObject from '../../utils/getClientErrorObject';\nimport withToasts from '../../messageToasts/enhancers/withToasts';\n\nconst propTypes = {\n  dashboardId: PropTypes.number.isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func,\n  onDashboardSave: PropTypes.func,\n  addSuccessToast: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  onHide: () => {},\n  onDashboardSave: () => {},\n  show: false,\n};\n\nclass PropertiesModal extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: [],\n      values: {\n        dashboard_title: '',\n        slug: '',\n        owners: [],\n        json_metadata: '',\n      },\n      isDashboardLoaded: false,\n      isAdvancedOpen: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onMetadataChange = this.onMetadataChange.bind(this);\n    this.onOwnersChange = this.onOwnersChange.bind(this);\n    this.save = this.save.bind(this);\n    this.toggleAdvanced = this.toggleAdvanced.bind(this);\n    this.loadOwnerOptions = this.loadOwnerOptions.bind(this);\n    this.handleErrorResponse = this.handleErrorResponse.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDashboardDetails();\n  }\n\n  onOwnersChange(value) {\n    this.updateFormState('owners', value);\n  }\n\n  onMetadataChange(metadata) {\n    this.updateFormState('json_metadata', metadata);\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n    this.updateFormState(name, value);\n  }\n\n  fetchDashboardDetails() {\n    // We fetch the dashboard details because not all code\n    // that renders this component have all the values we need.\n    // At some point when we have a more consistent frontend\n    // datamodel, the dashboard could probably just be passed as a prop.\n    SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${this.props.dashboardId}`,\n    }).then(response => {\n      const dashboard = response.json.result;\n      this.setState(state => ({\n        isDashboardLoaded: true,\n        values: {\n          ...state.values,\n          dashboard_title: dashboard.dashboard_title || '',\n          slug: dashboard.slug || '',\n          json_metadata: dashboard.json_metadata || '',\n        },\n      }));\n      const initialSelectedOwners = dashboard.owners.map(owner => ({\n        value: owner.id,\n        label: `${owner.first_name} ${owner.last_name}`,\n      }));\n      this.onOwnersChange(initialSelectedOwners);\n    }, this.handleErrorResponse);\n  }\n\n  loadOwnerOptions(input = '') {\n    const query = rison.encode({ filter: input });\n    return SupersetClient.get({\n      endpoint: `/api/v1/dashboard/related/owners?q=${query}`,\n    }).then(\n      response => {\n        return response.json.result.map(item => ({\n          value: item.value,\n          label: item.text,\n        }));\n      },\n      badResponse => {\n        this.handleErrorResponse(badResponse);\n        return [];\n      },\n    );\n  }\n\n  updateFormState(name, value) {\n    this.setState(state => ({\n      values: {\n        ...state.values,\n        [name]: value,\n      },\n    }));\n  }\n\n  toggleAdvanced() {\n    this.setState(state => ({\n      isAdvancedOpen: !state.isAdvancedOpen,\n    }));\n  }\n\n  async handleErrorResponse(response) {\n    const { error, statusText } = await getClientErrorObject(response);\n    this.dialog.show({\n      title: 'Error',\n      bsSize: 'medium',\n      bsStyle: 'danger',\n      actions: [Dialog.DefaultAction('Ok', () => {}, 'btn-danger')],\n      body: error || statusText || t('An error has occurred'),\n    });\n  }\n\n  save(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const { values } = this.state;\n    const owners = values.owners.map(o => o.value);\n\n    SupersetClient.put({\n      endpoint: `/api/v1/dashboard/${this.props.dashboardId}`,\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        dashboard_title: values.dashboard_title,\n        slug: values.slug || null,\n        json_metadata: values.json_metadata || null,\n        owners,\n      }),\n    }).then(({ json }) => {\n      this.props.addSuccessToast(t('The dashboard has been saved'));\n      this.props.onDashboardSave({\n        id: this.props.dashboardId,\n        title: json.result.dashboard_title,\n        slug: json.result.slug,\n        jsonMetadata: json.result.json_metadata,\n        ownerIds: json.result.owners,\n      });\n      this.props.onHide();\n    }, this.handleErrorResponse);\n  }\n\n  render() {\n    const { values, isDashboardLoaded, isAdvancedOpen } = this.state;\n    return (\n      <Modal show={this.props.show} onHide={this.props.onHide} bsSize=\"lg\">\n        <form onSubmit={this.save}>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <div>\n                <span className=\"float-left\">{t('Dashboard Properties')}</span>\n              </div>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col md={12}>\n                <h3>{t('Basic Information')}</h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={6}>\n                <label className=\"control-label\" htmlFor=\"embed-height\">\n                  {t('Title')}\n                </label>\n                <FormControl\n                  name=\"dashboard_title\"\n                  type=\"text\"\n                  bsSize=\"sm\"\n                  value={values.dashboard_title}\n                  onChange={this.onChange}\n                  disabled={!isDashboardLoaded}\n                />\n              </Col>\n              <Col md={6}>\n                <label className=\"control-label\" htmlFor=\"embed-height\">\n                  {t('URL Slug')}\n                </label>\n                <FormControl\n                  name=\"slug\"\n                  type=\"text\"\n                  bsSize=\"sm\"\n                  value={values.slug || ''}\n                  onChange={this.onChange}\n                  disabled={!isDashboardLoaded}\n                />\n                <p className=\"help-block\">\n                  {t('A readable URL for your dashboard')}\n                </p>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={6}>\n                <h3 style={{ marginTop: '1em' }}>{t('Access')}</h3>\n                <label className=\"control-label\" htmlFor=\"owners\">\n                  {t('Owners')}\n                </label>\n                <AsyncSelect\n                  name=\"owners\"\n                  isMulti\n                  value={values.owners}\n                  loadOptions={this.loadOwnerOptions}\n                  defaultOptions // load options on render\n                  cacheOptions\n                  onChange={this.onOwnersChange}\n                  disabled={!isDashboardLoaded}\n                  filterOption={null} // options are filtered at the api\n                />\n                <p className=\"help-block\">\n                  {t(\n                    'Owners is a list of users who can alter the dashboard. Searchable by name or username.',\n                  )}\n                </p>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={12}>\n                <h3 style={{ marginTop: '1em' }}>\n                  <button\n                    type=\"button\"\n                    className=\"text-button\"\n                    onClick={this.toggleAdvanced}\n                  >\n                    <i\n                      className={`fa fa-angle-${\n                        isAdvancedOpen ? 'down' : 'right'\n                      }`}\n                      style={{ minWidth: '1em' }}\n                    />\n                    {t('Advanced')}\n                  </button>\n                </h3>\n                {isAdvancedOpen && (\n                  <>\n                    <label className=\"control-label\" htmlFor=\"json_metadata\">\n                      {t('JSON Metadata')}\n                    </label>\n                    <AceEditor\n                      mode=\"json\"\n                      name=\"json_metadata\"\n                      defaultValue={this.defaultMetadataValue}\n                      value={values.json_metadata}\n                      onChange={this.onMetadataChange}\n                      theme=\"textmate\"\n                      tabSize={2}\n                      width=\"100%\"\n                      height=\"200px\"\n                    />\n                    <p className=\"help-block\">\n                      {t(\n                        'This JSON object is generated dynamically when clicking the save or overwrite button in the dashboard view. It is exposed here for reference and for power users who may want to alter specific parameters.',\n                      )}\n                    </p>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <span className=\"float-right\">\n              <Button\n                type=\"submit\"\n                bsSize=\"sm\"\n                bsStyle=\"primary\"\n                className=\"m-r-5\"\n                disabled={this.state.errors.length > 0}\n              >\n                {t('Save')}\n              </Button>\n              <Button type=\"button\" bsSize=\"sm\" onClick={this.props.onHide}>\n                {t('Cancel')}\n              </Button>\n              <Dialog\n                ref={ref => {\n                  this.dialog = ref;\n                }}\n              />\n            </span>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nPropertiesModal.propTypes = propTypes;\nPropertiesModal.defaultProps = defaultProps;\n\nexport default withToasts(PropertiesModal);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export default function transformProps(chartProps) {\n  /**\n                                                                                                                                                                                                                                                                                                                                                            * This function is called after a successful response has been\n                                                                                                                                                                                                                                                                                                                                                            * received from the chart data endpoint, and is used to transform\n                                                                                                                                                                                                                                                                                                                                                            * the incoming data prior to being sent to the Visualization.\n                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                            * The transformProps function is also quite useful to return\n                                                                                                                                                                                                                                                                                                                                                            * additional/modified props to your data viz component. The formData\n                                                                                                                                                                                                                                                                                                                                                            * can also be accessed from your HelloWorld.tsx file, but\n                                                                                                                                                                                                                                                                                                                                                            * doing supplying custom props here is often handy for integrating third\n                                                                                                                                                                                                                                                                                                                                                            * party libraries that rely on specific props.\n                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                            * A description of properties in `chartProps`:\n                                                                                                                                                                                                                                                                                                                                                            * - `height`, `width`: the height/width of the DOM element in which\n                                                                                                                                                                                                                                                                                                                                                            *   the chart is located\n                                                                                                                                                                                                                                                                                                                                                            * - `formData`: the chart data request payload that was sent to the\n                                                                                                                                                                                                                                                                                                                                                            *   backend.\n                                                                                                                                                                                                                                                                                                                                                            * - `queryData`: the chart data response payload that was received\n                                                                                                                                                                                                                                                                                                                                                            *   from the backend. Some notable properties of `queryData`:\n                                                                                                                                                                                                                                                                                                                                                            *   - `data`: an array with data, each row with an object mapping\n                                                                                                                                                                                                                                                                                                                                                            *     the column/alias to its value. Example:\n                                                                                                                                                                                                                                                                                                                                                            *     `[{ col1: 'abc', metric1: 10 }, { col1: 'xyz', metric1: 20 }]`\n                                                                                                                                                                                                                                                                                                                                                            *   - `rowcount`: the number of rows in `data`\n                                                                                                                                                                                                                                                                                                                                                            *   - `query`: the query that was issued.\n                                                                                                                                                                                                                                                                                                                                                            *\n                                                                                                                                                                                                                                                                                                                                                            * Please note: the transformProps function gets cached when the\n                                                                                                                                                                                                                                                                                                                                                            * application loads. When making changes to the `transformProps`\n                                                                                                                                                                                                                                                                                                                                                            * function during development with hot reloading, changes won't\n                                                                                                                                                                                                                                                                                                                                                            * be seen until restarting the development server.\n                                                                                                                                                                                                                                                                                                                                                            */\n  const { width, height, formData, queryData } = chartProps;\n  const data = queryData.data;\n  console.log('formData via TransformProps.ts', formData);\n  return {\n    width,\n    height,\n    data,\n    // and now your control data, manipulated as needed, and passed through as props!\n    boldText: formData.boldText,\n    headerFontSize: formData.headerFontSize,\n    headerText: formData.headerText };\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/node_modules/@superset-ui/plugin-chart-hello-world/src/plugin/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/node_modules/@superset-ui/plugin-chart-hello-world/src/plugin/transformProps.ts"],"names":[],"mappings":"uSAsBA,eAAc,SAAU,cAAV,CAAyB,UAAzB,EAA+C;AAC3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,QAAM,EAAE,KAAF,EAAS,MAAT,EAAiB,QAAjB,EAA2B,SAA3B,KAAyC,UAA/C;AACA,QAAM,IAAI,GAAG,SAAS,CAAC,IAAvB;AAEA,EAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ,EAA8C,QAA9C;AAEA,SAAO;AACL,IAAA,KADK;AAEL,IAAA,MAFK;AAGL,IAAA,IAHK;AAIL;AACA,IAAA,QAAQ,EAAE,QAAQ,CAAC,QALd;AAML,IAAA,cAAc,EAAE,QAAQ,CAAC,cANpB;AAOL,IAAA,UAAU,EAAE,QAAQ,CAAC,UAPhB,EAAP;;AASD,C,iLA5CuB,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ChartProps, DataRecord } from '@superset-ui/chart';\n\ntype HelloWorldDatum = DataRecord;\n\nexport default function transformProps(chartProps: ChartProps) {\n  /**\n   * This function is called after a successful response has been\n   * received from the chart data endpoint, and is used to transform\n   * the incoming data prior to being sent to the Visualization.\n   *\n   * The transformProps function is also quite useful to return\n   * additional/modified props to your data viz component. The formData\n   * can also be accessed from your HelloWorld.tsx file, but\n   * doing supplying custom props here is often handy for integrating third\n   * party libraries that rely on specific props.\n   *\n   * A description of properties in `chartProps`:\n   * - `height`, `width`: the height/width of the DOM element in which\n   *   the chart is located\n   * - `formData`: the chart data request payload that was sent to the\n   *   backend.\n   * - `queryData`: the chart data response payload that was received\n   *   from the backend. Some notable properties of `queryData`:\n   *   - `data`: an array with data, each row with an object mapping\n   *     the column/alias to its value. Example:\n   *     `[{ col1: 'abc', metric1: 10 }, { col1: 'xyz', metric1: 20 }]`\n   *   - `rowcount`: the number of rows in `data`\n   *   - `query`: the query that was issued.\n   *\n   * Please note: the transformProps function gets cached when the\n   * application loads. When making changes to the `transformProps`\n   * function during development with hot reloading, changes won't\n   * be seen until restarting the development server.\n   */\n  const { width, height, formData, queryData } = chartProps;\n  const data = queryData.data as HelloWorldDatum[];\n\n  console.log('formData via TransformProps.ts', formData);\n\n  return {\n    width,\n    height,\n    data,\n    // and now your control data, manipulated as needed, and passed through as props!\n    boldText: formData.boldText,\n    headerFontSize: formData.headerFontSize,\n    headerText: formData.headerText,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
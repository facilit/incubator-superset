{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/web.dom-collections.iterator\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport { addChart, removeChart, refreshChart } from '../../chart/chartAction';\nimport { chart as initChart } from '../../chart/chartReducer';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport {\naddFilter,\nremoveFilter,\nupdateDirectPathToFilter } from\n'../../dashboard/actions/dashboardFilters';\nimport { applyDefaultFormData } from '../../explore/store';\nimport getClientErrorObject from '../../utils/getClientErrorObject';\nimport { SAVE_TYPE_OVERWRITE } from '../util/constants';\nimport {\naddSuccessToast,\naddWarningToast,\naddDangerToast } from\n'../../messageToasts/actions';\nimport { UPDATE_COMPONENTS_PARENTS_LIST } from '../actions/dashboardLayout';\nimport serializeActiveFilterValues from '../util/serializeActiveFilterValues';\nimport serializeFilterScopes from '../util/serializeFilterScopes';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { safeStringify } from '../../utils/safeStringify';\n\nexport const SET_UNSAVED_CHANGES = 'SET_UNSAVED_CHANGES';\nexport function setUnsavedChanges(hasUnsavedChanges) {\n  return { type: SET_UNSAVED_CHANGES, payload: { hasUnsavedChanges } };\n}\n\nexport const ADD_SLICE = 'ADD_SLICE';\nexport function addSlice(slice) {\n  return { type: ADD_SLICE, slice };\n}\n\nexport const REMOVE_SLICE = 'REMOVE_SLICE';\nexport function removeSlice(sliceId) {\n  return { type: REMOVE_SLICE, sliceId };\n}\n\nconst FAVESTAR_BASE_URL = '/superset/favstar/Dashboard';\nexport const TOGGLE_FAVE_STAR = 'TOGGLE_FAVE_STAR';\nexport function toggleFaveStar(isStarred) {\n  return { type: TOGGLE_FAVE_STAR, isStarred };\n}\n\nexport const FETCH_FAVE_STAR = 'FETCH_FAVE_STAR';\nexport function fetchFaveStar(id) {\n  return function fetchFaveStarThunk(dispatch) {\n    return SupersetClient.get({\n      endpoint: FAVESTAR_BASE_URL + \"/\" + id + \"/count/\" }).\n\n    then(({ json }) => {\n      if (json.count > 0) dispatch(toggleFaveStar(true));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(\n    t(\n    'There was an issue fetching the favorite status of this dashboard.'))));\n\n\n\n\n  };\n}\n\nexport const SAVE_FAVE_STAR = 'SAVE_FAVE_STAR';\nexport function saveFaveStar(id, isStarred) {\n  return function saveFaveStarThunk(dispatch) {\n    const urlSuffix = isStarred ? 'unselect' : 'select';\n    return SupersetClient.get({\n      endpoint: FAVESTAR_BASE_URL + \"/\" + id + \"/\" + urlSuffix + \"/\" }).\n\n    then(() => {\n      dispatch(toggleFaveStar(!isStarred));\n    }).\n    catch(() =>\n    dispatch(\n    addDangerToast(t('There was an issue favoriting this dashboard.'))));\n\n\n  };\n}\n\nexport const TOGGLE_PUBLISHED = 'TOGGLE_PUBLISHED';\nexport function togglePublished(isPublished) {\n  return { type: TOGGLE_PUBLISHED, isPublished };\n}\n\nexport function savePublished(id, isPublished) {\n  return function savePublishedThunk(dispatch) {\n    return SupersetClient.put({\n      endpoint: \"/api/v1/dashboard/\" + id,\n      headers: { 'Content-Type': 'application/json' },\n      body: _JSON$stringify({\n        published: isPublished }) }).\n\n\n    then(() => {\n      const nowPublished = isPublished ? 'published' : 'hidden';\n      dispatch(addSuccessToast(t(\"This dashboard is now \" + nowPublished)));\n      dispatch(togglePublished(isPublished));\n    }).\n    catch(() => {\n      dispatch(\n      addDangerToast(\n      t('You do not have permissions to edit this dashboard.')));\n\n\n    });\n  };\n}\n\nexport const TOGGLE_EXPAND_SLICE = 'TOGGLE_EXPAND_SLICE';\nexport function toggleExpandSlice(sliceId) {\n  return { type: TOGGLE_EXPAND_SLICE, sliceId };\n}\n\nexport const UPDATE_CSS = 'UPDATE_CSS';\nexport function updateCss(css) {\n  return { type: UPDATE_CSS, css };\n}\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport function setEditMode(editMode) {\n  return { type: SET_EDIT_MODE, editMode };\n}\n\nexport const ON_CHANGE = 'ON_CHANGE';\nexport function onChange() {\n  return { type: ON_CHANGE };\n}\n\nexport const ON_SAVE = 'ON_SAVE';\nexport function onSave() {\n  return { type: ON_SAVE };\n}\n\nexport const SET_REFRESH_FREQUENCY = 'SET_REFRESH_FREQUENCY';\nexport function setRefreshFrequency(refreshFrequency, isPersistent = false) {\n  return { type: SET_REFRESH_FREQUENCY, refreshFrequency, isPersistent };\n}\n\nexport function saveDashboardRequestSuccess() {\n  return dispatch => {\n    dispatch(onSave());\n    // clear layout undo history\n    dispatch(UndoActionCreators.clearHistory());\n  };\n}\n\nexport function saveDashboardRequest(data, id, saveType) {\n  const path = saveType === SAVE_TYPE_OVERWRITE ? 'save_dash' : 'copy_dash';\n\n  return (dispatch, getState) => {var _context;\n    dispatch({ type: UPDATE_COMPONENTS_PARENTS_LIST });\n\n    const { dashboardFilters, dashboardLayout } = getState();\n    const layout = dashboardLayout.present;\n    _forEachInstanceProperty(_context = _Object$values(dashboardFilters)).call(_context, filter => {var _context2, _context3;\n      const { chartId } = filter;\n      const componentId = _sliceInstanceProperty(_context2 = filter.directPathToFilter).call(_context2).pop();\n      const directPathToFilter = _sliceInstanceProperty(_context3 = layout[componentId].parents || []).call(_context3);\n      directPathToFilter.push(componentId);\n      dispatch(updateDirectPathToFilter(chartId, directPathToFilter));\n    });\n    // serialize selected values for each filter field, grouped by filter id\n    const serializedFilters = serializeActiveFilterValues(getActiveFilters());\n    // serialize filter scope for each filter field, grouped by filter id\n    const serializedFilterScopes = serializeFilterScopes(dashboardFilters);\n    return SupersetClient.post({\n      endpoint: \"/superset/\" + path + \"/\" + id + \"/\",\n      postPayload: {\n        data: _Object$assign({},\n        data, {\n          default_filters: safeStringify(serializedFilters),\n          filter_scopes: safeStringify(serializedFilterScopes) }) } }).\n\n\n\n    then(response => {\n      dispatch(saveDashboardRequestSuccess());\n      dispatch(addSuccessToast(t('This dashboard was saved successfully.')));\n      return response;\n    }).\n    catch((response) =>\n    getClientErrorObject(response).then(({ error }) =>\n    dispatch(\n    addDangerToast(\n    t(\n    'Sorry, there was an error saving this dashboard: ') + \" \" +\n    error))));\n\n\n\n\n  };\n}\n\nexport function fetchCharts(\nchartList = [],\nforce = false,\ninterval = 0,\ndashboardId)\n{\n  return (dispatch, getState) => {\n    if (!interval) {\n      _forEachInstanceProperty(chartList).call(chartList, (chartKey) =>\n      dispatch(refreshChart(chartKey, force, dashboardId)));\n\n      return;\n    }\n\n    const { metadata: meta } = getState().dashboardInfo;\n    const refreshTime = Math.max(interval, meta.stagger_time || 5000); // default 5 seconds\n    if (typeof meta.stagger_refresh !== 'boolean') {\n      meta.stagger_refresh =\n      meta.stagger_refresh === undefined ?\n      true :\n      meta.stagger_refresh === 'true';\n    }\n    const delay = meta.stagger_refresh ?\n    refreshTime / (chartList.length - 1) :\n    0;\n    _forEachInstanceProperty(chartList).call(chartList, (chartKey, i) => {\n      _setTimeout(\n      () => dispatch(refreshChart(chartKey, force, dashboardId)),\n      delay * i);\n\n    });\n  };\n}\n\nexport const SHOW_BUILDER_PANE = 'SHOW_BUILDER_PANE';\nexport function showBuilderPane(builderPaneType) {\n  return { type: SHOW_BUILDER_PANE, builderPaneType };\n}\n\nexport function addSliceToDashboard(id, component) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    const selectedSlice = sliceEntities.slices[id];\n    if (!selectedSlice) {\n      return dispatch(\n      addWarningToast(\n      'Sorry, there is no chart definition associated with the chart trying to be added.'));\n\n\n    }\n    const form_data = _Object$assign({},\n    selectedSlice.form_data, {\n      slice_id: selectedSlice.slice_id });\n\n    const newChart = _Object$assign({},\n    initChart, {\n      id,\n      form_data,\n      formData: applyDefaultFormData(form_data) });\n\n\n    return _Promise.all([\n    dispatch(addChart(newChart, id)),\n    dispatch(fetchDatasourceMetadata(form_data.datasource))]).\n    then(() => {\n      dispatch(addSlice(selectedSlice));\n\n      if (selectedSlice && selectedSlice.viz_type === 'filter_box') {\n        dispatch(addFilter(id, component, selectedSlice.form_data));\n      }\n    });\n  };\n}\n\nexport function removeSliceFromDashboard(id) {\n  return (dispatch, getState) => {\n    const sliceEntity = getState().sliceEntities.slices[id];\n    if (sliceEntity && sliceEntity.viz_type === 'filter_box') {\n      dispatch(removeFilter(id));\n    }\n\n    dispatch(removeSlice(id));\n    dispatch(removeChart(id));\n  };\n}\n\nexport const SET_COLOR_SCHEME = 'SET_COLOR_SCHEME';\nexport function setColorScheme(colorScheme) {\n  return { type: SET_COLOR_SCHEME, colorScheme };\n}\n\nexport function setColorSchemeAndUnsavedChanges(colorScheme) {\n  return dispatch => {\n    dispatch(setColorScheme(colorScheme));\n    dispatch(setUnsavedChanges(true));\n  };\n}\n\nexport const SET_DIRECT_PATH = 'SET_DIRECT_PATH';\nexport function setDirectPathToChild(path) {\n  return { type: SET_DIRECT_PATH, path };\n}\n\nexport const SET_FOCUSED_FILTER_FIELD = 'SET_FOCUSED_FILTER_FIELD';\nexport function setFocusedFilterField(chartId, column) {\n  return { type: SET_FOCUSED_FILTER_FIELD, chartId, column };\n}\n\nexport function unsetFocusedFilterField() {\n  // same ACTION as setFocusedFilterField, without arguments\n  return { type: SET_FOCUSED_FILTER_FIELD };\n}\n\n// Undo history ---------------------------------------------------------------\nexport const SET_MAX_UNDO_HISTORY_EXCEEDED = 'SET_MAX_UNDO_HISTORY_EXCEEDED';\nexport function setMaxUndoHistoryExceeded(maxUndoHistoryExceeded = true) {\n  return {\n    type: SET_MAX_UNDO_HISTORY_EXCEEDED,\n    payload: { maxUndoHistoryExceeded } };\n\n}\n\nexport function maxUndoHistoryToast() {\n  return (dispatch, getState) => {\n    const { dashboardLayout } = getState();\n    const historyLength = dashboardLayout.past.length;\n\n    return dispatch(\n    addWarningToast(\"You have used all \" +\n    historyLength + \" undo slots and will not be able to fully undo subsequent actions. You may save your current state to reset the history.\"));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_UNSAVED_CHANGES, \"SET_UNSAVED_CHANGES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setUnsavedChanges, \"setUnsavedChanges\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ADD_SLICE, \"ADD_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSlice, \"addSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(REMOVE_SLICE, \"REMOVE_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSlice, \"removeSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FAVESTAR_BASE_URL, \"FAVESTAR_BASE_URL\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_FAVE_STAR, \"TOGGLE_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleFaveStar, \"toggleFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(FETCH_FAVE_STAR, \"FETCH_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchFaveStar, \"fetchFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SAVE_FAVE_STAR, \"SAVE_FAVE_STAR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveFaveStar, \"saveFaveStar\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_PUBLISHED, \"TOGGLE_PUBLISHED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(togglePublished, \"togglePublished\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(savePublished, \"savePublished\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(TOGGLE_EXPAND_SLICE, \"TOGGLE_EXPAND_SLICE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(toggleExpandSlice, \"toggleExpandSlice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(UPDATE_CSS, \"UPDATE_CSS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(updateCss, \"updateCss\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_EDIT_MODE, \"SET_EDIT_MODE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setEditMode, \"setEditMode\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_CHANGE, \"ON_CHANGE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onChange, \"onChange\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(ON_SAVE, \"ON_SAVE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(onSave, \"onSave\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_REFRESH_FREQUENCY, \"SET_REFRESH_FREQUENCY\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setRefreshFrequency, \"setRefreshFrequency\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequestSuccess, \"saveDashboardRequestSuccess\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(saveDashboardRequest, \"saveDashboardRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(fetchCharts, \"fetchCharts\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SHOW_BUILDER_PANE, \"SHOW_BUILDER_PANE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(showBuilderPane, \"showBuilderPane\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(addSliceToDashboard, \"addSliceToDashboard\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(removeSliceFromDashboard, \"removeSliceFromDashboard\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_COLOR_SCHEME, \"SET_COLOR_SCHEME\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorScheme, \"setColorScheme\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setColorSchemeAndUnsavedChanges, \"setColorSchemeAndUnsavedChanges\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_DIRECT_PATH, \"SET_DIRECT_PATH\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setDirectPathToChild, \"setDirectPathToChild\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_FOCUSED_FILTER_FIELD, \"SET_FOCUSED_FILTER_FIELD\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setFocusedFilterField, \"setFocusedFilterField\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(unsetFocusedFilterField, \"unsetFocusedFilterField\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(SET_MAX_UNDO_HISTORY_EXCEEDED, \"SET_MAX_UNDO_HISTORY_EXCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(setMaxUndoHistoryExceeded, \"setMaxUndoHistoryExceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");reactHotLoader.register(maxUndoHistoryToast, \"maxUndoHistoryToast\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/dashboardState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
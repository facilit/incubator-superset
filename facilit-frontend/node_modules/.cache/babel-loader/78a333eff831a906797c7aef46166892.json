{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed\";import \"core-js/modules/es.string.search\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, ButtonGroup, ProgressBar } from 'react-bootstrap';\nimport shortid from 'shortid';\nimport { t } from '@superset-ui/translation';\n\nimport Loading from '../../components/Loading';\nimport ExploreCtasResultsButton from './ExploreCtasResultsButton';\nimport ExploreResultsButton from './ExploreResultsButton';\nimport HighlightedSql from './HighlightedSql';\nimport FilterableTable from '../../components/FilterableTable/FilterableTable';\nimport QueryStateLabel from './QueryStateLabel';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { prepareCopyToClipboardTabularData } from '../../utils/common';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object,\n  csv: PropTypes.bool,\n  query: PropTypes.object,\n  search: PropTypes.bool,\n  showSql: PropTypes.bool,\n  visualize: PropTypes.bool,\n  cache: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  database: PropTypes.object,\n  displayLimit: PropTypes.number.isRequired };\n\nconst defaultProps = {\n  search: true,\n  visualize: true,\n  showSql: false,\n  csv: true,\n  actions: {},\n  cache: false,\n  database: {} };\n\n\nconst SEARCH_HEIGHT = 46;\n\nconst LOADING_STYLES = { position: 'relative', minHeight: 100 };\n\nexport default class ResultSet extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    this.state = {\n      searchText: '',\n      showExploreResultsButton: false,\n      data: null };\n\n\n    this.changeSearch = _bindInstanceProperty(_context = this.changeSearch).call(_context, this);\n    this.fetchResults = _bindInstanceProperty(_context2 = this.fetchResults).call(_context2, this);\n    this.popSelectStar = _bindInstanceProperty(_context3 = this.popSelectStar).call(_context3, this);\n    this.reFetchQueryResults = _bindInstanceProperty(_context4 = this.reFetchQueryResults).call(_context4, this);\n    this.toggleExploreResultsButton = _bindInstanceProperty(_context5 = this.toggleExploreResultsButton).call(_context5,\n    this);\n\n  }\n  componentDidMount() {\n    // only do this the first time the component is rendered/mounted\n    this.reRunQueryIfSessionTimeoutErrorOnMount();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // when new results comes in, save them locally and clear in store\n    if (\n    this.props.cache &&\n    !nextProps.query.cached &&\n    nextProps.query.results &&\n    nextProps.query.results.data &&\n    nextProps.query.results.data.length > 0)\n    {\n      this.setState(\n      { data: nextProps.query.results.data },\n      this.clearQueryResults(nextProps.query));\n\n    }\n    if (\n    nextProps.query.resultsKey &&\n    nextProps.query.resultsKey !== this.props.query.resultsKey)\n    {\n      this.fetchResults(nextProps.query);\n    }\n  }\n  clearQueryResults(query) {\n    this.props.actions.clearQueryResults(query);\n  }\n  popSelectStar(tmpSchema, tmpTable) {\n    const qe = {\n      id: shortid.generate(),\n      title: tmpTable,\n      autorun: false,\n      dbId: this.props.query.dbId,\n      sql: \"SELECT * FROM \" + tmpSchema + \".\" + tmpTable };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n  toggleExploreResultsButton() {\n    this.setState({\n      showExploreResultsButton: !this.state.showExploreResultsButton });\n\n  }\n  changeSearch(event) {\n    this.setState({ searchText: event.target.value });\n  }\n  fetchResults(query) {\n    this.props.actions.fetchQueryResults(query, this.props.displayLimit);\n  }\n  reFetchQueryResults(query) {\n    this.props.actions.reFetchQueryResults(query);\n  }\n  reRunQueryIfSessionTimeoutErrorOnMount() {var _context6;\n    const { query } = this.props;\n    if (\n    query.errorMessage &&\n    _indexOfInstanceProperty(_context6 = query.errorMessage).call(_context6, 'session timed out') > 0)\n    {\n      this.props.actions.runQuery(query, true);\n    }\n  }\n  renderControls() {\n    if (this.props.search || this.props.visualize || this.props.csv) {\n      let data = this.props.query.results.data;\n      if (this.props.cache && this.props.query.cached) {\n        data = this.state.data;\n      }\n      return (\n        ___EmotionJSX(\"div\", { className: \"ResultSetControls\", __source: { fileName: _jsxFileName, lineNumber: 145 }, __self: this },\n        ___EmotionJSX(\"div\", { className: \"ResultSetButtons\", __source: { fileName: _jsxFileName, lineNumber: 146 }, __self: this },\n        this.props.visualize &&\n        ___EmotionJSX(ExploreResultsButton, {\n          query: this.props.query,\n          database: this.props.database,\n          actions: this.props.actions, __source: { fileName: _jsxFileName, lineNumber: 148 }, __self: this }),\n\n\n        this.props.csv &&\n        ___EmotionJSX(Button, {\n          bsSize: \"small\",\n          href: '/superset/csv/' + this.props.query.id, __source: { fileName: _jsxFileName, lineNumber: 155 }, __self: this },\n\n        ___EmotionJSX(\"i\", { className: \"fa fa-file-text-o\", __source: { fileName: _jsxFileName, lineNumber: 159 }, __self: this }), \" \", t('.CSV')),\n\n\n\n        ___EmotionJSX(CopyToClipboard, {\n          text: prepareCopyToClipboardTabularData(data),\n          wrapped: false,\n          copyNode:\n          ___EmotionJSX(Button, { bsSize: \"small\", __source: { fileName: _jsxFileName, lineNumber: 167 }, __self: this },\n          ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", __source: { fileName: _jsxFileName, lineNumber: 168 }, __self: this }), \" \", t('Clipboard')), __source: { fileName: _jsxFileName, lineNumber: 163 }, __self: this })),\n\n\n\n\n        this.props.search &&\n        ___EmotionJSX(\"input\", {\n          type: \"text\",\n          onChange: this.changeSearch,\n          value: this.state.searchText,\n          className: \"form-control input-sm\",\n          placeholder: t('Filter Results'), __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: this })));\n\n\n\n\n    }\n    return ___EmotionJSX(\"div\", { className: \"noControls\", __source: { fileName: _jsxFileName, lineNumber: 185 }, __self: this });\n  }\n  render() {\n    const query = this.props.query;\n    const height = Math.max(\n    0,\n    this.props.search ? this.props.height - SEARCH_HEIGHT : this.props.height);\n\n    let sql;\n\n    if (this.props.showSql) {\n      sql = ___EmotionJSX(HighlightedSql, { sql: query.sql, __source: { fileName: _jsxFileName, lineNumber: 196 }, __self: this });\n    }\n\n    if (query.state === 'stopped') {\n      return ___EmotionJSX(Alert, { bsStyle: \"warning\", __source: { fileName: _jsxFileName, lineNumber: 200 }, __self: this }, \"Query was stopped\");\n    } else if (query.state === 'failed') {\n      return (\n        ___EmotionJSX(Alert, { bsStyle: \"danger\", __source: { fileName: _jsxFileName, lineNumber: 203 }, __self: this },\n        query.errorMessage,\n        query.link &&\n        ___EmotionJSX(\"a\", { href: query.link, target: \"_blank\", rel: \"noopener noreferrer\", __source: { fileName: _jsxFileName, lineNumber: 206 }, __self: this },\n        ' ',\n        t('(Request Access)'), ' ')));\n\n\n\n\n    } else if (query.state === 'success' && query.ctas) {\n      // Async queries\n      let tmpSchema = query.tempSchema;\n      let tmpTable = query.tempTableName;\n      // Sync queries, query.results.query contains the source of truth for them.\n      if (query.results && query.results.query) {\n        tmpTable = query.results.query.tempTable;\n        tmpSchema = query.results.query.tempSchema;\n      }\n      return (\n        ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 223 }, __self: this },\n        ___EmotionJSX(Alert, { bsStyle: \"info\", __source: { fileName: _jsxFileName, lineNumber: 224 }, __self: this },\n        t('Table'), \" [\",\n        ___EmotionJSX(\"strong\", { __source: { fileName: _jsxFileName, lineNumber: 226 }, __self: this },\n        tmpSchema, \".\", tmpTable), \"] \",\n\n        t('was created'), \" \\xA0\",\n        ___EmotionJSX(ButtonGroup, { __source: { fileName: _jsxFileName, lineNumber: 230 }, __self: this },\n        ___EmotionJSX(Button, {\n          bsSize: \"small\",\n          className: \"m-r-5\",\n          onClick: () => this.popSelectStar(tmpSchema, tmpTable), __source: { fileName: _jsxFileName, lineNumber: 231 }, __self: this },\n\n        t('Query in a new tab')),\n\n        ___EmotionJSX(ExploreCtasResultsButton, {\n          table: tmpTable,\n          schema: tmpSchema,\n          dbId: query.dbId,\n          database: this.props.database,\n          actions: this.props.actions, __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this })))));\n\n\n\n\n\n    } else if (query.state === 'success' && query.results) {\n      const results = query.results;\n      let data;\n      if (this.props.cache && query.cached) {\n        data = this.state.data;\n      } else if (results && results.data) {\n        data = results.data;\n      }\n      if (data && data.length > 0) {var _context7, _context8;\n        const expandedColumns = results.expanded_columns ?\n        _mapInstanceProperty(_context7 = results.expanded_columns).call(_context7, col => col.name) :\n        [];\n        return (\n          ___EmotionJSX(React.Fragment, null,\n          this.renderControls(),\n          sql,\n          ___EmotionJSX(FilterableTable, {\n            data: data,\n            orderedColumnKeys: _mapInstanceProperty(_context8 = results.columns).call(_context8, col => col.name),\n            height: height,\n            filterText: this.state.searchText,\n            expandedColumns: expandedColumns, __source: { fileName: _jsxFileName, lineNumber: 265 }, __self: this })));\n\n\n\n      } else if (data && data.length === 0) {\n        return (\n          ___EmotionJSX(Alert, { bsStyle: \"warning\", __source: { fileName: _jsxFileName, lineNumber: 276 }, __self: this }, t('The query returned no data')));\n\n      }\n    }\n    if (query.cached || query.state === 'success' && !query.results) {\n      if (query.isDataPreview) {\n        return (\n          ___EmotionJSX(Button, {\n            bsSize: \"sm\",\n            className: \"fetch\",\n            bsStyle: \"primary\",\n            onClick: () =>\n            this.reFetchQueryResults(_Object$assign({},\n            query, {\n              isDataPreview: true })), __source: { fileName: _jsxFileName, lineNumber: 283 }, __self: this },\n\n\n\n          t('Fetch data preview')));\n\n\n      } else if (query.resultsKey) {\n        return (\n          ___EmotionJSX(Button, {\n            bsSize: \"sm\",\n            className: \"fetch\",\n            bsStyle: \"primary\",\n            onClick: () => this.fetchResults(query), __source: { fileName: _jsxFileName, lineNumber: 299 }, __self: this },\n\n          t('Refetch Results')));\n\n\n      }\n    }\n    let progressBar;\n    let trackingUrl;\n    if (query.progress > 0) {\n      progressBar =\n      ___EmotionJSX(ProgressBar, {\n        striped: true,\n        now: query.progress,\n        label: query.progress.toFixed(0) + \"%\", __source: { fileName: _jsxFileName, lineNumber: 314 }, __self: this });\n\n\n    }\n    if (query.trackingUrl) {\n      trackingUrl =\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: () => {\n          window.open(query.trackingUrl);\n        }, __source: { fileName: _jsxFileName, lineNumber: 323 }, __self: this },\n\n      t('Track Job'));\n\n\n    }\n    const progressMsg =\n    query && query.extra && query.extra.progress ?\n    query.extra.progress :\n    null;\n    return (\n      ___EmotionJSX(\"div\", { style: LOADING_STYLES, __source: { fileName: _jsxFileName, lineNumber: 338 }, __self: this },\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 339 }, __self: this }, !progressBar && ___EmotionJSX(Loading, { position: \"normal\", __source: { fileName: _jsxFileName, lineNumber: 339 }, __self: this })),\n      ___EmotionJSX(QueryStateLabel, { query: query, __source: { fileName: _jsxFileName, lineNumber: 340 }, __self: this }),\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 341 }, __self: this },\n      progressMsg && ___EmotionJSX(Alert, { bsStyle: \"success\", __source: { fileName: _jsxFileName, lineNumber: 342 }, __self: this }, progressMsg)),\n\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 344 }, __self: this }, progressBar),\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 345 }, __self: this }, trackingUrl)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ResultSet.propTypes = propTypes;\nResultSet.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(SEARCH_HEIGHT, \"SEARCH_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(LOADING_STYLES, \"LOADING_STYLES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");reactHotLoader.register(ResultSet, \"ResultSet\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ResultSet.jsx"],"names":["React","PropTypes","Alert","Button","ButtonGroup","ProgressBar","shortid","t","Loading","ExploreCtasResultsButton","ExploreResultsButton","HighlightedSql","FilterableTable","QueryStateLabel","CopyToClipboard","prepareCopyToClipboardTabularData","propTypes","actions","object","csv","bool","query","search","showSql","visualize","cache","height","number","isRequired","database","displayLimit","defaultProps","SEARCH_HEIGHT","LOADING_STYLES","position","minHeight","ResultSet","PureComponent","constructor","props","state","searchText","showExploreResultsButton","data","changeSearch","fetchResults","popSelectStar","reFetchQueryResults","toggleExploreResultsButton","componentDidMount","reRunQueryIfSessionTimeoutErrorOnMount","UNSAFE_componentWillReceiveProps","nextProps","cached","results","length","setState","clearQueryResults","resultsKey","tmpSchema","tmpTable","qe","id","generate","title","autorun","dbId","sql","addQueryEditor","event","target","value","fetchQueryResults","errorMessage","runQuery","renderControls","render","Math","max","link","ctas","tempSchema","tempTableName","tempTable","expandedColumns","expanded_columns","col","name","columns","isDataPreview","progressBar","trackingUrl","progress","toFixed","window","open","progressMsg","extra"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, ButtonGroup, ProgressBar } from 'react-bootstrap';\nimport shortid from 'shortid';\nimport { t } from '@superset-ui/translation';\n\nimport Loading from '../../components/Loading';\nimport ExploreCtasResultsButton from './ExploreCtasResultsButton';\nimport ExploreResultsButton from './ExploreResultsButton';\nimport HighlightedSql from './HighlightedSql';\nimport FilterableTable from '../../components/FilterableTable/FilterableTable';\nimport QueryStateLabel from './QueryStateLabel';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { prepareCopyToClipboardTabularData } from '../../utils/common';\n\nconst propTypes = {\n  actions: PropTypes.object,\n  csv: PropTypes.bool,\n  query: PropTypes.object,\n  search: PropTypes.bool,\n  showSql: PropTypes.bool,\n  visualize: PropTypes.bool,\n  cache: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  database: PropTypes.object,\n  displayLimit: PropTypes.number.isRequired,\n};\nconst defaultProps = {\n  search: true,\n  visualize: true,\n  showSql: false,\n  csv: true,\n  actions: {},\n  cache: false,\n  database: {},\n};\n\nconst SEARCH_HEIGHT = 46;\n\nconst LOADING_STYLES = { position: 'relative', minHeight: 100 };\n\nexport default class ResultSet extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      showExploreResultsButton: false,\n      data: null,\n    };\n\n    this.changeSearch = this.changeSearch.bind(this);\n    this.fetchResults = this.fetchResults.bind(this);\n    this.popSelectStar = this.popSelectStar.bind(this);\n    this.reFetchQueryResults = this.reFetchQueryResults.bind(this);\n    this.toggleExploreResultsButton = this.toggleExploreResultsButton.bind(\n      this,\n    );\n  }\n  componentDidMount() {\n    // only do this the first time the component is rendered/mounted\n    this.reRunQueryIfSessionTimeoutErrorOnMount();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // when new results comes in, save them locally and clear in store\n    if (\n      this.props.cache &&\n      !nextProps.query.cached &&\n      nextProps.query.results &&\n      nextProps.query.results.data &&\n      nextProps.query.results.data.length > 0\n    ) {\n      this.setState(\n        { data: nextProps.query.results.data },\n        this.clearQueryResults(nextProps.query),\n      );\n    }\n    if (\n      nextProps.query.resultsKey &&\n      nextProps.query.resultsKey !== this.props.query.resultsKey\n    ) {\n      this.fetchResults(nextProps.query);\n    }\n  }\n  clearQueryResults(query) {\n    this.props.actions.clearQueryResults(query);\n  }\n  popSelectStar(tmpSchema, tmpTable) {\n    const qe = {\n      id: shortid.generate(),\n      title: tmpTable,\n      autorun: false,\n      dbId: this.props.query.dbId,\n      sql: `SELECT * FROM ${tmpSchema}.${tmpTable}`,\n    };\n    this.props.actions.addQueryEditor(qe);\n  }\n  toggleExploreResultsButton() {\n    this.setState({\n      showExploreResultsButton: !this.state.showExploreResultsButton,\n    });\n  }\n  changeSearch(event) {\n    this.setState({ searchText: event.target.value });\n  }\n  fetchResults(query) {\n    this.props.actions.fetchQueryResults(query, this.props.displayLimit);\n  }\n  reFetchQueryResults(query) {\n    this.props.actions.reFetchQueryResults(query);\n  }\n  reRunQueryIfSessionTimeoutErrorOnMount() {\n    const { query } = this.props;\n    if (\n      query.errorMessage &&\n      query.errorMessage.indexOf('session timed out') > 0\n    ) {\n      this.props.actions.runQuery(query, true);\n    }\n  }\n  renderControls() {\n    if (this.props.search || this.props.visualize || this.props.csv) {\n      let data = this.props.query.results.data;\n      if (this.props.cache && this.props.query.cached) {\n        data = this.state.data;\n      }\n      return (\n        <div className=\"ResultSetControls\">\n          <div className=\"ResultSetButtons\">\n            {this.props.visualize && (\n              <ExploreResultsButton\n                query={this.props.query}\n                database={this.props.database}\n                actions={this.props.actions}\n              />\n            )}\n            {this.props.csv && (\n              <Button\n                bsSize=\"small\"\n                href={'/superset/csv/' + this.props.query.id}\n              >\n                <i className=\"fa fa-file-text-o\" /> {t('.CSV')}\n              </Button>\n            )}\n\n            <CopyToClipboard\n              text={prepareCopyToClipboardTabularData(data)}\n              wrapped={false}\n              copyNode={\n                <Button bsSize=\"small\">\n                  <i className=\"fa fa-clipboard\" /> {t('Clipboard')}\n                </Button>\n              }\n            />\n          </div>\n          {this.props.search && (\n            <input\n              type=\"text\"\n              onChange={this.changeSearch}\n              value={this.state.searchText}\n              className=\"form-control input-sm\"\n              placeholder={t('Filter Results')}\n            />\n          )}\n        </div>\n      );\n    }\n    return <div className=\"noControls\" />;\n  }\n  render() {\n    const query = this.props.query;\n    const height = Math.max(\n      0,\n      this.props.search ? this.props.height - SEARCH_HEIGHT : this.props.height,\n    );\n    let sql;\n\n    if (this.props.showSql) {\n      sql = <HighlightedSql sql={query.sql} />;\n    }\n\n    if (query.state === 'stopped') {\n      return <Alert bsStyle=\"warning\">Query was stopped</Alert>;\n    } else if (query.state === 'failed') {\n      return (\n        <Alert bsStyle=\"danger\">\n          {query.errorMessage}\n          {query.link && (\n            <a href={query.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {' '}\n              {t('(Request Access)')}{' '}\n            </a>\n          )}\n        </Alert>\n      );\n    } else if (query.state === 'success' && query.ctas) {\n      // Async queries\n      let tmpSchema = query.tempSchema;\n      let tmpTable = query.tempTableName;\n      // Sync queries, query.results.query contains the source of truth for them.\n      if (query.results && query.results.query) {\n        tmpTable = query.results.query.tempTable;\n        tmpSchema = query.results.query.tempSchema;\n      }\n      return (\n        <div>\n          <Alert bsStyle=\"info\">\n            {t('Table')} [\n            <strong>\n              {tmpSchema}.{tmpTable}\n            </strong>\n            ] {t('was created')} &nbsp;\n            <ButtonGroup>\n              <Button\n                bsSize=\"small\"\n                className=\"m-r-5\"\n                onClick={() => this.popSelectStar(tmpSchema, tmpTable)}\n              >\n                {t('Query in a new tab')}\n              </Button>\n              <ExploreCtasResultsButton\n                table={tmpTable}\n                schema={tmpSchema}\n                dbId={query.dbId}\n                database={this.props.database}\n                actions={this.props.actions}\n              />\n            </ButtonGroup>\n          </Alert>\n        </div>\n      );\n    } else if (query.state === 'success' && query.results) {\n      const results = query.results;\n      let data;\n      if (this.props.cache && query.cached) {\n        data = this.state.data;\n      } else if (results && results.data) {\n        data = results.data;\n      }\n      if (data && data.length > 0) {\n        const expandedColumns = results.expanded_columns\n          ? results.expanded_columns.map(col => col.name)\n          : [];\n        return (\n          <>\n            {this.renderControls()}\n            {sql}\n            <FilterableTable\n              data={data}\n              orderedColumnKeys={results.columns.map(col => col.name)}\n              height={height}\n              filterText={this.state.searchText}\n              expandedColumns={expandedColumns}\n            />\n          </>\n        );\n      } else if (data && data.length === 0) {\n        return (\n          <Alert bsStyle=\"warning\">{t('The query returned no data')}</Alert>\n        );\n      }\n    }\n    if (query.cached || (query.state === 'success' && !query.results)) {\n      if (query.isDataPreview) {\n        return (\n          <Button\n            bsSize=\"sm\"\n            className=\"fetch\"\n            bsStyle=\"primary\"\n            onClick={() =>\n              this.reFetchQueryResults({\n                ...query,\n                isDataPreview: true,\n              })\n            }\n          >\n            {t('Fetch data preview')}\n          </Button>\n        );\n      } else if (query.resultsKey) {\n        return (\n          <Button\n            bsSize=\"sm\"\n            className=\"fetch\"\n            bsStyle=\"primary\"\n            onClick={() => this.fetchResults(query)}\n          >\n            {t('Refetch Results')}\n          </Button>\n        );\n      }\n    }\n    let progressBar;\n    let trackingUrl;\n    if (query.progress > 0) {\n      progressBar = (\n        <ProgressBar\n          striped\n          now={query.progress}\n          label={`${query.progress.toFixed(0)}%`}\n        />\n      );\n    }\n    if (query.trackingUrl) {\n      trackingUrl = (\n        <Button\n          bsSize=\"small\"\n          onClick={() => {\n            window.open(query.trackingUrl);\n          }}\n        >\n          {t('Track Job')}\n        </Button>\n      );\n    }\n    const progressMsg =\n      query && query.extra && query.extra.progress\n        ? query.extra.progress\n        : null;\n    return (\n      <div style={LOADING_STYLES}>\n        <div>{!progressBar && <Loading position=\"normal\" />}</div>\n        <QueryStateLabel query={query} />\n        <div>\n          {progressMsg && <Alert bsStyle=\"success\">{progressMsg}</Alert>}\n        </div>\n        <div>{progressBar}</div>\n        <div>{trackingUrl}</div>\n      </div>\n    );\n  }\n}\nResultSet.propTypes = propTypes;\nResultSet.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
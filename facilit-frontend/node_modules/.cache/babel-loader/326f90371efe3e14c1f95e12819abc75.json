{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn\n// These are control configurations that are shared ONLY within the DeckGL viz plugin repo.\n\nimport React from 'react';\nimport { t } from '@superset-ui/translation';\nimport { validateNonEmpty } from '@superset-ui/validator';\nimport { ColumnOption } from '@superset-ui/chart-controls';\nimport { D3_FORMAT_OPTIONS, columnChoices, PRIMARY_COLOR } from '../controls';\nimport { DEFAULT_VIEWPORT } from '../../explore/components/controls/ViewportControl';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst timeColumnOption = {\n  verbose_name: 'Time',\n  column_name: '__timestamp',\n  description: t(\n  'A reference to the [Time] configuration, taking granularity into ' +\n  'account') };\n\n\n\nconst groupByControl = {\n  type: 'SelectControl',\n  multi: true,\n  freeForm: true,\n  label: t('Group by'),\n  default: [],\n  includeTime: false,\n  description: t('One or many controls to group by'),\n  optionRenderer: c => ___EmotionJSX(ColumnOption, { column: c, showType: true }),\n  valueRenderer: c => ___EmotionJSX(ColumnOption, { column: c }),\n  valueKey: 'column_name',\n  allowAll: true,\n  filterOption: (opt, text) => {var _context, _context2;return (\n      opt.column_name &&\n      _indexOfInstanceProperty(_context = opt.column_name.toLowerCase()).call(_context, text.toLowerCase()) >= 0 ||\n      opt.verbose_name &&\n      _indexOfInstanceProperty(_context2 = opt.verbose_name.toLowerCase()).call(_context2, text.toLowerCase()) >= 0);},\n  promptTextCreator: label => label,\n  mapStateToProps: (state, control) => {\n    const newState = {};\n    if (state.datasource) {var _context3;\n      newState.options = _filterInstanceProperty(_context3 = state.datasource.columns).call(_context3, c => c.groupby);\n      if (control && control.includeTime) {\n        newState.options.push(timeColumnOption);\n      }\n    }\n    return newState;\n  },\n  commaChoosesOption: false };\n\n\nconst sandboxUrl =\n'https://github.com/apache/incubator-superset/' +\n'blob/master/superset-frontend/src/modules/sandbox.js';\nconst jsFunctionInfo =\n___EmotionJSX(\"div\", null,\nt(\n'For more information about objects are in context in the scope of this function, refer to the'),\n\n___EmotionJSX(\"a\", { href: sandboxUrl }, t(\" source code of Superset's sandboxed parser\"), \".\"), \".\");\n\n\n\n\nfunction jsFunctionControl(\nlabel,\ndescription,\nextraDescr = null,\nheight = 100,\ndefaultText = '')\n{\n  return {\n    type: 'TextAreaControl',\n    language: 'javascript',\n    label,\n    description,\n    height,\n    default: defaultText,\n    aboveEditorSection:\n    ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(\"p\", null, description),\n    ___EmotionJSX(\"p\", null, jsFunctionInfo),\n    extraDescr),\n\n\n    mapStateToProps: state => ({\n      warning: !state.common.conf.ENABLE_JAVASCRIPT_CONTROLS ?\n      t(\n      'This functionality is disabled in your environment for security reasons.') :\n\n      null,\n      readOnly: !state.common.conf.ENABLE_JAVASCRIPT_CONTROLS }) };\n\n\n}\n\nexport const filterNulls = {\n  name: 'filter_nulls',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Ignore null locations'),\n    default: true,\n    description: t('Whether to ignore locations that are null') } };\n\n\n\nexport const autozoom = {\n  name: 'autozoom',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Auto Zoom'),\n    default: true,\n    renderTrigger: true,\n    description: t(\n    'When checked, the map will zoom to your data after each query') } };\n\n\n\n\nexport const dimension = {\n  name: 'dimension',\n  config: _Object$assign({},\n  groupByControl, {\n    label: t('Dimension'),\n    description: t('Select a dimension'),\n    multi: false,\n    default: null }) };\n\n\n\nexport const jsColumns = {\n  name: 'js_columns',\n  config: _Object$assign({},\n  groupByControl, {\n    label: t('Extra data for JS'),\n    default: [],\n    description: t(\n    'List of extra columns made available in Javascript functions') }) };\n\n\n\n\nexport const jsDataMutator = {\n  name: 'js_data_mutator',\n  config: jsFunctionControl(\n  t('Javascript data interceptor'),\n  t(\n  'Define a javascript function that receives the data array used in the visualization ' +\n  'and is expected to return a modified version of that array. This can be used ' +\n  'to alter properties of the data, filter, or enrich the array.')) };\n\n\n\n\nexport const jsTooltip = {\n  name: 'js_tooltip',\n  config: jsFunctionControl(\n  t('Javascript tooltip generator'),\n  t(\n  'Define a function that receives the input and outputs the content for a tooltip')) };\n\n\n\n\nexport const jsOnclickHref = {\n  name: 'js_onclick_href',\n  config: jsFunctionControl(\n  t('Javascript onClick href'),\n  t('Define a function that returns a URL to navigate to when user clicks')) };\n\n\n\nexport const legendFormat = {\n  name: 'legend_format',\n  config: {\n    label: t('Legend Format'),\n    description: t('Choose the format for legend values'),\n    type: 'SelectControl',\n    clearable: false,\n    default: D3_FORMAT_OPTIONS[0],\n    choices: D3_FORMAT_OPTIONS,\n    renderTrigger: true } };\n\n\n\nexport const legendPosition = {\n  name: 'legend_position',\n  config: {\n    label: t('Legend Position'),\n    description: t('Choose the position of the legend'),\n    type: 'SelectControl',\n    clearable: false,\n    default: 'tr',\n    choices: [\n    [null, 'None'],\n    ['tl', 'Top left'],\n    ['tr', 'Top right'],\n    ['bl', 'Bottom left'],\n    ['br', 'Bottom right']],\n\n    renderTrigger: true } };\n\n\n\nexport const lineColumn = {\n  name: 'line_column',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines column'),\n    default: null,\n    description: t('The database columns that contains lines information'),\n    mapStateToProps: state => ({\n      choices: columnChoices(state.datasource) }),\n\n    validators: [validateNonEmpty] } };\n\n\n\nexport const lineWidth = {\n  name: 'line_width',\n  config: {\n    type: 'TextControl',\n    label: t('Line width'),\n    renderTrigger: true,\n    isInt: true,\n    default: 10,\n    description: t('The width of the lines') } };\n\n\n\nexport const fillColorPicker = {\n  name: 'fill_color_picker',\n  config: {\n    label: t('Fill Color'),\n    description: t(\n    ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON'),\n\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true } };\n\n\n\nexport const strokeColorPicker = {\n  name: 'stroke_color_picker',\n  config: {\n    label: t('Stroke Color'),\n    description: t(\n    ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON'),\n\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true } };\n\n\n\nexport const filled = {\n  name: 'filled',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Filled'),\n    renderTrigger: true,\n    description: t('Whether to fill the objects'),\n    default: true } };\n\n\n\nexport const stroked = {\n  name: 'stroked',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Stroked'),\n    renderTrigger: true,\n    description: t('Whether to display the stroke'),\n    default: false } };\n\n\n\nexport const extruded = {\n  name: 'extruded',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Extruded'),\n    renderTrigger: true,\n    default: true,\n    description: 'Whether to make the grid 3D' } };\n\n\n\nexport const gridSize = {\n  name: 'grid_size',\n  config: {\n    type: 'TextControl',\n    label: t('Grid Size'),\n    renderTrigger: true,\n    default: 20,\n    isInt: true,\n    description: t('Defines the grid size in pixels') } };\n\n\n\nexport const viewport = {\n  name: 'viewport',\n  config: {\n    type: 'ViewportControl',\n    label: t('Viewport'),\n    renderTrigger: false,\n    description: t('Parameters related to the view and perspective on the map'),\n    // default is whole world mostly centered\n    default: DEFAULT_VIEWPORT,\n    // Viewport changes shouldn't prompt user to re-run query\n    dontRefreshOnChange: true } };\n\n\n\nexport const spatial = {\n  name: 'spatial',\n  config: {\n    type: 'SpatialControl',\n    label: t('Longitude & Latitude'),\n    validators: [validateNonEmpty],\n    description: t('Point to your spatial columns'),\n    mapStateToProps: state => ({\n      choices: columnChoices(state.datasource) }) } };\n\n\n\n\nexport const pointRadiusFixed = {\n  name: 'point_radius_fixed',\n  config: {\n    type: 'FixedOrMetricControl',\n    label: t('Point Size'),\n    default: { type: 'fix', value: 1000 },\n    description: t('Fixed point radius'),\n    mapStateToProps: state => ({\n      datasource: state.datasource }) } };\n\n\n\n\nexport const multiplier = {\n  name: 'multiplier',\n  config: {\n    type: 'TextControl',\n    label: t('Multiplier'),\n    isFloat: true,\n    renderTrigger: true,\n    default: 1,\n    description: t('Factor to multiply the metric by') } };\n\n\n\nexport const lineType = {\n  name: 'line_type',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines encoding'),\n    clearable: false,\n    default: 'json',\n    description: t('The encoding format of the lines'),\n    choices: [\n    ['polyline', 'Polyline'],\n    ['json', 'JSON'],\n    ['geohash', 'geohash (square)']] } };\n\n\n\n\nexport const reverseLongLat = {\n  name: 'reverse_long_lat',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Reverse Lat & Long'),\n    default: false } };\n\n\n\nexport const mapboxStyle = {\n  name: 'mapbox_style',\n  config: {\n    type: 'SelectControl',\n    label: t('Map Style'),\n    clearable: false,\n    renderTrigger: true,\n    choices: [\n    ['mapbox://styles/mapbox/streets-v9', 'Streets'],\n    ['mapbox://styles/mapbox/dark-v9', 'Dark'],\n    ['mapbox://styles/mapbox/light-v9', 'Light'],\n    ['mapbox://styles/mapbox/satellite-streets-v9', 'Satellite Streets'],\n    ['mapbox://styles/mapbox/satellite-v9', 'Satellite'],\n    ['mapbox://styles/mapbox/outdoors-v9', 'Outdoors']],\n\n    default: 'mapbox://styles/mapbox/light-v9',\n    description: t('Base layer map style') } };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(timeColumnOption, \"timeColumnOption\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(groupByControl, \"groupByControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(sandboxUrl, \"sandboxUrl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsFunctionInfo, \"jsFunctionInfo\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsFunctionControl, \"jsFunctionControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(filterNulls, \"filterNulls\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(autozoom, \"autozoom\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(dimension, \"dimension\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsColumns, \"jsColumns\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsDataMutator, \"jsDataMutator\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsTooltip, \"jsTooltip\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(jsOnclickHref, \"jsOnclickHref\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(legendFormat, \"legendFormat\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(legendPosition, \"legendPosition\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(lineColumn, \"lineColumn\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(lineWidth, \"lineWidth\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(fillColorPicker, \"fillColorPicker\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(strokeColorPicker, \"strokeColorPicker\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(filled, \"filled\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(stroked, \"stroked\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(extruded, \"extruded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(gridSize, \"gridSize\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(viewport, \"viewport\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(spatial, \"spatial\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(pointRadiusFixed, \"pointRadiusFixed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(multiplier, \"multiplier\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(lineType, \"lineType\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(reverseLongLat, \"reverseLongLat\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");reactHotLoader.register(mapboxStyle, \"mapboxStyle\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlPanels/Shared_DeckGL.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
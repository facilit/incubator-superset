{"ast":null,"code":"import _throttle from \"lodash/throttle\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport getDropPosition from '../../util/getDropPosition';\n\nconst HOVER_THROTTLE_MS = 100;\n\nfunction handleHover(props, monitor, Component) {\n  // this may happen due to throttling\n  if (!Component.mounted) return;\n\n  const dropPosition = getDropPosition(monitor, Component);\n\n  if (!dropPosition) {\n    Component.setState(() => ({ dropIndicator: null }));\n    return;\n  }\n\n  Component.setState(() => ({\n    dropIndicator: dropPosition }));\n\n}\n\n// this is called very frequently by react-dnd\nconst _default = _throttle(handleHover, HOVER_THROTTLE_MS);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(HOVER_THROTTLE_MS, \"HOVER_THROTTLE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/dnd/handleHover.js\");reactHotLoader.register(handleHover, \"handleHover\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/dnd/handleHover.js\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/dnd/handleHover.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
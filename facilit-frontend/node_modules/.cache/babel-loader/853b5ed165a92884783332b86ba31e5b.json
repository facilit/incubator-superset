{"ast":null,"code":"import \"core-js/modules/es.regexp.to-string\";import \"core-js/modules/web.dom-collections.iterator\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _startsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/starts-with\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * distributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *\nnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { List } from 'immutable';\n// @ts-ignore\nimport JSONbig from 'json-bigint';\nimport React, { PureComponent } from 'react';\nimport JSONTree from 'react-json-tree';\nimport { Column, Grid, ScrollSync, SortDirection, SortIndicator, Table } from 'react-virtualized';\nimport { getMultipleTextDimensions } from '@superset-ui/dimension';\nimport { t } from '@superset-ui/translation';\nimport Button from '../Button';\nimport CopyToClipboard from '../CopyToClipboard';\nimport ModalTrigger from '../ModalTrigger';\nimport TooltipWrapper from '../TooltipWrapper';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nfunction safeJsonObjectParse(data) {var _context;\n  // First perform a cheap proxy to avoid calling JSON.parse on data that is clearly not a\n  // JSON object or array\n  if (typeof data !== 'string' ||\n  _indexOfInstanceProperty(_context = ['{', '[']).call(_context, data.substring(0, 1)) === -1) {\n    return null;\n  }\n  // We know `data` is a string starting with '{' or '[', so try to parse it as a valid object\n  try {\n    const jsonData = JSON.parse(data);\n    if (jsonData && typeof jsonData === 'object') {\n      return jsonData;\n    }\n    return null;\n  }\n  catch (_) {\n    return null;\n  }\n}\nconst SCROLL_BAR_HEIGHT = 15;\nconst GRID_POSITION_ADJUSTMENT = 4;\nconst JSON_TREE_THEME = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633' };\n\n// when more than MAX_COLUMNS_FOR_TABLE are returned, switch from table to grid view\nexport const MAX_COLUMNS_FOR_TABLE = 50;\nexport default class FilterableTable extends PureComponent {\n  constructor(props) {var _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context15, _context16;\n    super(props);\n    this.list = List(this.formatTableData(props.data));\n    this.addJsonModal = _bindInstanceProperty(_context2 = this.addJsonModal).call(_context2, this);\n    this.getCellContent = _bindInstanceProperty(_context3 = this.getCellContent).call(_context3, this);\n    this.renderGridCell = _bindInstanceProperty(_context4 = this.renderGridCell).call(_context4, this);\n    this.renderGridCellHeader = _bindInstanceProperty(_context5 = this.renderGridCellHeader).call(_context5, this);\n    this.renderGrid = _bindInstanceProperty(_context6 = this.renderGrid).call(_context6, this);\n    this.renderTableCell = _bindInstanceProperty(_context7 = this.renderTableCell).call(_context7, this);\n    this.renderTableHeader = _bindInstanceProperty(_context8 = this.renderTableHeader).call(_context8, this);\n    this.sortResults = _bindInstanceProperty(_context9 = this.sortResults).call(_context9, this);\n    this.renderTable = _bindInstanceProperty(_context10 = this.renderTable).call(_context10, this);\n    this.rowClassName = _bindInstanceProperty(_context11 = this.rowClassName).call(_context11, this);\n    this.sort = _bindInstanceProperty(_context12 = _sortInstanceProperty(this)).call(_context12, this);\n    // columns that have complex type and were expanded into sub columns\n    this.complexColumns = _reduceInstanceProperty(_context13 = props.orderedColumnKeys).call(_context13, (obj, key) => {var _context14;return _Object$assign({},\n      obj, {\n        [key]: _someInstanceProperty(_context14 = props.expandedColumns).call(_context14, name => _startsWithInstanceProperty(name).call(name, key + '.')) });},\n    {});\n    this.widthsForColumnsByKey = this.getWidthsForColumns();\n    this.totalTableWidth = _reduceInstanceProperty(_context15 = _mapInstanceProperty(_context16 = props.orderedColumnKeys).call(_context16,\n    key => this.widthsForColumnsByKey[key])).call(_context15,\n    (curr, next) => curr + next);\n    this.totalTableHeight = props.height;\n    this.state = {\n      sortDirection: SortDirection.ASC,\n      fitted: false };\n\n    this.container = React.createRef();\n  }\n  componentDidMount() {\n    this.fitTableToWidthIfNeeded();\n  }\n  getDatum(list, index) {\n    return list.get(index % list.size);\n  }\n  getWidthsForColumns() {var _context17, _context18, _context20, _context21;\n    const PADDING = 40; // accounts for cell padding and width of sorting icon\n    const widthsByColumnKey = {};\n    const cellContent = _concatInstanceProperty(_context17 = []).call(_context17, ..._mapInstanceProperty(_context18 = this.props.orderedColumnKeys).call(_context18, key => {var _context19;return _mapInstanceProperty(_context19 = this.list).call(_context19,\n      data => this.getCellContent({ cellData: data[key], columnKey: key }))\n      // @ts-ignore\n      .push(key).\n      toJS();}));\n    const colWidths = _mapInstanceProperty(_context20 = getMultipleTextDimensions({\n      className: 'cell-text-for-measuring',\n      texts: cellContent })).call(_context20,\n    dimension => dimension.width);\n    _forEachInstanceProperty(_context21 = this.props.orderedColumnKeys).call(_context21, (key, index) => {var _context22;\n      // we can't use Math.max(...colWidths.slice(...)) here since the number\n      // of elements might be bigger than the number of allowed arguments in a\n      // Javascript function\n      widthsByColumnKey[key] =\n      _reduceInstanceProperty(_context22 = _sliceInstanceProperty(colWidths).call(colWidths,\n      index * (this.list.size + 1), (index + 1) * (this.list.size + 1))).call(_context22,\n      (a, b) => Math.max(a, b)) + PADDING;\n    });\n    return widthsByColumnKey;\n  }\n  getCellContent({ cellData, columnKey }) {\n    if (cellData === null) {\n      return ___EmotionJSX(\"i\", { className: \"text-muted\" }, \"NULL\");\n    }\n    const content = String(cellData);\n    const firstCharacter = content.substring(0, 1);\n    let truncated;\n    if (firstCharacter === '[') {\n      truncated = '[…]';\n    } else\n    if (firstCharacter === '{') {\n      truncated = '{…}';\n    } else\n    {\n      truncated = '';\n    }\n    return this.complexColumns[columnKey] ? truncated : content;\n  }\n  formatTableData(data) {\n    const formattedData = _mapInstanceProperty(data).call(data, row => {\n      const newRow = {};\n      for (const k in row) {var _context23;\n        const val = row[k];\n        if (_indexOfInstanceProperty(_context23 = ['string', 'number']).call(_context23, typeof val) >= 0) {\n          newRow[k] = val;\n        } else\n        {\n          newRow[k] = val === null ? null : JSONbig.stringify(val);\n        }\n      }\n      return newRow;\n    });\n    return formattedData;\n  }\n  hasMatch(text, row) {\n    const values = [];\n    for (const key in row) {\n      if (row.hasOwnProperty(key)) {\n        const cellValue = row[key];\n        if (typeof cellValue === 'string') {\n          values.push(cellValue.toLowerCase());\n        } else\n        if (cellValue !== null &&\n        typeof cellValue.toString === 'function') {\n          values.push(cellValue.toString());\n        }\n      }\n    }\n    const lowerCaseText = text.toLowerCase();\n    return _someInstanceProperty(values).call(values, v => _includesInstanceProperty(v).call(v, lowerCaseText));\n  }\n  rowClassName({ index }) {\n    let className = '';\n    if (this.props.striped) {\n      className = index % 2 === 0 ? 'even-row' : 'odd-row';\n    }\n    return className;\n  }\n  sort({ sortBy, sortDirection }) {\n    this.setState({ sortBy, sortDirection });\n  }\n  fitTableToWidthIfNeeded() {\n    const containerWidth = this.container.current.clientWidth;\n    if (this.totalTableWidth < containerWidth) {\n      // fit table width if content doesn't fill the width of the container\n      this.totalTableWidth = containerWidth;\n    }\n    this.setState({ fitted: true });\n  }\n  addJsonModal(node, jsonObject, jsonString) {\n    return ___EmotionJSX(ModalTrigger, { modalBody: ___EmotionJSX(JSONTree, { data: jsonObject, theme: JSON_TREE_THEME }), modalFooter: ___EmotionJSX(Button, null,\n      ___EmotionJSX(CopyToClipboard, { shouldShowText: false, text: jsonString })),\n      modalTitle: t('Cell Content'), triggerNode: node });\n  }\n  sortResults(sortBy, descending) {\n    return (a, b) => {\n      const aValue = a[sortBy];\n      const bValue = b[sortBy];\n      if (aValue === bValue) {\n        // equal items sort equally\n        return 0;\n      } else\n      if (aValue === null) {\n        // nulls sort after anything else\n        return 1;\n      } else\n      if (bValue === null) {\n        return -1;\n      } else\n      if (descending) {\n        return aValue < bValue ? 1 : -1;\n      }\n      return aValue < bValue ? -1 : 1;\n    };\n  }\n  renderTableHeader({ dataKey, label, sortBy, sortDirection }) {var _context24;\n    const className = _indexOfInstanceProperty(_context24 = this.props.expandedColumns).call(_context24, label) > -1 ?\n    'header-style-disabled' :\n    'header-style';\n    return ___EmotionJSX(TooltipWrapper, { label: \"header\", tooltip: label },\n    ___EmotionJSX(\"div\", { className: className },\n    label,\n    sortBy === dataKey && ___EmotionJSX(SortIndicator, { sortDirection: sortDirection })));\n\n\n  }\n  renderGridCellHeader({ columnIndex, key, style }) {var _context25;\n    const label = this.props.orderedColumnKeys[columnIndex];\n    const className = _indexOfInstanceProperty(_context25 = this.props.expandedColumns).call(_context25, label) > -1 ?\n    'header-style-disabled' :\n    'header-style';\n    return ___EmotionJSX(TooltipWrapper, { key: key, label: \"header\", tooltip: label },\n    ___EmotionJSX(\"div\", { style: _Object$assign({},\n      style, {\n        top: typeof style.top === 'number' ?\n        style.top - GRID_POSITION_ADJUSTMENT :\n        style.top }),\n      className: className + \" grid-cell grid-header-cell\" },\n    label));\n\n\n  }\n  renderGridCell({ columnIndex, key, rowIndex, style }) {\n    const columnKey = this.props.orderedColumnKeys[columnIndex];\n    const cellData = this.list.get(rowIndex)[columnKey];\n    const content = this.getCellContent({ cellData, columnKey });\n    const cellNode = ___EmotionJSX(\"div\", { key: key, style: _Object$assign({},\n      style, {\n        top: typeof style.top === 'number' ?\n        style.top - GRID_POSITION_ADJUSTMENT :\n        style.top }),\n      className: \"grid-cell \" + this.rowClassName({ index: rowIndex }) },\n    content);\n\n    const jsonObject = safeJsonObjectParse(cellData);\n    if (jsonObject) {\n      return this.addJsonModal(cellNode, jsonObject, cellData);\n    }\n    return cellNode;\n  }\n  renderGrid() {\n    const { orderedColumnKeys, overscanColumnCount, overscanRowCount, rowHeight } = this.props;\n    let { height } = this.props;\n    let totalTableHeight = height;\n    if (this.container.current &&\n    this.totalTableWidth > this.container.current.clientWidth) {\n      // exclude the height of the horizontal scroll bar from the height of the table\n      // and the height of the table container if the content overflows\n      height -= SCROLL_BAR_HEIGHT;\n      totalTableHeight -= SCROLL_BAR_HEIGHT;\n    }\n    const getColumnWidth = ({ index }) => this.widthsForColumnsByKey[orderedColumnKeys[index]];\n    // fix height of filterable table\n    return ___EmotionJSX(ScrollSync, null,\n    ({ onScroll, scrollTop }) => ___EmotionJSX(\"div\", { style: { height }, className: \"filterable-table-container Table\", ref: this.container },\n    ___EmotionJSX(\"div\", { className: \"LeftColumn\" },\n    ___EmotionJSX(Grid, { cellRenderer: this.renderGridCellHeader, columnCount: orderedColumnKeys.length, columnWidth: getColumnWidth, height: rowHeight, rowCount: 1, rowHeight: rowHeight, scrollTop: scrollTop, width: this.totalTableWidth })),\n\n    ___EmotionJSX(\"div\", { className: \"RightColumn\" },\n    ___EmotionJSX(Grid, { cellRenderer: this.renderGridCell, columnCount: orderedColumnKeys.length, columnWidth: getColumnWidth, height: totalTableHeight - rowHeight, onScroll: onScroll, overscanColumnCount: overscanColumnCount, overscanRowCount: overscanRowCount, rowCount: this.list.size, rowHeight: rowHeight, width: this.totalTableWidth }))));\n\n\n\n  }\n  renderTableCell({ cellData, columnKey }) {\n    const cellNode = this.getCellContent({ cellData, columnKey });\n    const jsonObject = safeJsonObjectParse(cellData);\n    if (jsonObject) {\n      return this.addJsonModal(cellNode, jsonObject, cellData);\n    }\n    return cellNode;\n  }\n  renderTable() {\n    const { sortBy, sortDirection } = this.state;\n    const { filterText, headerHeight, orderedColumnKeys, overscanRowCount, rowHeight } = this.props;\n    let sortedAndFilteredList = this.list;\n    // filter list\n    if (filterText) {var _context26;\n      sortedAndFilteredList = _filterInstanceProperty(_context26 = this.list).call(_context26, row => this.hasMatch(filterText, row));\n    }\n    // sort list\n    if (sortBy) {\n      sortedAndFilteredList = _sortInstanceProperty(sortedAndFilteredList).call(sortedAndFilteredList, this.sortResults(sortBy, sortDirection === SortDirection.DESC));\n    }\n    let { height } = this.props;\n    let totalTableHeight = height;\n    if (this.container.current &&\n    this.totalTableWidth > this.container.current.clientWidth) {\n      // exclude the height of the horizontal scroll bar from the height of the table\n      // and the height of the table container if the content overflows\n      height -= SCROLL_BAR_HEIGHT;\n      totalTableHeight -= SCROLL_BAR_HEIGHT;\n    }\n    const rowGetter = ({ index }) => this.getDatum(sortedAndFilteredList, index);\n    return ___EmotionJSX(\"div\", { style: { height }, className: \"filterable-table-container\", ref: this.container },\n    this.state.fitted && ___EmotionJSX(Table, { ref: \"Table\", headerHeight: headerHeight, height: totalTableHeight, overscanRowCount: overscanRowCount, rowClassName: this.rowClassName, rowHeight: rowHeight, rowGetter: rowGetter, rowCount: sortedAndFilteredList.size, sort: _sortInstanceProperty(this), sortBy: sortBy, sortDirection: sortDirection, width: this.totalTableWidth },\n    _mapInstanceProperty(orderedColumnKeys).call(orderedColumnKeys, columnKey => ___EmotionJSX(Column, { cellRenderer: ({ cellData }) => this.renderTableCell({ cellData, columnKey }), dataKey: columnKey, disableSort: false, headerRenderer: this.renderTableHeader, width: this.widthsForColumnsByKey[columnKey], label: columnKey, key: columnKey }))));\n\n\n  }\n  render() {\n    if (this.props.orderedColumnKeys.length > MAX_COLUMNS_FOR_TABLE) {\n      return this.renderGrid();\n    }\n    return this.renderTable();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}FilterableTable.defaultProps = {\n  filterText: '',\n  headerHeight: 32,\n  overscanColumnCount: 10,\n  overscanRowCount: 10,\n  rowHeight: 32,\n  striped: true,\n  expandedColumns: [] };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(safeJsonObjectParse, \"safeJsonObjectParse\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");reactHotLoader.register(SCROLL_BAR_HEIGHT, \"SCROLL_BAR_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");reactHotLoader.register(GRID_POSITION_ADJUSTMENT, \"GRID_POSITION_ADJUSTMENT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");reactHotLoader.register(JSON_TREE_THEME, \"JSON_TREE_THEME\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");reactHotLoader.register(MAX_COLUMNS_FOR_TABLE, \"MAX_COLUMNS_FOR_TABLE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");reactHotLoader.register(FilterableTable, \"FilterableTable\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/FilterableTable/FilterableTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                         * Licensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                         * or more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                         * distributed with this work for additional information\n                                                                                                                                                                                                                                                                                                         * regarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                         * to you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                         * \"License\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                         * with the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                         *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                         * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                         * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                         * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                         * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                         * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                         * under the License.\n                                                                                                                                                                                                                                                                                                         */\nimport { t } from '@superset-ui/translation';\nimport { validateNonEmpty } from '@superset-ui/validator';\nconst config = {\n  /**\n                  * The control panel is split into two tabs: \"Query\" and\n                  * \"Chart Options\". The controls that define the inputs to\n                  * the chart data request, such as columns and metrics, usually\n                  * reside within \"Query\", while controls that affect the visual\n                  * appearance or functionality of the chart are under the\n                  * \"Chart Options\" section.\n                  *\n                  * There are several predefined controls that can be used.\n                  * Some examples:\n                  * - groupby: columns to group by (tranlated to GROUP BY statement)\n                  * - series: same as groupby, but single selection.\n                  * - metrics: multiple metrics (translated to aggregate expression)\n                  * - metric: sane as metrics, but single selection\n                  * - adhoc_filters: filters (translated to WHERE or HAVING\n                  *   depending on filter type)\n                  * - row_limit: maximum number of rows (translated to LIMIT statement)\n                  *\n                  * If a control panel has both a `series` and `groupby` control, and\n                  * the user has chosen `col1` as the value for the `series` control,\n                  * and `col2` and `col3` as values for the `groupby` control,\n                  * the resulting query will contain three groupby columns. This is due\n                  * to the `series` control having the property `queryField` set to\n                  * `groupby`, which automatically appends the values from the\n                  * `series` control to the `groupby` control when the query is generated.\n                  *\n                  * It is also possible to define custom controls by importing the\n                  * necessary dependencies and overriding the default parameters, which\n                  * can then be placed in the `controlSetRows` section\n                  * of the `Query` section instead of a predefined control.\n                  *\n                  * import { validateNonEmpty } from '@superset-ui/validator';\n                  * import { sharedControls, ControlConfig, ControlPanelConfig } from '@superset-ui/chart-controls';\n                  *\n                  * const myControl: ControlConfig<'SelectControl'> = {\n                  *   name: 'secondary_entity',\n                  *   config: {\n                  *     ...sharedControls.entity,\n                  *     type: 'SelectControl',\n                  *     label: t('Secondary Entity'),\n                  *     mapStateToProps: state => ({\n                  *       sharedControls.columnChoices(state.datasource)\n                  *       .columns.filter(c => c.groupby)\n                  *     })\n                  *     validators: [validateNonEmpty],\n                  *   },\n                  * }\n                  *\n                  * In addition to the basic drop down control, there are several predefined\n                  * control types (can be set via the `type` property) that can be used. Some\n                  * commonly used examples:\n                  * - SelectControl: Dropdown to select single or multiple values,\n                      usually columns\n                  * - MetricsControl: Dropdown to select metrics, triggering a modal\n                      to define Metric details\n                  * - AdhocFilterControl: Control to choose filters\n                  * - CheckboxControl: A checkbox for choosing true/false values\n                  * - SliderControl: A slider with min/max values\n                  * - TextControl: Control for text data\n                  *\n                  * For more control input types, check out the `incubator-superset` repo\n                  * and open this file: superset-frontend/src/explore/components/controls/index.js\n                  *\n                  * To ensure all controls have been filled out correctly, the following\n                  * validators are provided\n                  * by the `@superset-ui/validator` package:\n                  * - validateNonEmpty: must have at least one value\n                  * - validateInteger: must be an integer value\n                  * - validateNumber: must be an intger or decimal value\n                  */\n  // For control input types, see: superset-frontend/src/explore/components/controls/index.js\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [['groupby'], ['metrics'], ['adhoc_filters'], ['row_limit', null]] },\n\n  {\n    label: t('Hello Controls!'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'header_text',\n      config: {\n        type: 'TextControl',\n        default: 'Hello, World!',\n        renderTrigger: true,\n        // ^ this makes it apply instantaneously, without triggering a \"run query\" button\n        label: t('Header Text'),\n        description: t('The text you want to see in the header') } }],\n\n\n\n    [\n    {\n      name: 'bold_text',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Bold Text'),\n        renderTrigger: true,\n        default: true,\n        description: t('A checkbox to make the ') } }],\n\n\n\n    [\n    {\n      name: 'header_font_size',\n      config: {\n        type: 'SelectControl',\n        label: t('Font Size'),\n        default: 'xl',\n        choices: [\n        // [value, label]\n        ['xxs', 'xx-small'],\n        ['xs', 'x-small'],\n        ['s', 'small'],\n        ['m', 'medium'],\n        ['l', 'large'],\n        ['xl', 'x-large'],\n        ['xxl', 'xx-large']],\n\n        renderTrigger: true,\n        description: t('The size of your header font') } }]] }],\n\n\n\n\n\n\n  controlOverrides: {\n    series: {\n      validators: [validateNonEmpty],\n      clearable: false },\n\n    row_limit: {\n      default: 100 } } };const _default =\n\n\n\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/node_modules/@superset-ui/plugin-chart-hello-world/src/plugin/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/node_modules/@superset-ui/plugin-chart-hello-world/src/plugin/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/node_modules/@superset-ui/plugin-chart-hello-world/src/plugin/controlPanel.ts"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,CAAT,QAAkB,0BAAlB;AACA,SAAS,gBAAT,QAAiC,wBAAjC;AAGA,MAAM,MAAM,GAAuB;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA,EAAA,oBAAoB,EAAE;AACpB;AACE,IAAA,KAAK,EAAE,CAAC,CAAC,OAAD,CADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,cAAc,EAAE,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,SAAD,CAAd,EAA2B,CAAC,eAAD,CAA3B,EAA8C,CAAC,WAAD,EAAc,IAAd,CAA9C,CAHlB,EADoB;;AAMpB;AACE,IAAA,KAAK,EAAE,CAAC,CAAC,iBAAD,CADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,cAAc,EAAE;AACd;AACE;AACE,MAAA,IAAI,EAAE,aADR;AAEE,MAAA,MAAM,EAAE;AACN,QAAA,IAAI,EAAE,aADA;AAEN,QAAA,OAAO,EAAE,eAFH;AAGN,QAAA,aAAa,EAAE,IAHT;AAIN;AACA,QAAA,KAAK,EAAE,CAAC,CAAC,aAAD,CALF;AAMN,QAAA,WAAW,EAAE,CAAC,CAAC,wCAAD,CANR,EAFV,EADF,CADc;;;;AAcd;AACE;AACE,MAAA,IAAI,EAAE,WADR;AAEE,MAAA,MAAM,EAAE;AACN,QAAA,IAAI,EAAE,iBADA;AAEN,QAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAFF;AAGN,QAAA,aAAa,EAAE,IAHT;AAIN,QAAA,OAAO,EAAE,IAJH;AAKN,QAAA,WAAW,EAAE,CAAC,CAAC,yBAAD,CALR,EAFV,EADF,CAdc;;;;AA0Bd;AACE;AACE,MAAA,IAAI,EAAE,kBADR;AAEE,MAAA,MAAM,EAAE;AACN,QAAA,IAAI,EAAE,eADA;AAEN,QAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAFF;AAGN,QAAA,OAAO,EAAE,IAHH;AAIN,QAAA,OAAO,EAAE;AACP;AACA,SAAC,KAAD,EAAQ,UAAR,CAFO;AAGP,SAAC,IAAD,EAAO,SAAP,CAHO;AAIP,SAAC,GAAD,EAAM,OAAN,CAJO;AAKP,SAAC,GAAD,EAAM,QAAN,CALO;AAMP,SAAC,GAAD,EAAM,OAAN,CANO;AAOP,SAAC,IAAD,EAAO,SAAP,CAPO;AAQP,SAAC,KAAD,EAAQ,UAAR,CARO,CAJH;;AAcN,QAAA,aAAa,EAAE,IAdT;AAeN,QAAA,WAAW,EAAE,CAAC,CAAC,8BAAD,CAfR,EAFV,EADF,CA1Bc,CAHlB,EANoB,CAzEW;;;;;;;AAsIjC,EAAA,gBAAgB,EAAE;AAChB,IAAA,MAAM,EAAE;AACN,MAAA,UAAU,EAAE,CAAC,gBAAD,CADN;AAEN,MAAA,SAAS,EAAE,KAFL,EADQ;;AAKhB,IAAA,SAAS,EAAE;AACT,MAAA,OAAO,EAAE,GADA,EALK,EAtIe,EAAnC,C;;;;AAiJe,M,CAAf,wB,iLAjJM,M","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/translation';\nimport { validateNonEmpty } from '@superset-ui/validator';\nimport { ControlPanelConfig } from '@superset-ui/chart-controls';\n\nconst config: ControlPanelConfig = {\n  /**\n   * The control panel is split into two tabs: \"Query\" and\n   * \"Chart Options\". The controls that define the inputs to\n   * the chart data request, such as columns and metrics, usually\n   * reside within \"Query\", while controls that affect the visual\n   * appearance or functionality of the chart are under the\n   * \"Chart Options\" section.\n   *\n   * There are several predefined controls that can be used.\n   * Some examples:\n   * - groupby: columns to group by (tranlated to GROUP BY statement)\n   * - series: same as groupby, but single selection.\n   * - metrics: multiple metrics (translated to aggregate expression)\n   * - metric: sane as metrics, but single selection\n   * - adhoc_filters: filters (translated to WHERE or HAVING\n   *   depending on filter type)\n   * - row_limit: maximum number of rows (translated to LIMIT statement)\n   *\n   * If a control panel has both a `series` and `groupby` control, and\n   * the user has chosen `col1` as the value for the `series` control,\n   * and `col2` and `col3` as values for the `groupby` control,\n   * the resulting query will contain three groupby columns. This is due\n   * to the `series` control having the property `queryField` set to\n   * `groupby`, which automatically appends the values from the\n   * `series` control to the `groupby` control when the query is generated.\n   *\n   * It is also possible to define custom controls by importing the\n   * necessary dependencies and overriding the default parameters, which\n   * can then be placed in the `controlSetRows` section\n   * of the `Query` section instead of a predefined control.\n   *\n   * import { validateNonEmpty } from '@superset-ui/validator';\n   * import { sharedControls, ControlConfig, ControlPanelConfig } from '@superset-ui/chart-controls'; \n   *\n   * const myControl: ControlConfig<'SelectControl'> = {\n   *   name: 'secondary_entity',\n   *   config: {\n   *     ...sharedControls.entity,\n   *     type: 'SelectControl',\n   *     label: t('Secondary Entity'),\n   *     mapStateToProps: state => ({\n   *       sharedControls.columnChoices(state.datasource)\n   *       .columns.filter(c => c.groupby)\n   *     })\n   *     validators: [validateNonEmpty],\n   *   },\n   * }\n   *\n   * In addition to the basic drop down control, there are several predefined\n   * control types (can be set via the `type` property) that can be used. Some\n   * commonly used examples:\n   * - SelectControl: Dropdown to select single or multiple values,\n       usually columns\n   * - MetricsControl: Dropdown to select metrics, triggering a modal\n       to define Metric details\n   * - AdhocFilterControl: Control to choose filters\n   * - CheckboxControl: A checkbox for choosing true/false values\n   * - SliderControl: A slider with min/max values\n   * - TextControl: Control for text data\n   *\n   * For more control input types, check out the `incubator-superset` repo\n   * and open this file: superset-frontend/src/explore/components/controls/index.js\n   *\n   * To ensure all controls have been filled out correctly, the following\n   * validators are provided\n   * by the `@superset-ui/validator` package:\n   * - validateNonEmpty: must have at least one value\n   * - validateInteger: must be an integer value\n   * - validateNumber: must be an intger or decimal value\n   */\n\n  // For control input types, see: superset-frontend/src/explore/components/controls/index.js\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [['groupby'], ['metrics'], ['adhoc_filters'], ['row_limit', null]],\n    },\n    {\n      label: t('Hello Controls!'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'header_text',\n            config: {\n              type: 'TextControl',\n              default: 'Hello, World!',\n              renderTrigger: true,\n              // ^ this makes it apply instantaneously, without triggering a \"run query\" button\n              label: t('Header Text'),\n              description: t('The text you want to see in the header'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'bold_text',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Bold Text'),\n              renderTrigger: true,\n              default: true,\n              description: t('A checkbox to make the '),\n            },\n          },\n        ],\n        [\n          {\n            name: 'header_font_size',\n            config: {\n              type: 'SelectControl',\n              label: t('Font Size'),\n              default: 'xl',\n              choices: [\n                // [value, label]\n                ['xxs', 'xx-small'],\n                ['xs', 'x-small'],\n                ['s', 'small'],\n                ['m', 'medium'],\n                ['l', 'large'],\n                ['xl', 'x-large'],\n                ['xxl', 'xx-large'],\n              ],\n              renderTrigger: true,\n              description: t('The size of your header font'),\n            },\n          },\n        ],\n      ],\n    },\n  ],\n\n  controlOverrides: {\n    series: {\n      validators: [validateNonEmpty],\n      clearable: false,\n    },\n    row_limit: {\n      default: 100,\n    },\n  },\n};\n\nexport default config;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
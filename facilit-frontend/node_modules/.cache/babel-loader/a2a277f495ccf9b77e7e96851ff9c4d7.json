{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _findIndexInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find-index\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$is from \"@babel/runtime-corejs3/core-js-stable/object/is\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/SelectControl.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *   http://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/translation';\nimport { Select, CreatableSelect, OnPasteSelect } from 'src/components/Select';\nimport ControlHeader from 'src/explore/components/ControlHeader';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  choices: PropTypes.array,\n  clearable: PropTypes.bool,\n  description: PropTypes.string,\n  disabled: PropTypes.bool,\n  freeForm: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  label: PropTypes.string,\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  allowAll: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  value: PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.array]),\n\n  showHeader: PropTypes.bool,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  valueKey: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  noResultsText: PropTypes.string,\n  selectRef: PropTypes.func,\n  filterOption: PropTypes.func,\n  promptTextCreator: PropTypes.func,\n  commaChoosesOption: PropTypes.bool };\n\n\nconst defaultProps = {\n  autoFocus: false,\n  choices: [],\n  clearable: true,\n  description: null,\n  disabled: false,\n  freeForm: false,\n  isLoading: false,\n  label: null,\n  multi: false,\n  onChange: () => {},\n  onFocus: () => {},\n  showHeader: true,\n  valueKey: 'value',\n  noResultsText: t('No results found'),\n  promptTextCreator: label => \"Create Option \" + label,\n  commaChoosesOption: true,\n  allowAll: false };\n\n\nexport default class SelectControl extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = { options: this.getOptions(props) };\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.createMetaSelectAllOption = _bindInstanceProperty(_context2 = this.createMetaSelectAllOption).call(_context2, this);\n    this.select = null; // pointer to the react-select instance\n    this.getSelectRef = _bindInstanceProperty(_context3 = this.getSelectRef).call(_context3, this);\n    this.handleKeyDownForCreate = _bindInstanceProperty(_context4 = this.handleKeyDownForCreate).call(_context4, this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    nextProps.choices !== this.props.choices ||\n    nextProps.options !== this.props.options)\n    {\n      const options = this.getOptions(nextProps);\n      this.setState({ options });\n    }\n  }\n\n  // Beware: This is acting like an on-click instead of an on-change\n  // (firing every time user chooses vs firing only if a new option is chosen).\n  onChange(opt) {\n    let optionValue = null;\n    if (opt) {\n      if (this.props.multi) {\n        optionValue = [];\n        for (const o of opt) {\n          // select all options\n          if (o.meta === true) {var _context5, _context6;\n            this.props.onChange(\n            _mapInstanceProperty(_context5 = _filterInstanceProperty(_context6 = this.getOptions(this.props)).call(_context6,\n            x => !x.meta)).call(_context5,\n            x => x[this.props.valueKey]));\n\n            return;\n          }\n          optionValue.push(o[this.props.valueKey] || o);\n        }\n      } else if (opt.meta === true) {\n        return;\n      } else {\n        optionValue = opt[this.props.valueKey];\n      }\n    }\n    // will eventually call `exploreReducer`: SET_FIELD_VALUE\n    this.props.onChange(optionValue);\n  }\n\n  getSelectRef(instance) {\n    this.select = instance;\n    if (this.props.selectRef) {\n      this.props.selectRef(instance);\n    }\n  }\n\n  getOptions(props) {\n    let options = [];\n    if (props.options) {var _context7;\n      options = _mapInstanceProperty(_context7 = props.options).call(_context7, x => x);\n    } else if (props.choices) {var _context8;\n      // Accepts different formats of input\n      options = _mapInstanceProperty(_context8 = props.choices).call(_context8, c => {\n        let option;\n        if (_Array$isArray(c)) {\n          const [value, label] = c.length > 1 ? c : [c[0], c[0]];\n          return { label, [props.valueKey]: value };\n        }\n        if (_Object$is(c)) {\n          return c;\n        }\n        return { label: c, [props.valueKey]: c };\n      });\n    }\n    // For FreeFormSelect, insert newly created values into options\n    if (props.freeForm && props.value) {\n      const existingOptionValues = new _Set(_mapInstanceProperty(options).call(options, c => c[props.valueKey]));\n      const selectedValues = _Array$isArray(props.value) ?\n      props.value :\n      [props.value];\n      _forEachInstanceProperty(selectedValues).call(selectedValues, v => {\n        if (!existingOptionValues.has(v)) {\n          // place the newly created options at the top\n          options.unshift({ label: v, [props.valueKey]: v });\n        }\n      });\n    }\n    if (props.allowAll === true && props.multi === true) {\n      if (_findIndexInstanceProperty(options).call(options, o => this.isMetaSelectAllOption(o)) < 0) {\n        options.unshift(this.createMetaSelectAllOption());\n      }\n    } else {\n      options = _filterInstanceProperty(options).call(options, o => !this.isMetaSelectAllOption(o));\n    }\n    return options;\n  }\n\n  handleKeyDownForCreate(event) {\n    const key = event.key;\n    if (key === 'Tab' || this.props.commaChoosesOption && key === ',') {\n      // simulate an Enter event\n      if (this.select) {\n        this.select.onKeyDown(_Object$assign({}, event, { key: 'Enter' }));\n      }\n    }\n  }\n\n  isMetaSelectAllOption(o) {\n    return o.meta && o.meta === true && o.label === 'Select All';\n  }\n\n  createMetaSelectAllOption() {\n    const option = { label: 'Select All', meta: true };\n    option[this.props.valueKey] = 'Select All';\n    return option;\n  }\n\n  render() {\n    //  Tab, comma or Enter will trigger a new option created for FreeFormSelect\n    const placeholder =\n    this.props.placeholder || t('%s option(s)', this.state.options.length);\n    const isMulti = this.props.isMulti || this.props.multi;\n\n    const selectProps = {\n      autoFocus: this.props.autoFocus,\n      isMulti,\n      selectRef: this.getSelectRef,\n      name: \"select-\" + this.props.name,\n      placeholder,\n      options: this.state.options,\n      value: this.props.value,\n      labelKey: 'label',\n      valueKey: this.props.valueKey,\n      clearable: this.props.clearable,\n      isLoading: this.props.isLoading,\n      onChange: this.onChange,\n      onFocus: this.props.onFocus,\n      optionRenderer: this.props.optionRenderer,\n      valueRenderer: this.props.valueRenderer,\n      noResultsText: this.props.noResultsText,\n      disabled: this.props.disabled,\n      filterOption: this.props.filterOption,\n      promptTextCreator: this.props.promptTextCreator,\n      ignoreAccents: false };\n\n\n    let SelectComponent;\n    if (this.props.freeForm) {\n      SelectComponent = CreatableSelect;\n      // Don't create functions in `render` because React relies on shallow\n      // compare to decide weathere to rerender child components.\n      selectProps.onKeyDown = this.handleKeyDownForCreate;\n    } else {\n      SelectComponent = Select;\n    }\n\n    return (\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 236 }, __self: this },\n      this.props.showHeader && ___EmotionJSX(ControlHeader, _extends({}, this.props, { __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: this })),\n      isMulti ?\n      ___EmotionJSX(OnPasteSelect, _extends({}, selectProps, { selectWrap: SelectComponent, __source: { fileName: _jsxFileName, lineNumber: 239 }, __self: this })) :\n\n      ___EmotionJSX(SelectComponent, _extends({}, selectProps, { __source: { fileName: _jsxFileName, lineNumber: 241 }, __self: this }))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSelectControl.propTypes = propTypes;\nSelectControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/SelectControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/SelectControl.jsx\");reactHotLoader.register(SelectControl, \"SelectControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/SelectControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/SelectControl.jsx"],"names":["React","PropTypes","t","Select","CreatableSelect","OnPasteSelect","ControlHeader","propTypes","autoFocus","bool","choices","array","clearable","description","string","disabled","freeForm","isLoading","label","multi","isMulti","allowAll","name","isRequired","onChange","func","onFocus","value","oneOfType","number","showHeader","optionRenderer","valueRenderer","valueKey","options","placeholder","noResultsText","selectRef","filterOption","promptTextCreator","commaChoosesOption","defaultProps","SelectControl","PureComponent","constructor","props","state","getOptions","createMetaSelectAllOption","select","getSelectRef","handleKeyDownForCreate","UNSAFE_componentWillReceiveProps","nextProps","setState","opt","optionValue","o","meta","x","push","instance","c","option","length","existingOptionValues","selectedValues","v","has","unshift","isMetaSelectAllOption","event","key","onKeyDown","render","selectProps","labelKey","ignoreAccents","SelectComponent"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/translation';\nimport { Select, CreatableSelect, OnPasteSelect } from 'src/components/Select';\nimport ControlHeader from 'src/explore/components/ControlHeader';\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  choices: PropTypes.array,\n  clearable: PropTypes.bool,\n  description: PropTypes.string,\n  disabled: PropTypes.bool,\n  freeForm: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  label: PropTypes.string,\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  allowAll: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  showHeader: PropTypes.bool,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  valueKey: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  noResultsText: PropTypes.string,\n  selectRef: PropTypes.func,\n  filterOption: PropTypes.func,\n  promptTextCreator: PropTypes.func,\n  commaChoosesOption: PropTypes.bool,\n};\n\nconst defaultProps = {\n  autoFocus: false,\n  choices: [],\n  clearable: true,\n  description: null,\n  disabled: false,\n  freeForm: false,\n  isLoading: false,\n  label: null,\n  multi: false,\n  onChange: () => {},\n  onFocus: () => {},\n  showHeader: true,\n  valueKey: 'value',\n  noResultsText: t('No results found'),\n  promptTextCreator: label => `Create Option ${label}`,\n  commaChoosesOption: true,\n  allowAll: false,\n};\n\nexport default class SelectControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { options: this.getOptions(props) };\n    this.onChange = this.onChange.bind(this);\n    this.createMetaSelectAllOption = this.createMetaSelectAllOption.bind(this);\n    this.select = null; // pointer to the react-select instance\n    this.getSelectRef = this.getSelectRef.bind(this);\n    this.handleKeyDownForCreate = this.handleKeyDownForCreate.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.choices !== this.props.choices ||\n      nextProps.options !== this.props.options\n    ) {\n      const options = this.getOptions(nextProps);\n      this.setState({ options });\n    }\n  }\n\n  // Beware: This is acting like an on-click instead of an on-change\n  // (firing every time user chooses vs firing only if a new option is chosen).\n  onChange(opt) {\n    let optionValue = null;\n    if (opt) {\n      if (this.props.multi) {\n        optionValue = [];\n        for (const o of opt) {\n          // select all options\n          if (o.meta === true) {\n            this.props.onChange(\n              this.getOptions(this.props)\n                .filter(x => !x.meta)\n                .map(x => x[this.props.valueKey]),\n            );\n            return;\n          }\n          optionValue.push(o[this.props.valueKey] || o);\n        }\n      } else if (opt.meta === true) {\n        return;\n      } else {\n        optionValue = opt[this.props.valueKey];\n      }\n    }\n    // will eventually call `exploreReducer`: SET_FIELD_VALUE\n    this.props.onChange(optionValue);\n  }\n\n  getSelectRef(instance) {\n    this.select = instance;\n    if (this.props.selectRef) {\n      this.props.selectRef(instance);\n    }\n  }\n\n  getOptions(props) {\n    let options = [];\n    if (props.options) {\n      options = props.options.map(x => x);\n    } else if (props.choices) {\n      // Accepts different formats of input\n      options = props.choices.map(c => {\n        let option;\n        if (Array.isArray(c)) {\n          const [value, label] = c.length > 1 ? c : [c[0], c[0]];\n          return { label, [props.valueKey]: value };\n        }\n        if (Object.is(c)) {\n          return c;\n        }\n        return { label: c, [props.valueKey]: c };\n      });\n    }\n    // For FreeFormSelect, insert newly created values into options\n    if (props.freeForm && props.value) {\n      const existingOptionValues = new Set(options.map(c => c[props.valueKey]));\n      const selectedValues = Array.isArray(props.value)\n        ? props.value\n        : [props.value];\n      selectedValues.forEach(v => {\n        if (!existingOptionValues.has(v)) {\n          // place the newly created options at the top\n          options.unshift({ label: v, [props.valueKey]: v });\n        }\n      });\n    }\n    if (props.allowAll === true && props.multi === true) {\n      if (options.findIndex(o => this.isMetaSelectAllOption(o)) < 0) {\n        options.unshift(this.createMetaSelectAllOption());\n      }\n    } else {\n      options = options.filter(o => !this.isMetaSelectAllOption(o));\n    }\n    return options;\n  }\n\n  handleKeyDownForCreate(event) {\n    const key = event.key;\n    if (key === 'Tab' || (this.props.commaChoosesOption && key === ',')) {\n      // simulate an Enter event\n      if (this.select) {\n        this.select.onKeyDown({ ...event, key: 'Enter' });\n      }\n    }\n  }\n\n  isMetaSelectAllOption(o) {\n    return o.meta && o.meta === true && o.label === 'Select All';\n  }\n\n  createMetaSelectAllOption() {\n    const option = { label: 'Select All', meta: true };\n    option[this.props.valueKey] = 'Select All';\n    return option;\n  }\n\n  render() {\n    //  Tab, comma or Enter will trigger a new option created for FreeFormSelect\n    const placeholder =\n      this.props.placeholder || t('%s option(s)', this.state.options.length);\n    const isMulti = this.props.isMulti || this.props.multi;\n\n    const selectProps = {\n      autoFocus: this.props.autoFocus,\n      isMulti,\n      selectRef: this.getSelectRef,\n      name: `select-${this.props.name}`,\n      placeholder,\n      options: this.state.options,\n      value: this.props.value,\n      labelKey: 'label',\n      valueKey: this.props.valueKey,\n      clearable: this.props.clearable,\n      isLoading: this.props.isLoading,\n      onChange: this.onChange,\n      onFocus: this.props.onFocus,\n      optionRenderer: this.props.optionRenderer,\n      valueRenderer: this.props.valueRenderer,\n      noResultsText: this.props.noResultsText,\n      disabled: this.props.disabled,\n      filterOption: this.props.filterOption,\n      promptTextCreator: this.props.promptTextCreator,\n      ignoreAccents: false,\n    };\n\n    let SelectComponent;\n    if (this.props.freeForm) {\n      SelectComponent = CreatableSelect;\n      // Don't create functions in `render` because React relies on shallow\n      // compare to decide weathere to rerender child components.\n      selectProps.onKeyDown = this.handleKeyDownForCreate;\n    } else {\n      SelectComponent = Select;\n    }\n\n    return (\n      <div>\n        {this.props.showHeader && <ControlHeader {...this.props} />}\n        {isMulti ? (\n          <OnPasteSelect {...selectProps} selectWrap={SelectComponent} />\n        ) : (\n          <SelectComponent {...selectProps} />\n        )}\n      </div>\n    );\n  }\n}\n\nSelectControl.propTypes = propTypes;\nSelectControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * regarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          */\n/* eslint-env browser */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport HeaderActionsDropdown from './HeaderActionsDropdown';\nimport EditableTitle from '../../components/EditableTitle';\nimport Button from '../../components/Button';\nimport FaveStar from '../../components/FaveStar';\nimport FilterScopeModal from './filterscope/FilterScopeModal';\nimport PublishedStatus from './PublishedStatus';\nimport UndoRedoKeylisteners from './UndoRedoKeylisteners';\n\nimport { chartPropShape } from '../util/propShapes';\nimport {\nBUILDER_PANE_TYPE,\nUNDO_LIMIT,\nSAVE_TYPE_OVERWRITE,\nDASHBOARD_POSITION_DATA_LIMIT } from\n'../util/constants';\nimport { safeStringify } from '../../utils/safeStringify';\n\nimport {\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD } from\n'../../logger/LogUtils';\nimport PropertiesModal from './PropertiesModal';\nimport setPeriodicRunner from '../util/setPeriodicRunner';\nimport { options as PeriodicRefreshOptions } from './RefreshIntervalModal';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  isStarred: PropTypes.bool.isRequired,\n  isPublished: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fetchFaveStar: PropTypes.func.isRequired,\n  fetchCharts: PropTypes.func.isRequired,\n  saveFaveStar: PropTypes.func.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  updateDashboardTitle: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  updateCss: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  maxUndoHistoryExceeded: PropTypes.bool.isRequired,\n\n  // redux\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n  setMaxUndoHistoryExceeded: PropTypes.func.isRequired,\n  maxUndoHistoryToast: PropTypes.func.isRequired,\n  refreshFrequency: PropTypes.number.isRequired,\n  shouldPersistRefreshFrequency: PropTypes.bool.isRequired,\n  setRefreshFrequency: PropTypes.func.isRequired,\n  dashboardInfoChanged: PropTypes.func.isRequired,\n  dashboardTitleChanged: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  colorNamespace: undefined,\n  colorScheme: undefined };\n\n\nclass Header extends React.PureComponent {\n  static discardChanges() {\n    window.location.reload();\n  }\n\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11;\n    super(props);\n    this.state = {\n      didNotifyMaxUndoHistoryToast: false,\n      emphasizeUndo: false,\n      showingPropertiesModal: false };\n\n\n    this.handleChangeText = _bindInstanceProperty(_context = this.handleChangeText).call(_context, this);\n    this.handleCtrlZ = _bindInstanceProperty(_context2 = this.handleCtrlZ).call(_context2, this);\n    this.handleCtrlY = _bindInstanceProperty(_context3 = this.handleCtrlY).call(_context3, this);\n    this.onInsertComponentsButtonClick = _bindInstanceProperty(_context4 = this.onInsertComponentsButtonClick).call(_context4,\n    this);\n\n    this.onColorsButtonClick = _bindInstanceProperty(_context5 = this.onColorsButtonClick).call(_context5, this);\n    this.toggleEditMode = _bindInstanceProperty(_context6 = this.toggleEditMode).call(_context6, this);\n    this.forceRefresh = _bindInstanceProperty(_context7 = this.forceRefresh).call(_context7, this);\n    this.startPeriodicRender = _bindInstanceProperty(_context8 = this.startPeriodicRender).call(_context8, this);\n    this.overwriteDashboard = _bindInstanceProperty(_context9 = this.overwriteDashboard).call(_context9, this);\n    this.showPropertiesModal = _bindInstanceProperty(_context10 = this.showPropertiesModal).call(_context10, this);\n    this.hidePropertiesModal = _bindInstanceProperty(_context11 = this.hidePropertiesModal).call(_context11, this);\n  }\n\n  componentDidMount() {\n    const refreshFrequency = this.props.refreshFrequency;\n    this.startPeriodicRender(refreshFrequency * 1000);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    UNDO_LIMIT - nextProps.undoLength <= 0 &&\n    !this.state.didNotifyMaxUndoHistoryToast)\n    {\n      this.setState(() => ({ didNotifyMaxUndoHistoryToast: true }));\n      this.props.maxUndoHistoryToast();\n    }\n    if (\n    nextProps.undoLength > UNDO_LIMIT &&\n    !this.props.maxUndoHistoryExceeded)\n    {\n      this.props.setMaxUndoHistoryExceeded();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.ctrlYTimeout);\n    clearTimeout(this.ctrlZTimeout);\n  }\n\n  onInsertComponentsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.ADD_COMPONENTS);\n  }\n\n  onColorsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.COLORS);\n  }\n\n  handleChangeText(nextText) {\n    const { updateDashboardTitle, onChange } = this.props;\n    if (nextText && this.props.dashboardTitle !== nextText) {\n      updateDashboardTitle(nextText);\n      onChange();\n    }\n  }\n\n  handleCtrlY() {\n    this.props.onRedo();\n    this.setState({ emphasizeRedo: true }, () => {\n      if (this.ctrlYTimeout) clearTimeout(this.ctrlYTimeout);\n      this.ctrlYTimeout = _setTimeout(() => {\n        this.setState({ emphasizeRedo: false });\n      }, 100);\n    });\n  }\n\n  handleCtrlZ() {\n    this.props.onUndo();\n    this.setState({ emphasizeUndo: true }, () => {\n      if (this.ctrlZTimeout) clearTimeout(this.ctrlZTimeout);\n      this.ctrlZTimeout = _setTimeout(() => {\n        this.setState({ emphasizeUndo: false });\n      }, 100);\n    });\n  }\n\n  forceRefresh() {\n    if (!this.props.isLoading) {\n      const chartList = _Object$keys(this.props.charts);\n      this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartList.length });\n\n\n      return this.props.fetchCharts(\n      chartList,\n      true,\n      0,\n      this.props.dashboardInfo.id);\n\n    }\n    return false;\n  }\n\n  startPeriodicRender(interval) {\n    let intervalMessage;\n    if (interval) {\n      const predefinedValue = _findInstanceProperty(PeriodicRefreshOptions).call(PeriodicRefreshOptions,\n      option => option.value === interval / 1000);\n\n      if (predefinedValue) {\n        intervalMessage = predefinedValue.label;\n      } else {\n        intervalMessage = moment.duration(interval, 'millisecond').humanize();\n      }\n    }\n\n    const periodicRender = () => {var _context12, _context13;\n      const { fetchCharts, logEvent, charts, dashboardInfo } = this.props;\n      const { metadata } = dashboardInfo;\n      const immune = metadata.timed_refresh_immune_slices || [];\n      const affectedCharts = _mapInstanceProperty(_context12 = _filterInstanceProperty(_context13 = _Object$values(charts)).call(_context13,\n      chart => _indexOfInstanceProperty(immune).call(immune, chart.id) === -1)).call(_context12,\n      chart => chart.id);\n\n      logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n        interval,\n        chartCount: affectedCharts.length });\n\n      this.props.addWarningToast(\n      t(\"This dashboard is currently force refreshing; the next force refresh will be in %s.\",\n\n      intervalMessage));\n\n\n\n      return fetchCharts(\n      affectedCharts,\n      true,\n      interval * 0.2,\n      dashboardInfo.id);\n\n    };\n\n    this.refreshTimer = setPeriodicRunner({\n      interval,\n      periodicRender,\n      refreshTimer: this.refreshTimer });\n\n  }\n\n  toggleEditMode() {\n    this.props.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !this.props.editMode });\n\n    this.props.setEditMode(!this.props.editMode);\n  }\n\n  overwriteDashboard() {\n    const {\n      dashboardTitle,\n      layout: positions,\n      expandedSlices,\n      css,\n      colorNamespace,\n      colorScheme,\n      dashboardInfo,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency } =\n    this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n    colorScheme,\n    colorNamespace);\n\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency ?\n    currentRefreshFrequency :\n    dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      expanded_slices: expandedSlices,\n      css,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      dashboard_title: dashboardTitle,\n      refresh_frequency: refreshFrequency };\n\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(positions).length;\n    const limit =\n    dashboardInfo.common.conf.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT ||\n    DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      this.props.addDangerToast(\n      t(\n      'Your dashboard is too large. Please reduce the size before save it.'));\n\n\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        this.props.addWarningToast('Your dashboard is near the size limit.');\n      }\n\n      this.props.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }\n\n  showPropertiesModal() {\n    this.setState({ showingPropertiesModal: true });\n  }\n\n  hidePropertiesModal() {\n    this.setState({ showingPropertiesModal: false });\n  }\n\n  render() {\n    const {\n      dashboardTitle,\n      layout,\n      expandedSlices,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      onUndo,\n      onRedo,\n      undoLength,\n      redoLength,\n      onChange,\n      onSave,\n      updateCss,\n      editMode,\n      isPublished,\n      builderPaneType,\n      dashboardInfo,\n      hasUnsavedChanges,\n      isLoading,\n      refreshFrequency,\n      shouldPersistRefreshFrequency,\n      setRefreshFrequency } =\n    this.props;\n\n    const userCanEdit = dashboardInfo.dash_edit_perm;\n    const userCanSaveAs = dashboardInfo.dash_save_perm;\n    const refreshLimit =\n    dashboardInfo.common.conf.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n    const refreshWarning =\n    dashboardInfo.common.conf.\n    SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n    const popButton = hasUnsavedChanges;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"dashboard-header\", __source: { fileName: _jsxFileName, lineNumber: 363 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"dashboard-component-header header-large\", __source: { fileName: _jsxFileName, lineNumber: 364 }, __self: this },\n      ___EmotionJSX(EditableTitle, {\n        title: dashboardTitle,\n        canEdit: userCanEdit && editMode,\n        onSaveTitle: this.handleChangeText,\n        showTooltip: false, __source: { fileName: _jsxFileName, lineNumber: 365 }, __self: this }),\n\n      ___EmotionJSX(\"span\", { className: \"publish\", __source: { fileName: _jsxFileName, lineNumber: 371 }, __self: this },\n      ___EmotionJSX(PublishedStatus, {\n        dashboardId: dashboardInfo.id,\n        isPublished: isPublished,\n        savePublished: this.props.savePublished,\n        canEdit: userCanEdit,\n        canSave: userCanSaveAs, __source: { fileName: _jsxFileName, lineNumber: 372 }, __self: this })),\n\n\n      dashboardInfo.userId &&\n      ___EmotionJSX(\"span\", { className: \"favstar\", __source: { fileName: _jsxFileName, lineNumber: 381 }, __self: this },\n      ___EmotionJSX(FaveStar, {\n        itemId: dashboardInfo.id,\n        fetchFaveStar: this.props.fetchFaveStar,\n        saveFaveStar: this.props.saveFaveStar,\n        isStarred: this.props.isStarred, __source: { fileName: _jsxFileName, lineNumber: 382 }, __self: this }))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"button-container\", __source: { fileName: _jsxFileName, lineNumber: 392 }, __self: this },\n      userCanSaveAs &&\n      ___EmotionJSX(\"div\", { className: \"button-container\", __source: { fileName: _jsxFileName, lineNumber: 394 }, __self: this },\n      editMode &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: onUndo,\n        disabled: undoLength < 1,\n        bsStyle: this.state.emphasizeUndo ? 'primary' : undefined, __source: { fileName: _jsxFileName, lineNumber: 396 }, __self: this },\n\n      ___EmotionJSX(\"div\", { title: \"Undo\", className: \"undo-action fa fa-reply\", __source: { fileName: _jsxFileName, lineNumber: 402 }, __self: this })),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: onRedo,\n        disabled: redoLength < 1,\n        bsStyle: this.state.emphasizeRedo ? 'primary' : undefined, __source: { fileName: _jsxFileName, lineNumber: 407 }, __self: this },\n\n      ___EmotionJSX(\"div\", { title: \"Redo\", className: \"redo-action fa fa-share\", __source: { fileName: _jsxFileName, lineNumber: 413 }, __self: this })),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        active: builderPaneType === BUILDER_PANE_TYPE.ADD_COMPONENTS,\n        bsSize: \"small\",\n        onClick: this.onInsertComponentsButtonClick, __source: { fileName: _jsxFileName, lineNumber: 418 }, __self: this },\n\n      t('Components')),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        active: builderPaneType === BUILDER_PANE_TYPE.COLORS,\n        bsSize: \"small\",\n        onClick: this.onColorsButtonClick, __source: { fileName: _jsxFileName, lineNumber: 428 }, __self: this },\n\n      t('Colors')),\n\n\n\n      editMode &&\n      ___EmotionJSX(FilterScopeModal, {\n        triggerNode: ___EmotionJSX(Button, { bsSize: \"small\", __source: { fileName: _jsxFileName, lineNumber: 439 }, __self: this }, t('Filters')), __source: { fileName: _jsxFileName, lineNumber: 438 }, __self: this }),\n\n\n\n      editMode && hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        bsStyle: popButton ? 'primary' : undefined,\n        onClick: this.overwriteDashboard, __source: { fileName: _jsxFileName, lineNumber: 444 }, __self: this },\n\n      t('Save changes')),\n\n\n\n      editMode && !hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: this.toggleEditMode,\n        bsStyle: undefined,\n        disabled: !userCanEdit, __source: { fileName: _jsxFileName, lineNumber: 454 }, __self: this },\n\n      t('Switch to view mode')),\n\n\n\n      editMode &&\n      ___EmotionJSX(UndoRedoKeylisteners, {\n        onUndo: this.handleCtrlZ,\n        onRedo: this.handleCtrlY, __source: { fileName: _jsxFileName, lineNumber: 465 }, __self: this })),\n\n\n\n\n\n      !editMode && !hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: this.toggleEditMode,\n        bsStyle: popButton ? 'primary' : undefined,\n        disabled: !userCanEdit, __source: { fileName: _jsxFileName, lineNumber: 474 }, __self: this },\n\n      t('Edit dashboard')),\n\n\n\n      this.state.showingPropertiesModal &&\n      ___EmotionJSX(PropertiesModal, {\n        dashboardId: dashboardInfo.id,\n        show: this.state.showingPropertiesModal,\n        onHide: this.hidePropertiesModal,\n        onDashboardSave: updates => {\n          this.props.dashboardInfoChanged({\n            slug: updates.slug,\n            metadata: JSON.parse(updates.jsonMetadata) });\n\n          this.props.dashboardTitleChanged(updates.title);\n          if (updates.slug) {\n            history.pushState(\n            { event: 'dashboard_properties_changed' },\n            '', \"/superset/dashboard/\" +\n            updates.slug + \"/\");\n\n          }\n        }, __source: { fileName: _jsxFileName, lineNumber: 485 }, __self: this }),\n\n\n\n      ___EmotionJSX(HeaderActionsDropdown, {\n        addSuccessToast: this.props.addSuccessToast,\n        addDangerToast: this.props.addDangerToast,\n        dashboardId: dashboardInfo.id,\n        dashboardTitle: dashboardTitle,\n        dashboardInfo: dashboardInfo,\n        layout: layout,\n        expandedSlices: expandedSlices,\n        customCss: customCss,\n        colorNamespace: colorNamespace,\n        colorScheme: colorScheme,\n        onSave: onSave,\n        onChange: onChange,\n        forceRefreshAllCharts: this.forceRefresh,\n        startPeriodicRender: this.startPeriodicRender,\n        refreshFrequency: refreshFrequency,\n        shouldPersistRefreshFrequency: shouldPersistRefreshFrequency,\n        setRefreshFrequency: setRefreshFrequency,\n        updateCss: updateCss,\n        editMode: editMode,\n        hasUnsavedChanges: hasUnsavedChanges,\n        userCanEdit: userCanEdit,\n        userCanSave: userCanSaveAs,\n        isLoading: isLoading,\n        showPropertiesModal: this.showPropertiesModal,\n        refreshLimit: refreshLimit,\n        refreshWarning: refreshWarning, __source: { fileName: _jsxFileName, lineNumber: 506 }, __self: this }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;const _default =\n\nHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(Header, \"Header\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx"],"names":["moment","React","PropTypes","CategoricalColorNamespace","t","HeaderActionsDropdown","EditableTitle","Button","FaveStar","FilterScopeModal","PublishedStatus","UndoRedoKeylisteners","chartPropShape","BUILDER_PANE_TYPE","UNDO_LIMIT","SAVE_TYPE_OVERWRITE","DASHBOARD_POSITION_DATA_LIMIT","safeStringify","LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD","LOG_ACTIONS_FORCE_REFRESH_DASHBOARD","LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD","PropertiesModal","setPeriodicRunner","options","PeriodicRefreshOptions","propTypes","addSuccessToast","func","isRequired","addDangerToast","addWarningToast","dashboardInfo","object","dashboardTitle","string","charts","objectOf","layout","expandedSlices","customCss","colorNamespace","colorScheme","isStarred","bool","isPublished","isLoading","onSave","onChange","fetchFaveStar","fetchCharts","saveFaveStar","savePublished","updateDashboardTitle","editMode","setEditMode","showBuilderPane","builderPaneType","updateCss","logEvent","hasUnsavedChanges","maxUndoHistoryExceeded","onUndo","onRedo","undoLength","number","redoLength","setMaxUndoHistoryExceeded","maxUndoHistoryToast","refreshFrequency","shouldPersistRefreshFrequency","setRefreshFrequency","dashboardInfoChanged","dashboardTitleChanged","defaultProps","undefined","Header","PureComponent","discardChanges","window","location","reload","constructor","props","state","didNotifyMaxUndoHistoryToast","emphasizeUndo","showingPropertiesModal","handleChangeText","handleCtrlZ","handleCtrlY","onInsertComponentsButtonClick","onColorsButtonClick","toggleEditMode","forceRefresh","startPeriodicRender","overwriteDashboard","showPropertiesModal","hidePropertiesModal","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","setState","componentWillUnmount","clearTimeout","ctrlYTimeout","ctrlZTimeout","ADD_COMPONENTS","COLORS","nextText","emphasizeRedo","chartList","force","interval","chartCount","length","id","intervalMessage","predefinedValue","option","value","label","duration","humanize","periodicRender","metadata","immune","timed_refresh_immune_slices","affectedCharts","chart","refreshTimer","edit_mode","positions","css","currentRefreshFrequency","scale","getScale","labelColors","getColorMap","refresh_frequency","data","expanded_slices","color_namespace","color_scheme","label_colors","dashboard_title","positionJSONLength","limit","common","conf","SUPERSET_DASHBOARD_POSITION_DATA_LIMIT","render","userCanEdit","dash_edit_perm","userCanSaveAs","dash_save_perm","refreshLimit","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT","refreshWarning","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE","popButton","userId","updates","slug","JSON","parse","jsonMetadata","title","history","pushState","event"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport HeaderActionsDropdown from './HeaderActionsDropdown';\nimport EditableTitle from '../../components/EditableTitle';\nimport Button from '../../components/Button';\nimport FaveStar from '../../components/FaveStar';\nimport FilterScopeModal from './filterscope/FilterScopeModal';\nimport PublishedStatus from './PublishedStatus';\nimport UndoRedoKeylisteners from './UndoRedoKeylisteners';\n\nimport { chartPropShape } from '../util/propShapes';\nimport {\n  BUILDER_PANE_TYPE,\n  UNDO_LIMIT,\n  SAVE_TYPE_OVERWRITE,\n  DASHBOARD_POSITION_DATA_LIMIT,\n} from '../util/constants';\nimport { safeStringify } from '../../utils/safeStringify';\n\nimport {\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\n} from '../../logger/LogUtils';\nimport PropertiesModal from './PropertiesModal';\nimport setPeriodicRunner from '../util/setPeriodicRunner';\nimport { options as PeriodicRefreshOptions } from './RefreshIntervalModal';\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  isStarred: PropTypes.bool.isRequired,\n  isPublished: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fetchFaveStar: PropTypes.func.isRequired,\n  fetchCharts: PropTypes.func.isRequired,\n  saveFaveStar: PropTypes.func.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  updateDashboardTitle: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  updateCss: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  maxUndoHistoryExceeded: PropTypes.bool.isRequired,\n\n  // redux\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n  setMaxUndoHistoryExceeded: PropTypes.func.isRequired,\n  maxUndoHistoryToast: PropTypes.func.isRequired,\n  refreshFrequency: PropTypes.number.isRequired,\n  shouldPersistRefreshFrequency: PropTypes.bool.isRequired,\n  setRefreshFrequency: PropTypes.func.isRequired,\n  dashboardInfoChanged: PropTypes.func.isRequired,\n  dashboardTitleChanged: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  colorNamespace: undefined,\n  colorScheme: undefined,\n};\n\nclass Header extends React.PureComponent {\n  static discardChanges() {\n    window.location.reload();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      didNotifyMaxUndoHistoryToast: false,\n      emphasizeUndo: false,\n      showingPropertiesModal: false,\n    };\n\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleCtrlZ = this.handleCtrlZ.bind(this);\n    this.handleCtrlY = this.handleCtrlY.bind(this);\n    this.onInsertComponentsButtonClick = this.onInsertComponentsButtonClick.bind(\n      this,\n    );\n    this.onColorsButtonClick = this.onColorsButtonClick.bind(this);\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.startPeriodicRender = this.startPeriodicRender.bind(this);\n    this.overwriteDashboard = this.overwriteDashboard.bind(this);\n    this.showPropertiesModal = this.showPropertiesModal.bind(this);\n    this.hidePropertiesModal = this.hidePropertiesModal.bind(this);\n  }\n\n  componentDidMount() {\n    const refreshFrequency = this.props.refreshFrequency;\n    this.startPeriodicRender(refreshFrequency * 1000);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      UNDO_LIMIT - nextProps.undoLength <= 0 &&\n      !this.state.didNotifyMaxUndoHistoryToast\n    ) {\n      this.setState(() => ({ didNotifyMaxUndoHistoryToast: true }));\n      this.props.maxUndoHistoryToast();\n    }\n    if (\n      nextProps.undoLength > UNDO_LIMIT &&\n      !this.props.maxUndoHistoryExceeded\n    ) {\n      this.props.setMaxUndoHistoryExceeded();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.ctrlYTimeout);\n    clearTimeout(this.ctrlZTimeout);\n  }\n\n  onInsertComponentsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.ADD_COMPONENTS);\n  }\n\n  onColorsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.COLORS);\n  }\n\n  handleChangeText(nextText) {\n    const { updateDashboardTitle, onChange } = this.props;\n    if (nextText && this.props.dashboardTitle !== nextText) {\n      updateDashboardTitle(nextText);\n      onChange();\n    }\n  }\n\n  handleCtrlY() {\n    this.props.onRedo();\n    this.setState({ emphasizeRedo: true }, () => {\n      if (this.ctrlYTimeout) clearTimeout(this.ctrlYTimeout);\n      this.ctrlYTimeout = setTimeout(() => {\n        this.setState({ emphasizeRedo: false });\n      }, 100);\n    });\n  }\n\n  handleCtrlZ() {\n    this.props.onUndo();\n    this.setState({ emphasizeUndo: true }, () => {\n      if (this.ctrlZTimeout) clearTimeout(this.ctrlZTimeout);\n      this.ctrlZTimeout = setTimeout(() => {\n        this.setState({ emphasizeUndo: false });\n      }, 100);\n    });\n  }\n\n  forceRefresh() {\n    if (!this.props.isLoading) {\n      const chartList = Object.keys(this.props.charts);\n      this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartList.length,\n      });\n\n      return this.props.fetchCharts(\n        chartList,\n        true,\n        0,\n        this.props.dashboardInfo.id,\n      );\n    }\n    return false;\n  }\n\n  startPeriodicRender(interval) {\n    let intervalMessage;\n    if (interval) {\n      const predefinedValue = PeriodicRefreshOptions.find(\n        option => option.value === interval / 1000,\n      );\n      if (predefinedValue) {\n        intervalMessage = predefinedValue.label;\n      } else {\n        intervalMessage = moment.duration(interval, 'millisecond').humanize();\n      }\n    }\n\n    const periodicRender = () => {\n      const { fetchCharts, logEvent, charts, dashboardInfo } = this.props;\n      const { metadata } = dashboardInfo;\n      const immune = metadata.timed_refresh_immune_slices || [];\n      const affectedCharts = Object.values(charts)\n        .filter(chart => immune.indexOf(chart.id) === -1)\n        .map(chart => chart.id);\n\n      logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n        interval,\n        chartCount: affectedCharts.length,\n      });\n      this.props.addWarningToast(\n        t(\n          `This dashboard is currently force refreshing; the next force refresh will be in %s.`,\n          intervalMessage,\n        ),\n      );\n\n      return fetchCharts(\n        affectedCharts,\n        true,\n        interval * 0.2,\n        dashboardInfo.id,\n      );\n    };\n\n    this.refreshTimer = setPeriodicRunner({\n      interval,\n      periodicRender,\n      refreshTimer: this.refreshTimer,\n    });\n  }\n\n  toggleEditMode() {\n    this.props.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !this.props.editMode,\n    });\n    this.props.setEditMode(!this.props.editMode);\n  }\n\n  overwriteDashboard() {\n    const {\n      dashboardTitle,\n      layout: positions,\n      expandedSlices,\n      css,\n      colorNamespace,\n      colorScheme,\n      dashboardInfo,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency,\n    } = this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n      colorScheme,\n      colorNamespace,\n    );\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency\n      ? currentRefreshFrequency\n      : dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      expanded_slices: expandedSlices,\n      css,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      dashboard_title: dashboardTitle,\n      refresh_frequency: refreshFrequency,\n    };\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(positions).length;\n    const limit =\n      dashboardInfo.common.conf.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT ||\n      DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      this.props.addDangerToast(\n        t(\n          'Your dashboard is too large. Please reduce the size before save it.',\n        ),\n      );\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        this.props.addWarningToast('Your dashboard is near the size limit.');\n      }\n\n      this.props.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }\n\n  showPropertiesModal() {\n    this.setState({ showingPropertiesModal: true });\n  }\n\n  hidePropertiesModal() {\n    this.setState({ showingPropertiesModal: false });\n  }\n\n  render() {\n    const {\n      dashboardTitle,\n      layout,\n      expandedSlices,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      onUndo,\n      onRedo,\n      undoLength,\n      redoLength,\n      onChange,\n      onSave,\n      updateCss,\n      editMode,\n      isPublished,\n      builderPaneType,\n      dashboardInfo,\n      hasUnsavedChanges,\n      isLoading,\n      refreshFrequency,\n      shouldPersistRefreshFrequency,\n      setRefreshFrequency,\n    } = this.props;\n\n    const userCanEdit = dashboardInfo.dash_edit_perm;\n    const userCanSaveAs = dashboardInfo.dash_save_perm;\n    const refreshLimit =\n      dashboardInfo.common.conf.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n    const refreshWarning =\n      dashboardInfo.common.conf\n        .SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n    const popButton = hasUnsavedChanges;\n\n    return (\n      <div className=\"dashboard-header\">\n        <div className=\"dashboard-component-header header-large\">\n          <EditableTitle\n            title={dashboardTitle}\n            canEdit={userCanEdit && editMode}\n            onSaveTitle={this.handleChangeText}\n            showTooltip={false}\n          />\n          <span className=\"publish\">\n            <PublishedStatus\n              dashboardId={dashboardInfo.id}\n              isPublished={isPublished}\n              savePublished={this.props.savePublished}\n              canEdit={userCanEdit}\n              canSave={userCanSaveAs}\n            />\n          </span>\n          {dashboardInfo.userId && (\n            <span className=\"favstar\">\n              <FaveStar\n                itemId={dashboardInfo.id}\n                fetchFaveStar={this.props.fetchFaveStar}\n                saveFaveStar={this.props.saveFaveStar}\n                isStarred={this.props.isStarred}\n              />\n            </span>\n          )}\n        </div>\n\n        <div className=\"button-container\">\n          {userCanSaveAs && (\n            <div className=\"button-container\">\n              {editMode && (\n                <Button\n                  bsSize=\"small\"\n                  onClick={onUndo}\n                  disabled={undoLength < 1}\n                  bsStyle={this.state.emphasizeUndo ? 'primary' : undefined}\n                >\n                  <div title=\"Undo\" className=\"undo-action fa fa-reply\" />\n                </Button>\n              )}\n\n              {editMode && (\n                <Button\n                  bsSize=\"small\"\n                  onClick={onRedo}\n                  disabled={redoLength < 1}\n                  bsStyle={this.state.emphasizeRedo ? 'primary' : undefined}\n                >\n                  <div title=\"Redo\" className=\"redo-action fa fa-share\" />\n                </Button>\n              )}\n\n              {editMode && (\n                <Button\n                  active={builderPaneType === BUILDER_PANE_TYPE.ADD_COMPONENTS}\n                  bsSize=\"small\"\n                  onClick={this.onInsertComponentsButtonClick}\n                >\n                  {t('Components')}\n                </Button>\n              )}\n\n              {editMode && (\n                <Button\n                  active={builderPaneType === BUILDER_PANE_TYPE.COLORS}\n                  bsSize=\"small\"\n                  onClick={this.onColorsButtonClick}\n                >\n                  {t('Colors')}\n                </Button>\n              )}\n\n              {editMode && (\n                <FilterScopeModal\n                  triggerNode={<Button bsSize=\"small\">{t('Filters')}</Button>}\n                />\n              )}\n\n              {editMode && hasUnsavedChanges && (\n                <Button\n                  bsSize=\"small\"\n                  bsStyle={popButton ? 'primary' : undefined}\n                  onClick={this.overwriteDashboard}\n                >\n                  {t('Save changes')}\n                </Button>\n              )}\n\n              {editMode && !hasUnsavedChanges && (\n                <Button\n                  bsSize=\"small\"\n                  onClick={this.toggleEditMode}\n                  bsStyle={undefined}\n                  disabled={!userCanEdit}\n                >\n                  {t('Switch to view mode')}\n                </Button>\n              )}\n\n              {editMode && (\n                <UndoRedoKeylisteners\n                  onUndo={this.handleCtrlZ}\n                  onRedo={this.handleCtrlY}\n                />\n              )}\n            </div>\n          )}\n\n          {!editMode && !hasUnsavedChanges && (\n            <Button\n              bsSize=\"small\"\n              onClick={this.toggleEditMode}\n              bsStyle={popButton ? 'primary' : undefined}\n              disabled={!userCanEdit}\n            >\n              {t('Edit dashboard')}\n            </Button>\n          )}\n\n          {this.state.showingPropertiesModal && (\n            <PropertiesModal\n              dashboardId={dashboardInfo.id}\n              show={this.state.showingPropertiesModal}\n              onHide={this.hidePropertiesModal}\n              onDashboardSave={updates => {\n                this.props.dashboardInfoChanged({\n                  slug: updates.slug,\n                  metadata: JSON.parse(updates.jsonMetadata),\n                });\n                this.props.dashboardTitleChanged(updates.title);\n                if (updates.slug) {\n                  history.pushState(\n                    { event: 'dashboard_properties_changed' },\n                    '',\n                    `/superset/dashboard/${updates.slug}/`,\n                  );\n                }\n              }}\n            />\n          )}\n\n          <HeaderActionsDropdown\n            addSuccessToast={this.props.addSuccessToast}\n            addDangerToast={this.props.addDangerToast}\n            dashboardId={dashboardInfo.id}\n            dashboardTitle={dashboardTitle}\n            dashboardInfo={dashboardInfo}\n            layout={layout}\n            expandedSlices={expandedSlices}\n            customCss={customCss}\n            colorNamespace={colorNamespace}\n            colorScheme={colorScheme}\n            onSave={onSave}\n            onChange={onChange}\n            forceRefreshAllCharts={this.forceRefresh}\n            startPeriodicRender={this.startPeriodicRender}\n            refreshFrequency={refreshFrequency}\n            shouldPersistRefreshFrequency={shouldPersistRefreshFrequency}\n            setRefreshFrequency={setRefreshFrequency}\n            updateCss={updateCss}\n            editMode={editMode}\n            hasUnsavedChanges={hasUnsavedChanges}\n            userCanEdit={userCanEdit}\n            userCanSave={userCanSaveAs}\n            isLoading={isLoading}\n            showPropertiesModal={this.showPropertiesModal}\n            refreshLimit={refreshLimit}\n            refreshWarning={refreshWarning}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _startsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/starts-with\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { t } from '@superset-ui/translation';\nimport Button from '../components/Button';\nimport Fieldset from './Fieldset';\nimport { recurseReactClone } from './utils';\nimport './crud.less';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  collection: PropTypes.arrayOf(PropTypes.object).isRequired,\n  itemGenerator: PropTypes.func,\n  columnLabels: PropTypes.object,\n  tableColumns: PropTypes.array.isRequired,\n  onChange: PropTypes.func,\n  itemRenderers: PropTypes.object,\n  allowDeletes: PropTypes.bool,\n  expandFieldset: PropTypes.node,\n  emptyMessage: PropTypes.node,\n  extraButtons: PropTypes.node,\n  allowAddItem: PropTypes.bool };\n\nconst defaultProps = {\n  onChange: () => {},\n  itemRenderers: {},\n  columnLabels: {},\n  allowDeletes: false,\n  emptyMessage: 'No entries',\n  allowAddItem: false,\n  itemGenerator: () => ({}),\n  expandFieldset: null,\n  extraButtons: null };\n\nconst Frame = props => ___EmotionJSX(\"div\", { className: \"frame\" }, props.children);\nFrame.propTypes = { children: PropTypes.node };\n\nfunction createKeyedCollection(arr) {\n  const newArr = _mapInstanceProperty(arr).call(arr, o => _Object$assign({},\n  o, {\n    id: o.id || shortid.generate() }));\n\n  const map = {};\n  _forEachInstanceProperty(newArr).call(newArr, o => {\n    map[o.id] = o;\n  });\n  return map;\n}\n\nexport default class CRUDCollection extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n    super(props);\n    this.state = {\n      expandedColumns: {},\n      collection: createKeyedCollection(props.collection) };\n\n    this.renderItem = _bindInstanceProperty(_context = this.renderItem).call(_context, this);\n    this.onAddItem = _bindInstanceProperty(_context2 = this.onAddItem).call(_context2, this);\n    this.renderExpandableSection = _bindInstanceProperty(_context3 = this.renderExpandableSection).call(_context3, this);\n    this.getLabel = _bindInstanceProperty(_context4 = this.getLabel).call(_context4, this);\n    this.onFieldsetChange = _bindInstanceProperty(_context5 = this.onFieldsetChange).call(_context5, this);\n    this.renderTableBody = _bindInstanceProperty(_context6 = this.renderTableBody).call(_context6, this);\n    this.changeCollection = _bindInstanceProperty(_context7 = this.changeCollection).call(_context7, this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      this.setState({\n        collection: createKeyedCollection(nextProps.collection) });\n\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection(_Object$assign({},\n    this.state.collection, {\n      [id]: _Object$assign({},\n      this.state.collection[id], {\n        [col]: val }) }));\n\n\n  }\n  onAddItem() {\n    let newItem = this.props.itemGenerator();\n    if (!newItem.id) {\n      newItem = _Object$assign({}, newItem, { id: shortid.generate() });\n    }\n    this.changeCollection(_Object$assign({},\n    this.state.collection, {\n      [newItem.id]: newItem }));\n\n  }\n  onFieldsetChange(item) {\n    this.changeCollection(_Object$assign({},\n    this.state.collection, {\n      [item.id]: item }));\n\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels[col] ? columnLabels[col] : col;\n    if (_startsWithInstanceProperty(label).call(label, '__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  changeCollection(collection) {var _context8;\n    this.setState({ collection });\n    this.props.onChange(_mapInstanceProperty(_context8 = _Object$keys(collection)).call(_context8, k => collection[k]));\n  }\n  deleteItem(id) {\n    const newColl = _Object$assign({}, this.state.collection);\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {var _context9;\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    _concatInstanceProperty(tableColumns).call(tableColumns, ['__actions']) :\n    tableColumns;\n    return expandFieldset ? _concatInstanceProperty(_context9 = ['__expand']).call(_context9, cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState({\n      expandedColumns: _Object$assign({},\n      this.state.expandedColumns, {\n        [id]: !this.state.expandedColumns[id] }) });\n\n\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    return (\n      ___EmotionJSX(\"thead\", null,\n      ___EmotionJSX(\"tr\", null,\n      this.props.expandFieldset && ___EmotionJSX(\"th\", { className: \"tiny-cell\" }),\n      _mapInstanceProperty(cols).call(cols, (col) =>\n      ___EmotionJSX(\"th\", { key: col }, this.getLabel(col))),\n\n      this.props.allowDeletes && ___EmotionJSX(\"th\", { className: \"tiny-cell\" }))));\n\n\n\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return recurseReactClone(\n    this.props.expandFieldset,\n    Fieldset,\n    propsGenerator);\n\n  }\n  renderCell(record, col) {var _context10;\n    const renderer = this.props.itemRenderers[col];\n    const val = record[col];\n    const onChange = _bindInstanceProperty(_context10 = this.onCellChange).call(_context10, this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col)) : val;\n  }\n  renderItem(record) {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded =\n    !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {var _context11;\n      tds.push(\n      ___EmotionJSX(\"td\", { key: \"__expand\", className: \"expand\" },\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-caret-\" + (\n        isExpanded ? 'down' : 'right') + \" text-primary pointer\",\n\n        onClick: _bindInstanceProperty(_context11 = this.toggleExpand).call(_context11, this, record.id) })));\n\n\n\n    }\n    tds = _concatInstanceProperty(tds).call(tds,\n    _mapInstanceProperty(tableColumns).call(tableColumns, (col) =>\n    ___EmotionJSX(\"td\", { key: col }, this.renderCell(record, col))));\n\n\n    if (allowDeletes) {var _context12;\n      tds.push(\n      ___EmotionJSX(\"td\", { key: \"__actions\" },\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-close text-primary pointer\",\n        onClick: _bindInstanceProperty(_context12 = this.deleteItem).call(_context12, this, record.id) })));\n\n\n\n    }\n    const trs = [\n    ___EmotionJSX(\"tr\", { className: \"row\", key: record.id },\n    tds)];\n\n\n    if (isExpanded) {\n      trs.push(\n      ___EmotionJSX(\"tr\", { className: \"exp\", key: 'exp__' + record.id },\n      ___EmotionJSX(\"td\", {\n        colSpan: this.effectiveTableColumns().length,\n        className: \"expanded\" },\n\n      ___EmotionJSX(\"div\", null, this.renderExpandableSection(record)))));\n\n\n\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return (\n      ___EmotionJSX(\"tr\", null,\n      ___EmotionJSX(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage)));\n\n\n  }\n  renderTableBody() {var _context13;\n    const data = _mapInstanceProperty(_context13 = _Object$keys(this.state.collection)).call(_context13,\n    k => this.state.collection[k]);\n\n    const content = data.length ?\n    _mapInstanceProperty(data).call(data, d => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return ___EmotionJSX(\"tbody\", null, content);\n  }\n  render() {\n    return (\n      ___EmotionJSX(\"div\", { className: \"CRUD\" },\n      ___EmotionJSX(\"table\", { className: \"table\" },\n      this.renderHeaderRow(),\n      this.renderTableBody()),\n\n      ___EmotionJSX(\"div\", null,\n      this.props.allowAddItem &&\n      ___EmotionJSX(Button, { bsStyle: \"primary\", onClick: this.onAddItem },\n      ___EmotionJSX(\"i\", { className: \"fa fa-plus\" }), \" \", t('Add Item')),\n\n\n      this.props.extraButtons)));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}CRUDCollection.defaultProps = defaultProps;\nCRUDCollection.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/CRUD/CollectionTable.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/CRUD/CollectionTable.jsx\");reactHotLoader.register(Frame, \"Frame\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/CRUD/CollectionTable.jsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/CRUD/CollectionTable.jsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/CRUD/CollectionTable.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _valuesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/values\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\n\nimport ControlHeader from '../ControlHeader';\nimport adhocFilterType from '../../propTypes/adhocFilterType';\nimport adhocMetricType from '../../propTypes/adhocMetricType';\nimport savedMetricType from '../../propTypes/savedMetricType';\nimport columnType from '../../propTypes/columnType';\nimport AdhocFilter, { CLAUSES, EXPRESSION_TYPES } from '../../AdhocFilter';\nimport AdhocMetric from '../../AdhocMetric';\nimport { OPERATORS } from '../../constants';\nimport AdhocFilterOption from '../AdhocFilterOption';\nimport FilterDefinitionOption from '../FilterDefinitionOption';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.arrayOf(adhocFilterType),\n  datasource: PropTypes.object,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  formData: PropTypes.shape({\n    metric: PropTypes.oneOfType([PropTypes.string, adhocMetricType]),\n    metrics: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, adhocMetricType])) }) };\n\n\n\n\nconst defaultProps = {\n  name: '',\n  onChange: () => {},\n  columns: [],\n  savedMetrics: [],\n  formData: {} };\n\n\nfunction isDictionaryForAdhocFilter(value) {\n  return value && !(value instanceof AdhocFilter) && value.expressionType;\n}\n\nexport default class AdhocFilterControl extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    this.optionsForSelect = _bindInstanceProperty(_context = this.optionsForSelect).call(_context, this);\n    this.onFilterEdit = _bindInstanceProperty(_context2 = this.onFilterEdit).call(_context2, this);\n    this.onChange = _bindInstanceProperty(_context3 = this.onChange).call(_context3, this);\n    this.getMetricExpression = _bindInstanceProperty(_context4 = this.getMetricExpression).call(_context4, this);\n\n    const filters = _mapInstanceProperty(_context5 = this.props.value || []).call(_context5, (filter) =>\n    isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter);\n\n\n    this.optionRenderer = option => ___EmotionJSX(FilterDefinitionOption, { option: option });\n    this.valueRenderer = (adhocFilter) =>\n    ___EmotionJSX(AdhocFilterOption, {\n      adhocFilter: adhocFilter,\n      onFilterEdit: this.onFilterEdit,\n      options: this.state.options,\n      datasource: this.props.datasource });\n\n\n    this.state = {\n      values: filters,\n      options: this.optionsForSelect(this.props) };\n\n  }\n\n  componentDidMount() {\n    const { datasource } = this.props;\n    if (datasource && datasource.type === 'table') {var _datasource$database;\n      const dbId = (_datasource$database = datasource.database) === null || _datasource$database === void 0 ? void 0 : _datasource$database.id;\n      const {\n        datasource_name: name,\n        schema,\n        is_sqllab_view: isSqllabView } =\n      datasource;\n\n      if (!isSqllabView && dbId && name && schema) {\n        SupersetClient.get({\n          endpoint: \"/superset/extra_table_metadata/\" + dbId + \"/\" + name + \"/\" + schema + \"/\" }).\n\n        then(({ json }) => {\n          if (json && json.partitions) {\n            const partitions = json.partitions;\n            // for now only show latest_partition option\n            // when table datasource has only 1 partition key.\n            if (\n            partitions &&\n            partitions.cols &&\n            _Object$keys(partitions.cols).length === 1)\n            {\n              const partitionColumn = partitions.cols[0];\n              this.valueRenderer = (adhocFilter) =>\n              ___EmotionJSX(AdhocFilterOption, {\n                adhocFilter: adhocFilter,\n                onFilterEdit: this.onFilterEdit,\n                options: this.state.options,\n                datasource: this.props.datasource,\n                partitionColumn: partitionColumn });\n\n\n            }\n          }\n        }).\n        catch(error => {\n          /* eslint-disable no-debugger, no-console */\n          console.error('fetch extra_table_metadata:', error.statusText);\n        });\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    this.props.columns !== nextProps.columns ||\n    this.props.formData !== nextProps.formData)\n    {\n      this.setState({ options: this.optionsForSelect(nextProps) });\n    }\n    if (this.props.value !== nextProps.value) {var _context6;\n      this.setState({\n        values: _mapInstanceProperty(_context6 = nextProps.value || []).call(_context6, (filter) =>\n        isDictionaryForAdhocFilter(filter) ? new AdhocFilter(filter) : filter) });\n\n\n    }\n  }\n\n  onFilterEdit(changedFilter) {var _context7;\n    this.props.onChange(\n    _mapInstanceProperty(_context7 = _valuesInstanceProperty(this.state)).call(_context7, value => {\n      if (value.filterOptionName === changedFilter.filterOptionName) {\n        return changedFilter;\n      }\n      return value;\n    }));\n\n  }\n\n  onChange(opts) {var _context8, _context9;\n    const options = _filterInstanceProperty(_context8 = _mapInstanceProperty(_context9 = opts || []).call(_context9,\n    option => {\n      // already a AdhocFilter, skip\n      if (option instanceof AdhocFilter) {\n        return option;\n      }\n      // via datasource saved metric\n      if (option.saved_metric_name) {\n        return new AdhocFilter({\n          expressionType:\n          this.props.datasource.type === 'druid' ?\n          EXPRESSION_TYPES.SIMPLE :\n          EXPRESSION_TYPES.SQL,\n          subject:\n          this.props.datasource.type === 'druid' ?\n          option.saved_metric_name :\n          this.getMetricExpression(option.saved_metric_name),\n          operator: OPERATORS['>'],\n          comparator: 0,\n          clause: CLAUSES.HAVING });\n\n      }\n      // has a custom label\n      if (option.label) {\n        return new AdhocFilter({\n          expressionType:\n          this.props.datasource.type === 'druid' ?\n          EXPRESSION_TYPES.SIMPLE :\n          EXPRESSION_TYPES.SQL,\n          subject:\n          this.props.datasource.type === 'druid' ?\n          option.label :\n          new AdhocMetric(option).translateToSql(),\n          operator: OPERATORS['>'],\n          comparator: 0,\n          clause: CLAUSES.HAVING });\n\n      }\n      // add a new filter item\n      if (option.column_name) {\n        return new AdhocFilter({\n          expressionType: EXPRESSION_TYPES.SIMPLE,\n          subject: option.column_name,\n          operator: OPERATORS['=='],\n          comparator: '',\n          clause: CLAUSES.WHERE,\n          isNew: true });\n\n      }\n      return null;\n    })).call(_context8,\n    option => option);\n    this.props.onChange(options);\n  }\n\n  getMetricExpression(savedMetricName) {var _context10;\n    return _findInstanceProperty(_context10 = this.props.savedMetrics).call(_context10,\n    savedMetric => savedMetric.metric_name === savedMetricName).\n    expression;\n  }\n\n  optionsForSelect(props) {var _context11, _context12, _context13;\n    const options = _filterInstanceProperty(_context11 = [\n    ...props.columns,\n    ..._mapInstanceProperty(_context12 = [...(props.formData.metrics || []), props.formData.metric]).call(_context12,\n    (metric) =>\n    metric && (\n    typeof metric === 'string' ?\n    { saved_metric_name: metric } :\n    new AdhocMetric(metric)))]).call(_context11,\n\n    option => option);\n\n    return _sortInstanceProperty(_context13 = _reduceInstanceProperty(options).call(options,\n    (results, option) => {\n      if (option.saved_metric_name) {\n        results.push(_Object$assign({},\n        option, {\n          filterOptionName: option.saved_metric_name }));\n\n      } else if (option.column_name) {\n        results.push(_Object$assign({},\n        option, {\n          filterOptionName: '_col_' + option.column_name }));\n\n      } else if (option instanceof AdhocMetric) {\n        results.push(_Object$assign({},\n        option, {\n          filterOptionName: '_adhocmetric_' + option.label }));\n\n      }\n      return results;\n    }, [])).call(_context13,\n    (a, b) =>\n    (a.saved_metric_name || a.column_name || a.label).localeCompare(\n    b.saved_metric_name || b.column_name || b.label));\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(\"div\", { className: \"metrics-select\" },\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(OnPasteSelect, {\n        isMulti: true,\n        name: \"select-\" + this.props.name,\n        placeholder: t('choose a column or metric'),\n        options: this.state.options,\n        value: _valuesInstanceProperty(this.state),\n        labelKey: \"label\",\n        valueKey: \"filterOptionName\",\n        clearable: true,\n        closeOnSelect: true,\n        onChange: this.onChange,\n        optionRenderer: this.optionRenderer,\n        valueRenderer: this.valueRenderer })));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAdhocFilterControl.propTypes = propTypes;\nAdhocFilterControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AdhocFilterControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AdhocFilterControl.jsx\");reactHotLoader.register(isDictionaryForAdhocFilter, \"isDictionaryForAdhocFilter\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AdhocFilterControl.jsx\");reactHotLoader.register(AdhocFilterControl, \"AdhocFilterControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AdhocFilterControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
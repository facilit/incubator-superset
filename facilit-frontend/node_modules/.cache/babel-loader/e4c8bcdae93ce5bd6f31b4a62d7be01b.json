{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import \"core-js/modules/es.promise\";import \"core-js/modules/es.promise.finally\";import \"core-js/modules/web.dom-collections.iterator\";import _keysInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/keys\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *\nnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport { getChartMetadataRegistry } from '@superset-ui/chart';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst PAGE_SIZE = 25;\nclass ChartList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      chartCount: 0,\n      charts: [],\n      filterOperators: {},\n      filters: [],\n      lastFetchDataConfig: null,\n      loading: false,\n      permissions: [],\n      sliceCurrentlyEditing: null };\n\n    this.initialSort = [{ id: 'changed_on', desc: true }];\n    this.columns = [\n    {\n      Cell: ({ row: { original: { url, slice_name: sliceName } } }) => ___EmotionJSX(\"a\", { href: url }, sliceName),\n      Header: t('Chart'),\n      accessor: 'slice_name',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { viz_type: vizType } } }) => vizType,\n      Header: t('Visualization Type'),\n      accessor: 'viz_type',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { datasource_name_text: dsNameTxt, datasource_url: dsUrl } } }) => ___EmotionJSX(\"a\", { href: dsUrl }, dsNameTxt),\n      Header: t('Datasource'),\n      accessor: 'datasource_name',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_by_name: changedByName, changed_by_url: changedByUrl } } }) => ___EmotionJSX(\"a\", { href: changedByUrl }, changedByName),\n      Header: t('Creator'),\n      accessor: 'changed_by_fk',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_on: changedOn } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\" }, moment(changedOn).fromNow()),\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true },\n\n    {\n      accessor: 'description',\n      hidden: true },\n\n    {\n      accessor: 'owners',\n      hidden: true },\n\n    {\n      accessor: 'datasource',\n      hidden: true },\n\n    {\n      Cell: ({ row: { state, original } }) => {\n        const handleDelete = () => this.handleChartDelete(original);\n        const openEditModal = () => this.openChartEditModal(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n        return ___EmotionJSX(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible') },\n        this.canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please Confirm'), description: ___EmotionJSX(React.Fragment, null,\n          t('Are you sure you want to delete'), ' ',\n          ___EmotionJSX(\"b\", null, original.slice_name), \"?\"),\n          onConfirm: handleDelete },\n        confirmDelete => ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n        ___EmotionJSX(\"i\", { className: \"fa fa-trash\" }))),\n\n\n        this.canEdit && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: openEditModal },\n        ___EmotionJSX(\"i\", { className: \"fa fa-pencil\" })));\n\n\n      },\n      Header: 'Actions',\n      id: 'actions' }];\n\n\n    this.hasPerm = perm => {var _context;\n      if (!this.state.permissions.length) {\n        return false;\n      }\n      return _someInstanceProperty(_context = this.state.permissions).call(_context, p => p === perm);\n    };\n    this.openChartEditModal = chart => {\n      this.setState({\n        sliceCurrentlyEditing: {\n          slice_id: chart.id,\n          slice_name: chart.slice_name,\n          description: chart.description,\n          cache_timeout: chart.cache_timeout } });\n\n\n    };\n    this.closeChartEditModal = () => {\n      this.setState({ sliceCurrentlyEditing: null });\n    };\n    this.handleChartUpdated = edits => {var _context2;\n      // update the chart in our state with the edited info\n      const newCharts = _mapInstanceProperty(_context2 = this.state.charts).call(_context2, chart => chart.id === edits.id ? _Object$assign({}, chart, {}, edits) : chart);\n      this.setState({\n        charts: newCharts });\n\n    };\n    this.handleChartDelete = ({ id, slice_name: sliceName }) => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/chart/\" + id }).\n      then(() => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted: %s', sliceName));\n      }, () => {\n        this.props.addDangerToast(t('There was an issue deleting: %s', sliceName));\n      });\n    };\n    this.handleBulkChartDelete = charts => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/chart/?q=\" + rison.encode(_mapInstanceProperty(charts).call(charts, ({ id }) => id)) }).\n      then(({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      }, err => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected charts: %s', err.statusText));\n      });\n    };\n    this.fetchData = ({ pageIndex, pageSize, sortBy, filters }) => {var _context3;\n      // set loading state, cache the last config for fetching data in this component.\n      this.setState({\n        lastFetchDataConfig: {\n          filters,\n          pageIndex,\n          pageSize,\n          sortBy },\n\n        loading: true });\n\n      const filterExps = _reduceInstanceProperty(_context3 = _mapInstanceProperty(filters).call(filters,\n      ({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value }))).call(_context3,\n\n      (acc, fltr) => {\n        if (fltr.col === 'datasource' &&\n        fltr.value &&\n        typeof fltr.value === 'string') {\n          const { datasource_id: dsId, datasource_type: dsType } = JSON.parse(fltr.value);\n          return [\n          ...acc, _Object$assign({},\n          fltr, { col: 'datasource_id', value: dsId }), _Object$assign({},\n          fltr, { col: 'datasource_type', value: dsType })];\n\n        }\n        return [...acc, fltr];\n      }, []);\n      const queryParams = rison.encode(_Object$assign({\n        order_column: sortBy[0].id,\n        order_direction: sortBy[0].desc ? 'desc' : 'asc',\n        page: pageIndex,\n        page_size: pageSize },\n      filterExps.length ? { filters: filterExps } : {}));\n\n      return SupersetClient.get({\n        endpoint: \"/api/v1/chart/?q=\" + queryParams }).\n\n      then(({ json = {} }) => {\n        this.setState({ charts: json.result, chartCount: json.count });\n      }).\n      catch(e => {\n        console.log(e.body);\n        this.props.addDangerToast(t('An error occurred while fetching charts: %s', e.statusText));\n      }).\n      finally(() => {\n        this.setState({ loading: false });\n      });\n    };\n    this.fetchOwners = async (filterValue = '', pageIndex, pageSize) => {\n      const resource = '/api/v1/chart/related/owners';\n      try {var _json$result;\n        const queryParams = rison.encode(_Object$assign({},\n        pageIndex ? { page: pageIndex } : {}, {},\n        pageSize ? { page_ize: pageSize } : {}, {},\n        filterValue ? { filter: filterValue } : {}));\n\n        const { json = {} } = await SupersetClient.get({\n          endpoint: resource + \"?q=\" + queryParams });\n\n        return json === null || json === void 0 ? void 0 : (_json$result = json.result) === null || _json$result === void 0 ? void 0 : _mapInstanceProperty(_json$result).call(_json$result, ({ text: label, value }) => ({\n          label,\n          value }));\n\n      }\n      catch (e) {\n        console.error(e);\n        this.props.addDangerToast(t('An error occurred while fetching chart owner values: %s', e.statusText));\n      }\n      return [];\n    };\n    this.fetchDatasets = async () => {\n      const resource = '/api/v1/chart/datasources';\n      try {var _json$result2;\n        const { json = {} } = await SupersetClient.get({\n          endpoint: \"\" + resource });\n\n        return json === null || json === void 0 ? void 0 : (_json$result2 = json.result) === null || _json$result2 === void 0 ? void 0 : _mapInstanceProperty(_json$result2).call(_json$result2, ds => _Object$assign({},\n        ds, {\n          value: _JSON$stringify(ds.value) }));\n\n      }\n      catch (e) {\n        this.props.addDangerToast(t('An error occurred while fetching chart dataset values: %s', e.statusText));\n      }\n      return [];\n    };\n    this.updateFilters = async () => {var _context6, _context7, _context8, _context9, _context10;\n      const { filterOperators } = this.state;\n      if (this.isNewUIEnabled) {var _context4, _context5;\n        this.setState({\n          filters: [\n          {\n            Header: 'Owner',\n            id: 'owners',\n            input: 'select',\n            operator: 'rel_m_m',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchOwners,\n            paginate: true },\n\n          {\n            Header: 'Viz Type',\n            id: 'viz_type',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            selects: _mapInstanceProperty(_context4 = _keysInstanceProperty(_context5 = getChartMetadataRegistry()).call(_context5)).call(_context4,\n\n            k => ({ label: k, value: k })) },\n\n          {\n            Header: 'Dataset',\n            id: 'datasource',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchDatasets,\n            paginate: false },\n\n          {\n            Header: 'Search',\n            id: 'slice_name',\n            input: 'search',\n            operator: 'name_or_description' }] });\n\n\n\n        return;\n      }\n      const convertFilter = ({ name: label, operator }) => ({ label, value: operator });\n      const owners = await this.fetchOwners();\n      this.setState({\n        filters: [\n        {\n          Header: 'Chart',\n          id: 'slice_name',\n          operators: _mapInstanceProperty(_context6 = filterOperators.slice_name).call(_context6, convertFilter) },\n\n        {\n          Header: 'Description',\n          id: 'description',\n          operators: _mapInstanceProperty(_context7 = filterOperators.slice_name).call(_context7, convertFilter) },\n\n        {\n          Header: 'Visualization Type',\n          id: 'viz_type',\n          operators: _mapInstanceProperty(_context8 = filterOperators.viz_type).call(_context8, convertFilter) },\n\n        {\n          Header: 'Datasource Name',\n          id: 'datasource_name',\n          operators: _mapInstanceProperty(_context9 = filterOperators.datasource_name).call(_context9, convertFilter) },\n\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: _mapInstanceProperty(_context10 = filterOperators.owners).call(_context10, convertFilter),\n          selects: owners }] });\n\n\n\n    };\n  }\n  componentDidMount() {\n    SupersetClient.get({\n      endpoint: \"/api/v1/chart/_info\" }).\n    then(({ json: infoJson = {} }) => {\n      this.setState({\n        filterOperators: infoJson.filters,\n        permissions: infoJson.permissions },\n      this.updateFilters);\n    }, e => {\n      this.props.addDangerToast(t('An error occurred while fetching charts: %s', e.statusText));\n      console.error(e);\n    });\n  }\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n  get isNewUIEnabled() {\n    return isFeatureEnabled(FeatureFlag.LIST_VIEWS_NEW_UI);\n  }\n  render() {\n    const { charts, chartCount, loading, filters, sliceCurrentlyEditing } = this.state;\n    return ___EmotionJSX(\"div\", { className: \"container welcome\" },\n    ___EmotionJSX(Panel, null,\n    ___EmotionJSX(Panel.Body, null,\n    sliceCurrentlyEditing && ___EmotionJSX(PropertiesModal, { show: true, onHide: this.closeChartEditModal, onSave: this.handleChartUpdated, slice: sliceCurrentlyEditing }),\n    ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected charts?'), onConfirm: this.handleBulkChartDelete },\n    confirmDelete => {\n      const bulkActions = [];\n      if (this.canDelete) {\n        bulkActions.push({\n          key: 'delete',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-trash\" }), \" Delete\"),\n\n          onSelect: confirmDelete });\n\n      }\n      return ___EmotionJSX(ListView, { className: \"chart-list-view\", title: 'Charts', columns: this.columns, data: charts, count: chartCount, pageSize: PAGE_SIZE, fetchData: this.fetchData, loading: loading, initialSort: this.initialSort, filters: filters, bulkActions: bulkActions, useNewUIFilters: this.isNewUIEnabled });\n    }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ChartList.propTypes = {\n  addDangerToast: PropTypes.func.isRequired };const _default =\n\nwithToasts(ChartList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");reactHotLoader.register(ChartList, \"ChartList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport { getChartMetadataRegistry } from '@superset-ui/chart';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport {\n  FetchDataConfig,\n  FilterOperatorMap,\n  Filters,\n} from 'src/components/ListView/types';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport PropertiesModal, { Slice } from 'src/explore/components/PropertiesModal';\nimport Chart from 'src/types/Chart';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nconst PAGE_SIZE = 25;\n\ninterface Props {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\ninterface State {\n  charts: any[];\n  chartCount: number;\n  loading: boolean;\n  filterOperators: FilterOperatorMap;\n  filters: Filters;\n  lastFetchDataConfig: FetchDataConfig | null;\n  permissions: string[];\n  // for now we need to use the Slice type defined in PropertiesModal.\n  // In future it would be better to have a unified Chart entity.\n  sliceCurrentlyEditing: Slice | null;\n}\n\nclass ChartList extends React.PureComponent<Props, State> {\n  static propTypes = {\n    addDangerToast: PropTypes.func.isRequired,\n  };\n\n  state: State = {\n    chartCount: 0,\n    charts: [],\n    filterOperators: {},\n    filters: [],\n    lastFetchDataConfig: null,\n    loading: false,\n    permissions: [],\n    sliceCurrentlyEditing: null,\n  };\n\n  componentDidMount() {\n    SupersetClient.get({\n      endpoint: `/api/v1/chart/_info`,\n    }).then(\n      ({ json: infoJson = {} }) => {\n        this.setState(\n          {\n            filterOperators: infoJson.filters,\n            permissions: infoJson.permissions,\n          },\n          this.updateFilters,\n        );\n      },\n      e => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching charts: %s', e.statusText),\n        );\n        console.error(e);\n      },\n    );\n  }\n\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n\n  get isNewUIEnabled() {\n    return isFeatureEnabled(FeatureFlag.LIST_VIEWS_NEW_UI);\n  }\n\n  initialSort = [{ id: 'changed_on', desc: true }];\n\n  columns = [\n    {\n      Cell: ({\n        row: {\n          original: { url, slice_name: sliceName },\n        },\n      }: any) => <a href={url}>{sliceName}</a>,\n      Header: t('Chart'),\n      accessor: 'slice_name',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { viz_type: vizType },\n        },\n      }: any) => vizType,\n      Header: t('Visualization Type'),\n      accessor: 'viz_type',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { datasource_name_text: dsNameTxt, datasource_url: dsUrl },\n        },\n      }: any) => <a href={dsUrl}>{dsNameTxt}</a>,\n      Header: t('Datasource'),\n      accessor: 'datasource_name',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: {\n            changed_by_name: changedByName,\n            changed_by_url: changedByUrl,\n          },\n        },\n      }: any) => <a href={changedByUrl}>{changedByName}</a>,\n      Header: t('Creator'),\n      accessor: 'changed_by_fk',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { changed_on: changedOn },\n        },\n      }: any) => <span className=\"no-wrap\">{moment(changedOn).fromNow()}</span>,\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true,\n    },\n    {\n      accessor: 'description',\n      hidden: true,\n    },\n    {\n      accessor: 'owners',\n      hidden: true,\n    },\n    {\n      accessor: 'datasource',\n      hidden: true,\n    },\n    {\n      Cell: ({ row: { state, original } }: any) => {\n        const handleDelete = () => this.handleChartDelete(original);\n        const openEditModal = () => this.openChartEditModal(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n\n        return (\n          <span\n            className={`actions ${state && state.hover ? '' : 'invisible'}`}\n          >\n            {this.canDelete && (\n              <ConfirmStatusChange\n                title={t('Please Confirm')}\n                description={\n                  <>\n                    {t('Are you sure you want to delete')}{' '}\n                    <b>{original.slice_name}</b>?\n                  </>\n                }\n                onConfirm={handleDelete}\n              >\n                {confirmDelete => (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={confirmDelete}\n                  >\n                    <i className=\"fa fa-trash\" />\n                  </span>\n                )}\n              </ConfirmStatusChange>\n            )}\n            {this.canEdit && (\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={openEditModal}\n              >\n                <i className=\"fa fa-pencil\" />\n              </span>\n            )}\n          </span>\n        );\n      },\n      Header: 'Actions',\n      id: 'actions',\n    },\n  ];\n\n  hasPerm = (perm: string) => {\n    if (!this.state.permissions.length) {\n      return false;\n    }\n\n    return this.state.permissions.some(p => p === perm);\n  };\n\n  openChartEditModal = (chart: Chart) => {\n    this.setState({\n      sliceCurrentlyEditing: {\n        slice_id: chart.id,\n        slice_name: chart.slice_name,\n        description: chart.description,\n        cache_timeout: chart.cache_timeout,\n      },\n    });\n  };\n\n  closeChartEditModal = () => {\n    this.setState({ sliceCurrentlyEditing: null });\n  };\n\n  handleChartUpdated = (edits: Chart) => {\n    // update the chart in our state with the edited info\n    const newCharts = this.state.charts.map(chart =>\n      chart.id === edits.id ? { ...chart, ...edits } : chart,\n    );\n    this.setState({\n      charts: newCharts,\n    });\n  };\n\n  handleChartDelete = ({ id, slice_name: sliceName }: Chart) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/${id}`,\n    }).then(\n      () => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted: %s', sliceName));\n      },\n      () => {\n        this.props.addDangerToast(\n          t('There was an issue deleting: %s', sliceName),\n        );\n      },\n    );\n  };\n\n  handleBulkChartDelete = (charts: Chart[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(charts.map(({ id }) => id))}`,\n    }).then(\n      ({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(\n          t(\n            'There was an issue deleting the selected charts: %s',\n            err.statusText,\n          ),\n        );\n      },\n    );\n  };\n\n  fetchData = ({ pageIndex, pageSize, sortBy, filters }: FetchDataConfig) => {\n    // set loading state, cache the last config for fetching data in this component.\n    this.setState({\n      lastFetchDataConfig: {\n        filters,\n        pageIndex,\n        pageSize,\n        sortBy,\n      },\n      loading: true,\n    });\n\n    const filterExps = filters\n      .map(({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value,\n      }))\n      .reduce((acc, fltr) => {\n        if (\n          fltr.col === 'datasource' &&\n          fltr.value &&\n          typeof fltr.value === 'string'\n        ) {\n          const { datasource_id: dsId, datasource_type: dsType } = JSON.parse(\n            fltr.value,\n          );\n          return [\n            ...acc,\n            { ...fltr, col: 'datasource_id', value: dsId },\n            { ...fltr, col: 'datasource_type', value: dsType },\n          ];\n        }\n        return [...acc, fltr];\n      }, []);\n\n    const queryParams = rison.encode({\n      order_column: sortBy[0].id,\n      order_direction: sortBy[0].desc ? 'desc' : 'asc',\n      page: pageIndex,\n      page_size: pageSize,\n      ...(filterExps.length ? { filters: filterExps } : {}),\n    });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/chart/?q=${queryParams}`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({ charts: json.result, chartCount: json.count });\n      })\n      .catch(e => {\n        console.log(e.body);\n        this.props.addDangerToast(\n          t('An error occurred while fetching charts: %s', e.statusText),\n        );\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  fetchOwners = async (\n    filterValue = '',\n    pageIndex?: number,\n    pageSize?: number,\n  ) => {\n    const resource = '/api/v1/chart/related/owners';\n\n    try {\n      const queryParams = rison.encode({\n        ...(pageIndex ? { page: pageIndex } : {}),\n        ...(pageSize ? { page_ize: pageSize } : {}),\n        ...(filterValue ? { filter: filterValue } : {}),\n      });\n      const { json = {} } = await SupersetClient.get({\n        endpoint: `${resource}?q=${queryParams}`,\n      });\n\n      return json?.result?.map(\n        ({ text: label, value }: { text: string; value: any }) => ({\n          label,\n          value,\n        }),\n      );\n    } catch (e) {\n      console.error(e);\n      this.props.addDangerToast(\n        t(\n          'An error occurred while fetching chart owner values: %s',\n          e.statusText,\n        ),\n      );\n    }\n    return [];\n  };\n\n  fetchDatasets = async () => {\n    const resource = '/api/v1/chart/datasources';\n    try {\n      const { json = {} } = await SupersetClient.get({\n        endpoint: `${resource}`,\n      });\n\n      return json?.result?.map((ds: { label: string; value: any }) => ({\n        ...ds,\n        value: JSON.stringify(ds.value),\n      }));\n    } catch (e) {\n      this.props.addDangerToast(\n        t(\n          'An error occurred while fetching chart dataset values: %s',\n          e.statusText,\n        ),\n      );\n    }\n    return [];\n  };\n\n  updateFilters = async () => {\n    const { filterOperators } = this.state;\n\n    if (this.isNewUIEnabled) {\n      this.setState({\n        filters: [\n          {\n            Header: 'Owner',\n            id: 'owners',\n            input: 'select',\n            operator: 'rel_m_m',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchOwners,\n            paginate: true,\n          },\n          {\n            Header: 'Viz Type',\n            id: 'viz_type',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            selects: getChartMetadataRegistry()\n              .keys()\n              .map(k => ({ label: k, value: k })),\n          },\n          {\n            Header: 'Dataset',\n            id: 'datasource',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchDatasets,\n            paginate: false,\n          },\n          {\n            Header: 'Search',\n            id: 'slice_name',\n            input: 'search',\n            operator: 'name_or_description',\n          },\n        ],\n      });\n      return;\n    }\n\n    const convertFilter = ({\n      name: label,\n      operator,\n    }: {\n      name: string;\n      operator: string;\n    }) => ({ label, value: operator });\n\n    const owners = await this.fetchOwners();\n    this.setState({\n      filters: [\n        {\n          Header: 'Chart',\n          id: 'slice_name',\n          operators: filterOperators.slice_name.map(convertFilter),\n        },\n        {\n          Header: 'Description',\n          id: 'description',\n          operators: filterOperators.slice_name.map(convertFilter),\n        },\n        {\n          Header: 'Visualization Type',\n          id: 'viz_type',\n          operators: filterOperators.viz_type.map(convertFilter),\n        },\n        {\n          Header: 'Datasource Name',\n          id: 'datasource_name',\n          operators: filterOperators.datasource_name.map(convertFilter),\n        },\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: filterOperators.owners.map(convertFilter),\n          selects: owners,\n        },\n      ],\n    });\n  };\n\n  render() {\n    const {\n      charts,\n      chartCount,\n      loading,\n      filters,\n      sliceCurrentlyEditing,\n    } = this.state;\n    return (\n      <div className=\"container welcome\">\n        <Panel>\n          <Panel.Body>\n            {sliceCurrentlyEditing && (\n              <PropertiesModal\n                show\n                onHide={this.closeChartEditModal}\n                onSave={this.handleChartUpdated}\n                slice={sliceCurrentlyEditing}\n              />\n            )}\n            <ConfirmStatusChange\n              title={t('Please confirm')}\n              description={t(\n                'Are you sure you want to delete the selected charts?',\n              )}\n              onConfirm={this.handleBulkChartDelete}\n            >\n              {confirmDelete => {\n                const bulkActions = [];\n                if (this.canDelete) {\n                  bulkActions.push({\n                    key: 'delete',\n                    name: (\n                      <>\n                        <i className=\"fa fa-trash\" /> Delete\n                      </>\n                    ),\n                    onSelect: confirmDelete,\n                  });\n                }\n                return (\n                  <ListView\n                    className=\"chart-list-view\"\n                    title={'Charts'}\n                    columns={this.columns}\n                    data={charts}\n                    count={chartCount}\n                    pageSize={PAGE_SIZE}\n                    fetchData={this.fetchData}\n                    loading={loading}\n                    initialSort={this.initialSort}\n                    filters={filters}\n                    bulkActions={bulkActions}\n                    useNewUIFilters={this.isNewUIEnabled}\n                  />\n                );\n              }}\n            </ConfirmStatusChange>\n          </Panel.Body>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withToasts(ChartList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
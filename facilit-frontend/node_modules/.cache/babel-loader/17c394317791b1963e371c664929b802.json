{"ast":null,"code":"import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _parseFloat from \"@babel/runtime-corejs3/core-js-stable/parse-float\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport FormRow from '../../../components/FormRow';\nimport SelectControl from './SelectControl';\nimport CheckboxControl from './CheckboxControl';\nimport TextControl from './TextControl';\nimport { FILTER_CONFIG_ATTRIBUTES } from '../../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst INTEGRAL_TYPES = new _Set([\n'TINYINT',\n'SMALLINT',\n'INT',\n'INTEGER',\n'BIGINT',\n'LONG']);\n\nconst DECIMAL_TYPES = new _Set([\n'FLOAT',\n'DOUBLE',\n'REAL',\n'NUMERIC',\n'DECIMAL',\n'MONEY']);\n\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  asc: PropTypes.bool,\n  clearable: PropTypes.bool,\n  multiple: PropTypes.bool,\n  column: PropTypes.string,\n  metric: PropTypes.string,\n  defaultValue: PropTypes.string };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  asc: true,\n  clearable: true,\n  multiple: true };\n\n\nconst STYLE_WIDTH = { width: 350 };\n\nexport default class FilterBoxItemControl extends React.Component {\n  constructor(props) {var _context, _context2;\n    super(props);\n    const { column, metric, asc, clearable, multiple, defaultValue } = props;\n    const state = { column, metric, asc, clearable, multiple, defaultValue };\n    this.state = state;\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.onControlChange = _bindInstanceProperty(_context2 = this.onControlChange).call(_context2, this);\n  }\n  onChange() {\n    this.props.onChange(this.state);\n  }\n  onControlChange(attr, value) {\n    let typedValue = value;\n    const { column: selectedColumnName, multiple } = this.state;\n    if (value && !multiple && attr === FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE) {var _context3;\n      // if single value filter_box,\n      // convert input value string to the column's data type\n      const { datasource } = this.props;\n      const selectedColumn = _findInstanceProperty(_context3 = datasource.columns).call(_context3,\n      col => col.column_name === selectedColumnName);\n\n\n      if (selectedColumn && selectedColumn.type) {\n        const type = selectedColumn.type.toUpperCase();\n        if (type === 'BOOLEAN') {\n          typedValue = value === 'true';\n        } else if (INTEGRAL_TYPES.has(type)) {\n          typedValue = isNaN(value) ? null : _parseInt(value, 10);\n        } else if (DECIMAL_TYPES.has(type)) {\n          typedValue = isNaN(value) ? null : _parseFloat(value);\n        }\n      }\n    }\n    this.setState({ [attr]: typedValue }, this.onChange);\n  }\n  setType() {}\n  textSummary() {\n    return this.state.column || 'N/A';\n  }\n  renderForm() {var _context4, _context5, _context6, _context7, _context8, _context9;\n    return (\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: this },\n      ___EmotionJSX(FormRow, {\n        label: t('Column'),\n        control:\n        ___EmotionJSX(SelectControl, {\n          value: this.state.column,\n          name: \"column\",\n          clearable: false,\n          options: _concatInstanceProperty(_context4 = _mapInstanceProperty(_context5 = _filterInstanceProperty(_context6 = this.props.datasource.columns).call(_context6,\n          col => col !== this.state.column)).call(_context5,\n          col => ({\n            value: col.column_name,\n            label: col.column_name }))).call(_context4,\n\n          [\n          { value: this.state.column, label: this.state.column }]),\n\n          onChange: v => this.onControlChange('column', v), __source: { fileName: _jsxFileName, lineNumber: 114 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 111 }, __self: this }),\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Label'),\n        control:\n        ___EmotionJSX(TextControl, {\n          value: this.state.label,\n          name: \"label\",\n          onChange: v => this.onControlChange('label', v), __source: { fileName: _jsxFileName, lineNumber: 134 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 131 }, __self: this }),\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Default'),\n        tooltip: t(\n        '(optional) default value for the filter, when using ' +\n        'the multiple option, you can use a semicolon-delimited list ' +\n        'of options.'),\n\n        control:\n        ___EmotionJSX(TextControl, {\n          value: this.state.defaultValue,\n          name: \"defaultValue\",\n          onChange: (v) =>\n          this.onControlChange(FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE, v), __source: { fileName: _jsxFileName, lineNumber: 149 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 141 }, __self: this }),\n\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Sort Metric'),\n        tooltip: t('Metric to sort the results by'),\n        control:\n        ___EmotionJSX(SelectControl, {\n          value: this.state.metric,\n          name: \"column\",\n          options: _concatInstanceProperty(_context7 = _mapInstanceProperty(_context8 = _filterInstanceProperty(_context9 = this.props.datasource.metrics).call(_context9,\n          metric => metric !== this.state.metric)).call(_context8,\n          m => ({\n            value: m.metric_name,\n            label: m.metric_name }))).call(_context7,\n\n          [\n          { value: this.state.metric, label: this.state.metric }]),\n\n          onChange: v => this.onControlChange('metric', v), __source: { fileName: _jsxFileName, lineNumber: 162 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 158 }, __self: this }),\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Sort Ascending'),\n        tooltip: t('Check for sorting ascending'),\n        isCheckbox: true,\n        control:\n        ___EmotionJSX(CheckboxControl, {\n          value: this.state.asc,\n          onChange: v => this.onControlChange('asc', v), __source: { fileName: _jsxFileName, lineNumber: 183 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 178 }, __self: this }),\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Allow Multiple Selections'),\n        isCheckbox: true,\n        tooltip: t(\n        'Multiple selections allowed, otherwise filter ' +\n        'is limited to a single value'),\n\n        control:\n        ___EmotionJSX(CheckboxControl, {\n          value: this.state.multiple,\n          onChange: (v) =>\n          this.onControlChange(FILTER_CONFIG_ATTRIBUTES.MULTIPLE, v), __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 189 }, __self: this }),\n\n\n\n\n      ___EmotionJSX(FormRow, {\n        label: t('Required'),\n        tooltip: t('User must select a value for this filter'),\n        isCheckbox: true,\n        control:\n        ___EmotionJSX(CheckboxControl, {\n          value: !this.state.clearable,\n          onChange: v => this.onControlChange('clearable', !v), __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this }), __source: { fileName: _jsxFileName, lineNumber: 205 }, __self: this })));\n\n\n\n\n\n  }\n  renderPopover() {\n    return (\n      ___EmotionJSX(Popover, { id: \"ts-col-popo\", title: t('Filter Configuration'), __source: { fileName: _jsxFileName, lineNumber: 221 }, __self: this },\n      ___EmotionJSX(\"div\", { style: STYLE_WIDTH, __source: { fileName: _jsxFileName, lineNumber: 222 }, __self: this }, this.renderForm())));\n\n\n  }\n  render() {\n    return (\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 228 }, __self: this },\n      this.textSummary(), ' ',\n      ___EmotionJSX(OverlayTrigger, {\n        container: document.body,\n        trigger: \"click\",\n        rootClose: true,\n        ref: \"trigger\",\n        placement: \"right\",\n        overlay: this.renderPopover(), __source: { fileName: _jsxFileName, lineNumber: 230 }, __self: this },\n\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        icon: \"edit\",\n        className: \"text-primary\",\n        label: \"edit-ts-column\", __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterBoxItemControl.propTypes = propTypes;\nFilterBoxItemControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(INTEGRAL_TYPES, \"INTEGRAL_TYPES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");reactHotLoader.register(DECIMAL_TYPES, \"DECIMAL_TYPES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");reactHotLoader.register(STYLE_WIDTH, \"STYLE_WIDTH\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");reactHotLoader.register(FilterBoxItemControl, \"FilterBoxItemControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FilterBoxItemControl.jsx"],"names":["React","PropTypes","OverlayTrigger","Popover","t","InfoTooltipWithTrigger","FormRow","SelectControl","CheckboxControl","TextControl","FILTER_CONFIG_ATTRIBUTES","INTEGRAL_TYPES","DECIMAL_TYPES","propTypes","datasource","object","isRequired","onChange","func","asc","bool","clearable","multiple","column","string","metric","defaultValue","defaultProps","STYLE_WIDTH","width","FilterBoxItemControl","Component","constructor","props","state","onControlChange","attr","value","typedValue","selectedColumnName","DEFAULT_VALUE","selectedColumn","columns","col","column_name","type","toUpperCase","has","isNaN","setState","setType","textSummary","renderForm","label","v","metrics","m","metric_name","MULTIPLE","renderPopover","render","document","body"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport FormRow from '../../../components/FormRow';\nimport SelectControl from './SelectControl';\nimport CheckboxControl from './CheckboxControl';\nimport TextControl from './TextControl';\nimport { FILTER_CONFIG_ATTRIBUTES } from '../../constants';\n\nconst INTEGRAL_TYPES = new Set([\n  'TINYINT',\n  'SMALLINT',\n  'INT',\n  'INTEGER',\n  'BIGINT',\n  'LONG',\n]);\nconst DECIMAL_TYPES = new Set([\n  'FLOAT',\n  'DOUBLE',\n  'REAL',\n  'NUMERIC',\n  'DECIMAL',\n  'MONEY',\n]);\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  asc: PropTypes.bool,\n  clearable: PropTypes.bool,\n  multiple: PropTypes.bool,\n  column: PropTypes.string,\n  metric: PropTypes.string,\n  defaultValue: PropTypes.string,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  asc: true,\n  clearable: true,\n  multiple: true,\n};\n\nconst STYLE_WIDTH = { width: 350 };\n\nexport default class FilterBoxItemControl extends React.Component {\n  constructor(props) {\n    super(props);\n    const { column, metric, asc, clearable, multiple, defaultValue } = props;\n    const state = { column, metric, asc, clearable, multiple, defaultValue };\n    this.state = state;\n    this.onChange = this.onChange.bind(this);\n    this.onControlChange = this.onControlChange.bind(this);\n  }\n  onChange() {\n    this.props.onChange(this.state);\n  }\n  onControlChange(attr, value) {\n    let typedValue = value;\n    const { column: selectedColumnName, multiple } = this.state;\n    if (value && !multiple && attr === FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE) {\n      // if single value filter_box,\n      // convert input value string to the column's data type\n      const { datasource } = this.props;\n      const selectedColumn = datasource.columns.find(\n        col => col.column_name === selectedColumnName,\n      );\n\n      if (selectedColumn && selectedColumn.type) {\n        const type = selectedColumn.type.toUpperCase();\n        if (type === 'BOOLEAN') {\n          typedValue = value === 'true';\n        } else if (INTEGRAL_TYPES.has(type)) {\n          typedValue = isNaN(value) ? null : parseInt(value, 10);\n        } else if (DECIMAL_TYPES.has(type)) {\n          typedValue = isNaN(value) ? null : parseFloat(value);\n        }\n      }\n    }\n    this.setState({ [attr]: typedValue }, this.onChange);\n  }\n  setType() {}\n  textSummary() {\n    return this.state.column || 'N/A';\n  }\n  renderForm() {\n    return (\n      <div>\n        <FormRow\n          label={t('Column')}\n          control={\n            <SelectControl\n              value={this.state.column}\n              name=\"column\"\n              clearable={false}\n              options={this.props.datasource.columns\n                .filter(col => col !== this.state.column)\n                .map(col => ({\n                  value: col.column_name,\n                  label: col.column_name,\n                }))\n                .concat([\n                  { value: this.state.column, label: this.state.column },\n                ])}\n              onChange={v => this.onControlChange('column', v)}\n            />\n          }\n        />\n        <FormRow\n          label={t('Label')}\n          control={\n            <TextControl\n              value={this.state.label}\n              name=\"label\"\n              onChange={v => this.onControlChange('label', v)}\n            />\n          }\n        />\n        <FormRow\n          label={t('Default')}\n          tooltip={t(\n            '(optional) default value for the filter, when using ' +\n              'the multiple option, you can use a semicolon-delimited list ' +\n              'of options.',\n          )}\n          control={\n            <TextControl\n              value={this.state.defaultValue}\n              name=\"defaultValue\"\n              onChange={v =>\n                this.onControlChange(FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE, v)\n              }\n            />\n          }\n        />\n        <FormRow\n          label={t('Sort Metric')}\n          tooltip={t('Metric to sort the results by')}\n          control={\n            <SelectControl\n              value={this.state.metric}\n              name=\"column\"\n              options={this.props.datasource.metrics\n                .filter(metric => metric !== this.state.metric)\n                .map(m => ({\n                  value: m.metric_name,\n                  label: m.metric_name,\n                }))\n                .concat([\n                  { value: this.state.metric, label: this.state.metric },\n                ])}\n              onChange={v => this.onControlChange('metric', v)}\n            />\n          }\n        />\n        <FormRow\n          label={t('Sort Ascending')}\n          tooltip={t('Check for sorting ascending')}\n          isCheckbox\n          control={\n            <CheckboxControl\n              value={this.state.asc}\n              onChange={v => this.onControlChange('asc', v)}\n            />\n          }\n        />\n        <FormRow\n          label={t('Allow Multiple Selections')}\n          isCheckbox\n          tooltip={t(\n            'Multiple selections allowed, otherwise filter ' +\n              'is limited to a single value',\n          )}\n          control={\n            <CheckboxControl\n              value={this.state.multiple}\n              onChange={v =>\n                this.onControlChange(FILTER_CONFIG_ATTRIBUTES.MULTIPLE, v)\n              }\n            />\n          }\n        />\n        <FormRow\n          label={t('Required')}\n          tooltip={t('User must select a value for this filter')}\n          isCheckbox\n          control={\n            <CheckboxControl\n              value={!this.state.clearable}\n              onChange={v => this.onControlChange('clearable', !v)}\n            />\n          }\n        />\n      </div>\n    );\n  }\n  renderPopover() {\n    return (\n      <Popover id=\"ts-col-popo\" title={t('Filter Configuration')}>\n        <div style={STYLE_WIDTH}>{this.renderForm()}</div>\n      </Popover>\n    );\n  }\n  render() {\n    return (\n      <span>\n        {this.textSummary()}{' '}\n        <OverlayTrigger\n          container={document.body}\n          trigger=\"click\"\n          rootClose\n          ref=\"trigger\"\n          placement=\"right\"\n          overlay={this.renderPopover()}\n        >\n          <InfoTooltipWithTrigger\n            icon=\"edit\"\n            className=\"text-primary\"\n            label=\"edit-ts-column\"\n          />\n        </OverlayTrigger>\n      </span>\n    );\n  }\n}\n\nFilterBoxItemControl.propTypes = propTypes;\nFilterBoxItemControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
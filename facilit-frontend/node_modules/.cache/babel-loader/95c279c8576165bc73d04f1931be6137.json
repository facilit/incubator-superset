{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _valuesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/values\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/translation';\n\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\nimport DashboardBuilder from '../containers/DashboardBuilder';\nimport {\nchartPropShape,\nslicePropShape,\ndashboardInfoPropShape,\ndashboardStatePropShape } from\n'../util/propShapes';\nimport {\nLOG_ACTIONS_HIDE_BROWSER_TAB,\nLOG_ACTIONS_MOUNT_DASHBOARD,\nLogger } from\n'../../logger/LogUtils';\nimport OmniContainer from '../../components/OmniContainer';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport '../stylesheets/index.less';\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired }).\n  isRequired,\n  dashboardInfo: dashboardInfoPropShape.isRequired,\n  dashboardState: dashboardStatePropShape.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  datasources: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  initMessages: PropTypes.array,\n  timeout: PropTypes.number,\n  userId: PropTypes.string };\n\n\nconst defaultProps = {\n  initMessages: [],\n  timeout: 60,\n  userId: '' };\n\n\nclass Dashboard extends React.PureComponent {\n  // eslint-disable-next-line react/sort-comp\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {var _context;\n    super(props);\n    this.appliedFilters = props.activeFilters || {};\n\n    this.onVisibilityChange = _bindInstanceProperty(_context = this.onVisibilityChange).call(_context, this);\n  }\n\n  componentDidMount() {\n    const appContainer = document.getElementById('app');\n    const bootstrapData = (appContainer === null || appContainer === void 0 ? void 0 : appContainer.getAttribute('data-bootstrap')) || '';\n    const { dashboardState, layout } = this.props;\n    const eventData = {\n      is_edit_mode: dashboardState.editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: dashboardState.isPublished,\n      bootstrap_data_length: bootstrapData.length };\n\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime() };\n\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = _filterInstanceProperty(nextChartIds).call(nextChartIds,\n      key => _indexOfInstanceProperty(currentChartIds).call(currentChartIds, key) === -1);\n\n      _forEachInstanceProperty(newChartIds).call(newChartIds, (newChartId) =>\n      this.props.actions.addSliceToDashboard(\n      newChartId,\n      getLayoutComponentFromChartId(nextProps.layout, newChartId)));\n\n\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = _filterInstanceProperty(currentChartIds).call(currentChartIds,\n      key => _indexOfInstanceProperty(nextChartIds).call(nextChartIds, key) === -1);\n\n      _forEachInstanceProperty(removedChartIds).call(removedChartIds, (removedChartId) =>\n      this.props.actions.removeSliceFromDashboard(removedChartId));\n\n    }\n  }\n\n  componentDidUpdate() {\n    const { hasUnsavedChanges, editMode } = this.props.dashboardState;\n\n    const appliedFilters = this.appliedFilters;\n    const { activeFilters } = this.props;\n    // do not apply filter when dashboard in edit mode\n    if (!editMode && !areObjectsEqual(appliedFilters, activeFilters)) {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime() };\n\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, _Object$assign({},\n      this.visibilityEventData, {\n        duration: Logger.getTimestamp() - logStart }));\n\n    }\n  }\n\n  // return charts in array\n  getAllCharts() {\n    return _Object$values(this.props.charts);\n  }\n\n  applyFilters() {var _context2;\n    const appliedFilters = this.appliedFilters;\n    const { activeFilters } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n    const currFilterKeys = _Object$keys(activeFilters);\n    const appliedFilterKeys = _Object$keys(appliedFilters);\n\n    const allKeys = new _Set(_concatInstanceProperty(currFilterKeys).call(currFilterKeys, appliedFilterKeys));\n    const affectedChartIds = [];\n    _forEachInstanceProperty(_context2 = [...allKeys]).call(_context2, filterKey => {\n      if (!_includesInstanceProperty(currFilterKeys).call(currFilterKeys, filterKey)) {\n        // filterKey is removed?\n        affectedChartIds.push(...appliedFilters[filterKey].scope);\n      } else if (!_includesInstanceProperty(appliedFilterKeys).call(appliedFilterKeys, filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(...activeFilters[filterKey].scope);\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n        !areObjectsEqual(_valuesInstanceProperty(\n        appliedFilters[filterKey]), _valuesInstanceProperty(\n        activeFilters[filterKey])))\n\n        {\n          affectedChartIds.push(...activeFilters[filterKey].scope);\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n        !areObjectsEqual(\n        appliedFilters[filterKey].scope,\n        activeFilters[filterKey].scope))\n\n        {var _context3;\n          const chartsInScope = _concatInstanceProperty(_context3 = activeFilters[filterKey].scope || []).call(_context3,\n          appliedFilters[filterKey].scope || []);\n\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new _Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n  }\n\n  refreshCharts(ids) {\n    _forEachInstanceProperty(ids).call(ids, id => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(OmniContainer, { logEvent: this.props.actions.logEvent }),\n      ___EmotionJSX(DashboardBuilder, null)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;const _default =\n\nDashboard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(Dashboard, \"Dashboard\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Dashboard.jsx"],"names":["React","PropTypes","t","getChartIdsFromLayout","getLayoutComponentFromChartId","DashboardBuilder","chartPropShape","slicePropShape","dashboardInfoPropShape","dashboardStatePropShape","LOG_ACTIONS_HIDE_BROWSER_TAB","LOG_ACTIONS_MOUNT_DASHBOARD","Logger","OmniContainer","areObjectsEqual","getLocationHash","isDashboardEmpty","propTypes","actions","shape","addSliceToDashboard","func","isRequired","removeSliceFromDashboard","triggerQuery","logEvent","dashboardInfo","dashboardState","charts","objectOf","slices","activeFilters","object","datasources","layout","impressionId","string","initMessages","array","timeout","number","userId","defaultProps","Dashboard","PureComponent","onBeforeUnload","hasChanged","window","addEventListener","unload","removeEventListener","message","event","returnValue","constructor","props","appliedFilters","onVisibilityChange","componentDidMount","appContainer","document","getElementById","bootstrapData","getAttribute","eventData","is_edit_mode","editMode","mount_duration","getTimestamp","is_empty","is_published","isPublished","bootstrap_data_length","length","directLinkComponentId","target_id","visibilityState","visibilityEventData","start_offset","ts","Date","getTime","UNSAFE_componentWillReceiveProps","nextProps","currentChartIds","nextChartIds","newChartIds","key","newChartId","removedChartIds","removedChartId","componentDidUpdate","hasUnsavedChanges","applyFilters","componentWillUnmount","logStart","duration","getAllCharts","currFilterKeys","appliedFilterKeys","allKeys","affectedChartIds","filterKey","push","scope","chartsInScope","refreshCharts","ids","id","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/translation';\n\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\nimport DashboardBuilder from '../containers/DashboardBuilder';\nimport {\n  chartPropShape,\n  slicePropShape,\n  dashboardInfoPropShape,\n  dashboardStatePropShape,\n} from '../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger,\n} from '../../logger/LogUtils';\nimport OmniContainer from '../../components/OmniContainer';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport '../stylesheets/index.less';\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n  }).isRequired,\n  dashboardInfo: dashboardInfoPropShape.isRequired,\n  dashboardState: dashboardStatePropShape.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  datasources: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  initMessages: PropTypes.array,\n  timeout: PropTypes.number,\n  userId: PropTypes.string,\n};\n\nconst defaultProps = {\n  initMessages: [],\n  timeout: 60,\n  userId: '',\n};\n\nclass Dashboard extends React.PureComponent {\n  // eslint-disable-next-line react/sort-comp\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {\n    super(props);\n    this.appliedFilters = props.activeFilters || {};\n\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const appContainer = document.getElementById('app');\n    const bootstrapData = appContainer?.getAttribute('data-bootstrap') || '';\n    const { dashboardState, layout } = this.props;\n    const eventData = {\n      is_edit_mode: dashboardState.editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: dashboardState.isPublished,\n      bootstrap_data_length: bootstrapData.length,\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        key => currentChartIds.indexOf(key) === -1,\n      );\n      newChartIds.forEach(newChartId =>\n        this.props.actions.addSliceToDashboard(\n          newChartId,\n          getLayoutComponentFromChartId(nextProps.layout, newChartId),\n        ),\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        key => nextChartIds.indexOf(key) === -1,\n      );\n      removedChartIds.forEach(removedChartId =>\n        this.props.actions.removeSliceFromDashboard(removedChartId),\n      );\n    }\n  }\n\n  componentDidUpdate() {\n    const { hasUnsavedChanges, editMode } = this.props.dashboardState;\n\n    const appliedFilters = this.appliedFilters;\n    const { activeFilters } = this.props;\n    // do not apply filter when dashboard in edit mode\n    if (!editMode && !areObjectsEqual(appliedFilters, activeFilters)) {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart,\n      });\n    }\n  }\n\n  // return charts in array\n  getAllCharts() {\n    return Object.values(this.props.charts);\n  }\n\n  applyFilters() {\n    const appliedFilters = this.appliedFilters;\n    const { activeFilters } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = [];\n    [...allKeys].forEach(filterKey => {\n      if (!currFilterKeys.includes(filterKey)) {\n        // filterKey is removed?\n        affectedChartIds.push(...appliedFilters[filterKey].scope);\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(...activeFilters[filterKey].scope);\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].values,\n            activeFilters[filterKey].values,\n          )\n        ) {\n          affectedChartIds.push(...activeFilters[filterKey].scope);\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].scope,\n            activeFilters[filterKey].scope,\n          )\n        ) {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || [],\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach(id => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <OmniContainer logEvent={this.props.actions.logEvent} />\n        <DashboardBuilder />\n      </>\n    );\n  }\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _valuesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/values\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _isNil from \"lodash/isNil\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * under the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport FilterIndicator from './FilterIndicator';\nimport FilterIndicatorGroup from './FilterIndicatorGroup';\nimport { FILTER_INDICATORS_DISPLAY_LENGTH } from '../util/constants';\nimport { getChartIdsInFilterScope } from '../util/activeDashboardFilters';\nimport { getDashboardFilterKey } from '../util/getDashboardFilterKey';\nimport { getFilterColorMap } from '../util/dashboardFiltersColorMap';\nimport { TIME_FILTER_MAP } from '../../visualizations/FilterBox/FilterBox';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  // from props\n  dashboardFilters: PropTypes.object.isRequired,\n  chartId: PropTypes.number.isRequired,\n  chartStatus: PropTypes.string,\n\n  // from redux\n  datasources: PropTypes.object.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  filterFieldOnFocus: PropTypes.object.isRequired };\n\n\nconst defaultProps = {\n  chartStatus: 'loading' };\n\n\nconst TIME_GRANULARITY_FIELDS = [\nTIME_FILTER_MAP.granularity,\nTIME_FILTER_MAP.time_grain_sqla];\n\n\nfunction sortByIndicatorLabel(indicator1, indicator2) {\n  const s1 = (indicator1.label || indicator1.name).toLowerCase();\n  const s2 = (indicator2.label || indicator2.name).toLowerCase();\n  if (s1 < s2) {\n    return -1;\n  } else if (s1 > s2) {\n    return 1;\n  }\n  return 0;\n}\n\nexport default class FilterIndicatorsContainer extends React.PureComponent {\n  getFilterIndicators() {var _context, _context7, _context8;\n    const {\n      datasources = {},\n      dashboardFilters,\n      chartId: currentChartId,\n      filterFieldOnFocus } =\n    this.props;\n\n    if (_Object$keys(dashboardFilters).length === 0) {\n      return [];\n    }\n\n    const dashboardFiltersColorMap = getFilterColorMap();\n    const sortIndicatorsByEmptiness = _reduceInstanceProperty(_context = _Object$values(dashboardFilters)).call(_context,\n    (indicators, dashboardFilter) => {\n      const {\n        chartId,\n        componentId,\n        datasourceId,\n        directPathToFilter,\n        isDateFilter,\n        isInstantFilter,\n        columns,\n        labels,\n        scopes } =\n      dashboardFilter;\n      const datasource = datasources[datasourceId] || {};\n\n      if (currentChartId !== chartId) {var _context2, _context3;\n        _forEachInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _Object$keys(columns)).call(_context3,\n        name => {var _context4;return (\n            _includesInstanceProperty(_context4 = getChartIdsInFilterScope({ filterScope: scopes[name] })).call(_context4,\n            currentChartId));})).call(_context2,\n\n\n        name => {var _context5;\n          const colorMapKey = getDashboardFilterKey({\n            chartId,\n            column: name });\n\n\n          // filter values could be single value or array of values\n          const values =\n          _isNil(columns[name]) ||\n          isDateFilter && columns[name] === 'No filter' ||\n          _Array$isArray(columns[name]) && columns[name].length === 0 ?\n          [] :\n          _concatInstanceProperty(_context5 = []).call(_context5, columns[name]);\n\n          const indicator = {\n            chartId,\n            colorCode: dashboardFiltersColorMap[colorMapKey],\n            componentId,\n            directPathToFilter: _concatInstanceProperty(directPathToFilter).call(directPathToFilter, \"LABEL-\" + name),\n            isDateFilter,\n            isInstantFilter,\n            name,\n            label: labels[name] || name,\n            values,\n            isFilterFieldActive:\n            chartId === filterFieldOnFocus.chartId &&\n            name === filterFieldOnFocus.column };\n\n\n          // map time granularity value to datasource configure\n          if (isDateFilter && _includesInstanceProperty(TIME_GRANULARITY_FIELDS).call(TIME_GRANULARITY_FIELDS, name)) {var _context6;\n            const timeGranularityConfig =\n            (name === TIME_FILTER_MAP.time_grain_sqla ?\n            datasource.time_grain_sqla :\n            datasource.granularity) || [];\n            const timeGranularityDisplayMapping = _reduceInstanceProperty(timeGranularityConfig).call(timeGranularityConfig,\n            (map, [key, value]) => _Object$assign({},\n            map, {\n              [key]: value }),\n\n            {});\n\n\n            indicator.values = _mapInstanceProperty(_context6 = _valuesInstanceProperty(indicator)).call(_context6,\n            value => timeGranularityDisplayMapping[value] || value);\n\n          }\n\n          if (_isEmpty(_valuesInstanceProperty(indicator))) {\n            indicators[1].push(indicator);\n          } else {\n            indicators[0].push(indicator);\n          }\n        });\n      }\n\n      return indicators;\n    },\n    [[], []]);\n\n\n    // cypress' electron don't support [].flat():\n    return [\n    ..._sortInstanceProperty(_context7 = sortIndicatorsByEmptiness[0]).call(_context7, sortByIndicatorLabel),\n    ..._sortInstanceProperty(_context8 = sortIndicatorsByEmptiness[1]).call(_context8, sortByIndicatorLabel)];\n\n  }\n\n  render() {\n    const { chartStatus, setDirectPathToChild } = this.props;\n    if (chartStatus === 'loading') {\n      return null;\n    }\n\n    const indicators = this.getFilterIndicators();\n    // if total indicators <= FILTER_INDICATORS_DISPLAY_LENGTH,\n    // show indicator for each filter field.\n    // else: show single group indicator.\n    const showIndicatorsInGroup =\n    indicators.length > FILTER_INDICATORS_DISPLAY_LENGTH;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"dashboard-filter-indicators-container\" },\n      !showIndicatorsInGroup &&\n      _mapInstanceProperty(indicators).call(indicators, (indicator) =>\n      ___EmotionJSX(FilterIndicator, {\n        key: indicator.chartId + \"_\" + indicator.name,\n        indicator: indicator,\n        setDirectPathToChild: setDirectPathToChild })),\n\n\n      showIndicatorsInGroup &&\n      ___EmotionJSX(FilterIndicatorGroup, {\n        indicators: indicators,\n        setDirectPathToChild: setDirectPathToChild })));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterIndicatorsContainer.propTypes = propTypes;\nFilterIndicatorsContainer.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx\");reactHotLoader.register(TIME_GRANULARITY_FIELDS, \"TIME_GRANULARITY_FIELDS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx\");reactHotLoader.register(sortByIndicatorLabel, \"sortByIndicatorLabel\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx\");reactHotLoader.register(FilterIndicatorsContainer, \"FilterIndicatorsContainer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/FilterIndicatorsContainer.jsx"],"names":["React","PropTypes","FilterIndicator","FilterIndicatorGroup","FILTER_INDICATORS_DISPLAY_LENGTH","getChartIdsInFilterScope","getDashboardFilterKey","getFilterColorMap","TIME_FILTER_MAP","propTypes","dashboardFilters","object","isRequired","chartId","number","chartStatus","string","datasources","setDirectPathToChild","func","filterFieldOnFocus","defaultProps","TIME_GRANULARITY_FIELDS","granularity","time_grain_sqla","sortByIndicatorLabel","indicator1","indicator2","s1","label","name","toLowerCase","s2","FilterIndicatorsContainer","PureComponent","getFilterIndicators","currentChartId","props","length","dashboardFiltersColorMap","sortIndicatorsByEmptiness","indicators","dashboardFilter","componentId","datasourceId","directPathToFilter","isDateFilter","isInstantFilter","columns","labels","scopes","datasource","filterScope","colorMapKey","column","values","indicator","colorCode","isFilterFieldActive","timeGranularityConfig","timeGranularityDisplayMapping","map","key","value","push","render","showIndicatorsInGroup"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty, isNil } from 'lodash';\n\nimport FilterIndicator from './FilterIndicator';\nimport FilterIndicatorGroup from './FilterIndicatorGroup';\nimport { FILTER_INDICATORS_DISPLAY_LENGTH } from '../util/constants';\nimport { getChartIdsInFilterScope } from '../util/activeDashboardFilters';\nimport { getDashboardFilterKey } from '../util/getDashboardFilterKey';\nimport { getFilterColorMap } from '../util/dashboardFiltersColorMap';\nimport { TIME_FILTER_MAP } from '../../visualizations/FilterBox/FilterBox';\n\nconst propTypes = {\n  // from props\n  dashboardFilters: PropTypes.object.isRequired,\n  chartId: PropTypes.number.isRequired,\n  chartStatus: PropTypes.string,\n\n  // from redux\n  datasources: PropTypes.object.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  filterFieldOnFocus: PropTypes.object.isRequired,\n};\n\nconst defaultProps = {\n  chartStatus: 'loading',\n};\n\nconst TIME_GRANULARITY_FIELDS = [\n  TIME_FILTER_MAP.granularity,\n  TIME_FILTER_MAP.time_grain_sqla,\n];\n\nfunction sortByIndicatorLabel(indicator1, indicator2) {\n  const s1 = (indicator1.label || indicator1.name).toLowerCase();\n  const s2 = (indicator2.label || indicator2.name).toLowerCase();\n  if (s1 < s2) {\n    return -1;\n  } else if (s1 > s2) {\n    return 1;\n  }\n  return 0;\n}\n\nexport default class FilterIndicatorsContainer extends React.PureComponent {\n  getFilterIndicators() {\n    const {\n      datasources = {},\n      dashboardFilters,\n      chartId: currentChartId,\n      filterFieldOnFocus,\n    } = this.props;\n\n    if (Object.keys(dashboardFilters).length === 0) {\n      return [];\n    }\n\n    const dashboardFiltersColorMap = getFilterColorMap();\n    const sortIndicatorsByEmptiness = Object.values(dashboardFilters).reduce(\n      (indicators, dashboardFilter) => {\n        const {\n          chartId,\n          componentId,\n          datasourceId,\n          directPathToFilter,\n          isDateFilter,\n          isInstantFilter,\n          columns,\n          labels,\n          scopes,\n        } = dashboardFilter;\n        const datasource = datasources[datasourceId] || {};\n\n        if (currentChartId !== chartId) {\n          Object.keys(columns)\n            .filter(name =>\n              getChartIdsInFilterScope({ filterScope: scopes[name] }).includes(\n                currentChartId,\n              ),\n            )\n            .forEach(name => {\n              const colorMapKey = getDashboardFilterKey({\n                chartId,\n                column: name,\n              });\n\n              // filter values could be single value or array of values\n              const values =\n                isNil(columns[name]) ||\n                (isDateFilter && columns[name] === 'No filter') ||\n                (Array.isArray(columns[name]) && columns[name].length === 0)\n                  ? []\n                  : [].concat(columns[name]);\n\n              const indicator = {\n                chartId,\n                colorCode: dashboardFiltersColorMap[colorMapKey],\n                componentId,\n                directPathToFilter: directPathToFilter.concat(`LABEL-${name}`),\n                isDateFilter,\n                isInstantFilter,\n                name,\n                label: labels[name] || name,\n                values,\n                isFilterFieldActive:\n                  chartId === filterFieldOnFocus.chartId &&\n                  name === filterFieldOnFocus.column,\n              };\n\n              // map time granularity value to datasource configure\n              if (isDateFilter && TIME_GRANULARITY_FIELDS.includes(name)) {\n                const timeGranularityConfig =\n                  (name === TIME_FILTER_MAP.time_grain_sqla\n                    ? datasource.time_grain_sqla\n                    : datasource.granularity) || [];\n                const timeGranularityDisplayMapping = timeGranularityConfig.reduce(\n                  (map, [key, value]) => ({\n                    ...map,\n                    [key]: value,\n                  }),\n                  {},\n                );\n\n                indicator.values = indicator.values.map(\n                  value => timeGranularityDisplayMapping[value] || value,\n                );\n              }\n\n              if (isEmpty(indicator.values)) {\n                indicators[1].push(indicator);\n              } else {\n                indicators[0].push(indicator);\n              }\n            });\n        }\n\n        return indicators;\n      },\n      [[], []],\n    );\n\n    // cypress' electron don't support [].flat():\n    return [\n      ...sortIndicatorsByEmptiness[0].sort(sortByIndicatorLabel),\n      ...sortIndicatorsByEmptiness[1].sort(sortByIndicatorLabel),\n    ];\n  }\n\n  render() {\n    const { chartStatus, setDirectPathToChild } = this.props;\n    if (chartStatus === 'loading') {\n      return null;\n    }\n\n    const indicators = this.getFilterIndicators();\n    // if total indicators <= FILTER_INDICATORS_DISPLAY_LENGTH,\n    // show indicator for each filter field.\n    // else: show single group indicator.\n    const showIndicatorsInGroup =\n      indicators.length > FILTER_INDICATORS_DISPLAY_LENGTH;\n\n    return (\n      <div className=\"dashboard-filter-indicators-container\">\n        {!showIndicatorsInGroup &&\n          indicators.map(indicator => (\n            <FilterIndicator\n              key={`${indicator.chartId}_${indicator.name}`}\n              indicator={indicator}\n              setDirectPathToChild={setDirectPathToChild}\n            />\n          ))}\n        {showIndicatorsInGroup && (\n          <FilterIndicatorGroup\n            indicators={indicators}\n            setDirectPathToChild={setDirectPathToChild}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nFilterIndicatorsContainer.propTypes = propTypes;\nFilterIndicatorsContainer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
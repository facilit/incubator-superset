{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport { addDangerToast } from '../../messageToasts/actions';\nimport { getDatasourceParameter } from '../../modules/utils';\nimport getClientErrorObject from '../../utils/getClientErrorObject';\n\nexport const SET_ALL_SLICES = 'SET_ALL_SLICES';\nexport function setAllSlices(slices) {\n  return { type: SET_ALL_SLICES, payload: { slices } };\n}\n\nexport const FETCH_ALL_SLICES_STARTED = 'FETCH_ALL_SLICES_STARTED';\nexport function fetchAllSlicesStarted() {\n  return { type: FETCH_ALL_SLICES_STARTED };\n}\n\nexport const FETCH_ALL_SLICES_FAILED = 'FETCH_ALL_SLICES_FAILED';\nexport function fetchAllSlicesFailed(error) {\n  return { type: FETCH_ALL_SLICES_FAILED, payload: { error } };\n}\n\nexport function fetchAllSlices(userId) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    if (sliceEntities.lastUpdated === 0) {\n      dispatch(fetchAllSlicesStarted());\n\n      return SupersetClient.get({\n        endpoint: \"/sliceasync/api/read?_flt_0_created_by=\" + userId }).\n\n      then(({ json }) => {var _context;\n        const slices = {};\n        _forEachInstanceProperty(_context = json.result).call(_context, slice => {var _context2;\n          let form_data = JSON.parse(slice.params);\n          let datasource = form_data.datasource;\n          if (!datasource) {\n            datasource = getDatasourceParameter(\n            slice.datasource_id,\n            slice.datasource_type);\n\n            form_data = _Object$assign({},\n            form_data, {\n              datasource });\n\n          }\n          if (_indexOfInstanceProperty(_context2 = ['markup', 'separator']).call(_context2, slice.viz_type) === -1) {\n            slices[slice.id] = {\n              slice_id: slice.id,\n              slice_url: slice.slice_url,\n              slice_name: slice.slice_name,\n              edit_url: slice.edit_url,\n              form_data,\n              datasource_name: slice.datasource_name_text,\n              datasource_link: slice.datasource_link,\n              changed_on: new Date(slice.changed_on).getTime(),\n              description: slice.description,\n              description_markdown: slice.description_markeddown,\n              viz_type: slice.viz_type,\n              modified: slice.modified,\n              changed_on_humanized: slice.changed_on_humanized };\n\n          }\n        });\n\n        return dispatch(setAllSlices(slices));\n      }).\n      catch((errorResponse) =>\n      getClientErrorObject(errorResponse).then(({ error }) => {\n        dispatch(\n        fetchAllSlicesFailed(\n        error || t('Could not fetch all saved charts')));\n\n\n        dispatch(\n        addDangerToast(\n        t('Sorry there was an error fetching saved charts: ') + error));\n\n\n      }));\n\n    }\n\n    return dispatch(setAllSlices(sliceEntities.slices));\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SET_ALL_SLICES, \"SET_ALL_SLICES\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(setAllSlices, \"setAllSlices\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(FETCH_ALL_SLICES_STARTED, \"FETCH_ALL_SLICES_STARTED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(fetchAllSlicesStarted, \"fetchAllSlicesStarted\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(FETCH_ALL_SLICES_FAILED, \"FETCH_ALL_SLICES_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(fetchAllSlicesFailed, \"fetchAllSlicesFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");reactHotLoader.register(fetchAllSlices, \"fetchAllSlices\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/actions/sliceEntities.js"],"names":["t","SupersetClient","addDangerToast","getDatasourceParameter","getClientErrorObject","SET_ALL_SLICES","setAllSlices","slices","type","payload","FETCH_ALL_SLICES_STARTED","fetchAllSlicesStarted","FETCH_ALL_SLICES_FAILED","fetchAllSlicesFailed","error","fetchAllSlices","userId","dispatch","getState","sliceEntities","lastUpdated","get","endpoint","then","json","result","slice","form_data","JSON","parse","params","datasource","datasource_id","datasource_type","viz_type","id","slice_id","slice_url","slice_name","edit_url","datasource_name","datasource_name_text","datasource_link","changed_on","Date","getTime","description","description_markdown","description_markeddown","modified","changed_on_humanized","catch","errorResponse"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport { addDangerToast } from '../../messageToasts/actions';\nimport { getDatasourceParameter } from '../../modules/utils';\nimport getClientErrorObject from '../../utils/getClientErrorObject';\n\nexport const SET_ALL_SLICES = 'SET_ALL_SLICES';\nexport function setAllSlices(slices) {\n  return { type: SET_ALL_SLICES, payload: { slices } };\n}\n\nexport const FETCH_ALL_SLICES_STARTED = 'FETCH_ALL_SLICES_STARTED';\nexport function fetchAllSlicesStarted() {\n  return { type: FETCH_ALL_SLICES_STARTED };\n}\n\nexport const FETCH_ALL_SLICES_FAILED = 'FETCH_ALL_SLICES_FAILED';\nexport function fetchAllSlicesFailed(error) {\n  return { type: FETCH_ALL_SLICES_FAILED, payload: { error } };\n}\n\nexport function fetchAllSlices(userId) {\n  return (dispatch, getState) => {\n    const { sliceEntities } = getState();\n    if (sliceEntities.lastUpdated === 0) {\n      dispatch(fetchAllSlicesStarted());\n\n      return SupersetClient.get({\n        endpoint: `/sliceasync/api/read?_flt_0_created_by=${userId}`,\n      })\n        .then(({ json }) => {\n          const slices = {};\n          json.result.forEach(slice => {\n            let form_data = JSON.parse(slice.params);\n            let datasource = form_data.datasource;\n            if (!datasource) {\n              datasource = getDatasourceParameter(\n                slice.datasource_id,\n                slice.datasource_type,\n              );\n              form_data = {\n                ...form_data,\n                datasource,\n              };\n            }\n            if (['markup', 'separator'].indexOf(slice.viz_type) === -1) {\n              slices[slice.id] = {\n                slice_id: slice.id,\n                slice_url: slice.slice_url,\n                slice_name: slice.slice_name,\n                edit_url: slice.edit_url,\n                form_data,\n                datasource_name: slice.datasource_name_text,\n                datasource_link: slice.datasource_link,\n                changed_on: new Date(slice.changed_on).getTime(),\n                description: slice.description,\n                description_markdown: slice.description_markeddown,\n                viz_type: slice.viz_type,\n                modified: slice.modified,\n                changed_on_humanized: slice.changed_on_humanized,\n              };\n            }\n          });\n\n          return dispatch(setAllSlices(slices));\n        })\n        .catch(errorResponse =>\n          getClientErrorObject(errorResponse).then(({ error }) => {\n            dispatch(\n              fetchAllSlicesFailed(\n                error || t('Could not fetch all saved charts'),\n              ),\n            );\n            dispatch(\n              addDangerToast(\n                t('Sorry there was an error fetching saved charts: ') + error,\n              ),\n            );\n          }),\n        );\n    }\n\n    return dispatch(setAllSlices(sliceEntities.slices));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
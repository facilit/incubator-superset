{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import \"core-js/modules/web.dom-collections.iterator\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _defineProperty from \"@babel/runtime-corejs3/helpers/defineProperty\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport {\nFormGroup,\nInputGroup,\nForm,\nFormControl,\nLabel,\nOverlayTrigger,\nTooltip } from\n'react-bootstrap';\nimport Split from 'react-split';\nimport { t } from '@superset-ui/translation';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\n\nimport Button from '../../components/Button';\nimport Checkbox from '../../components/Checkbox';\nimport LimitControl from './LimitControl';\nimport TemplateParamsEditor from './TemplateParamsEditor';\nimport SouthPane from './SouthPane';\nimport SaveQuery from './SaveQuery';\nimport ScheduleQueryButton from './ScheduleQueryButton';\nimport EstimateQueryCostButton from './EstimateQueryCostButton';\nimport ShareSqlLabQuery from './ShareSqlLabQuery';\nimport Timer from '../../components/Timer';\nimport Hotkeys from '../../components/Hotkeys';\nimport SqlEditorLeftBar from './SqlEditorLeftBar';\nimport AceEditorWrapper from './AceEditorWrapper';\nimport {\nSTATE_BSSTYLE_MAP,\nSQL_EDITOR_GUTTER_HEIGHT,\nSQL_EDITOR_GUTTER_MARGIN,\nSQL_TOOLBAR_HEIGHT } from\n'../constants';\nimport RunQueryActionButton from './RunQueryActionButton';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst SQL_EDITOR_PADDING = 10;\nconst INITIAL_NORTH_PERCENT = 30;\nconst INITIAL_SOUTH_PERCENT = 70;\nconst SET_QUERY_EDITOR_SQL_DEBOUNCE_MS = 2000;\nconst VALIDATION_DEBOUNCE_MS = 600;\nconst WINDOW_RESIZE_THROTTLE_MS = 100;\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  database: PropTypes.object,\n  latestQuery: PropTypes.object,\n  tables: PropTypes.array.isRequired,\n  editorQueries: PropTypes.array.isRequired,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  hideLeftBar: PropTypes.bool,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\n\nconst defaultProps = {\n  database: null,\n  latestQuery: null,\n  hideLeftBar: false,\n  scheduleQueryWarning: null };\n\n\nclass SqlEditor extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context14, _context15;\n    super(props);_defineProperty(this, \"handleToggleAutocompleteEnabled\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    () => {\n      this.setState({ autocompleteEnabled: !this.state.autocompleteEnabled });\n    });this.state = { autorun: props.queryEditor.autorun, ctas: '', northPercent: props.queryEditor.northPercent || INITIAL_NORTH_PERCENT, southPercent: props.queryEditor.southPercent || INITIAL_SOUTH_PERCENT, sql: props.queryEditor.sql, autocompleteEnabled: true };this.sqlEditorRef = React.createRef();this.northPaneRef = React.createRef();this.elementStyle = _bindInstanceProperty(_context = this.elementStyle).call(_context, this);this.onResizeStart = _bindInstanceProperty(_context2 = this.onResizeStart).call(_context2, this);this.onResizeEnd = _bindInstanceProperty(_context3 = this.onResizeEnd).call(_context3, this);this.canValidateQuery = _bindInstanceProperty(_context4 = this.canValidateQuery).call(_context4, this);this.runQuery = _bindInstanceProperty(_context5 = this.runQuery).call(_context5, this);this.stopQuery = _bindInstanceProperty(_context6 = this.stopQuery).call(_context6, this);this.onSqlChanged = _bindInstanceProperty(_context7 = this.onSqlChanged).call(_context7, this);this.setQueryEditorSql = _bindInstanceProperty(_context8 = this.setQueryEditorSql).call(_context8, this);this.setQueryEditorSqlWithDebounce = debounce(_bindInstanceProperty(_context9 = this.setQueryEditorSql).call(_context9, this), SET_QUERY_EDITOR_SQL_DEBOUNCE_MS);this.queryPane = _bindInstanceProperty(_context10 = this.queryPane).call(_context10, this);this.getAceEditorAndSouthPaneHeights = _bindInstanceProperty(_context11 = this.getAceEditorAndSouthPaneHeights).call(_context11, this);this.getSqlEditorHeight = _bindInstanceProperty(_context12 = this.getSqlEditorHeight).call(_context12, this);this.requestValidation = debounce(_bindInstanceProperty(_context13 = this.requestValidation).call(_context13, this), VALIDATION_DEBOUNCE_MS);this.getQueryCostEstimate = _bindInstanceProperty(_context14 = this.getQueryCostEstimate).call(_context14, this);this.handleWindowResize = throttle(_bindInstanceProperty(_context15 = this.handleWindowResize).call(_context15, this), WINDOW_RESIZE_THROTTLE_MS);}UNSAFE_componentWillMount() {if (this.state.autorun) {this.setState({ autorun: false });this.props.actions.queryEditorSetAutorun(this.props.queryEditor, false);this.startQuery();}}componentDidMount() {// We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ height: this.getSqlEditorHeight() });window.addEventListener('resize', this.handleWindowResize);}componentWillUnmount() {window.removeEventListener('resize', this.handleWindowResize);}onResizeStart() {// Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';}onResizeEnd([northPercent, southPercent]) {this.setState({ northPercent, southPercent });if (this.northPaneRef.current && this.northPaneRef.current.clientHeight) {this.props.actions.persistEditorHeight(this.props.queryEditor, northPercent, southPercent);}}onSqlChanged(sql) {this.setState({ sql });this.setQueryEditorSqlWithDebounce(sql); // Request server-side validation of the query text\n    if (this.canValidateQuery()) {// NB. requestValidation is debounced\n      this.requestValidation();}} // One layer of abstraction for easy spying in unit tests\n  getSqlEditorHeight() {return this.sqlEditorRef.current ? this.sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2 : 0;} // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  getAceEditorAndSouthPaneHeights(height, northPercent, southPercent) {return { aceEditorHeight: height * northPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) - SQL_TOOLBAR_HEIGHT, southPaneHeight: height * southPercent / 100 - (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) };}getHotkeyConfig() {return [{ name: 'runQuery1', key: 'ctrl+r', descr: t('Run query'), func: this.runQuery }, { name: 'runQuery2', key: 'ctrl+enter', descr: t('Run query'), func: this.runQuery }, { name: 'newTab', key: 'ctrl+t', descr: t('New tab'), func: () => {this.props.actions.addQueryEditor(_Object$assign({}, this.props.queryEditor, { title: t('Untitled Query'), sql: '' }));} }, { name: 'stopQuery', key: 'ctrl+x', descr: t('Stop query'), func: this.stopQuery }];}setQueryEditorSql(sql) {this.props.actions.queryEditorSetSql(this.props.queryEditor, sql);}setQueryLimit(queryLimit) {this.props.actions.queryEditorSetQueryLimit(this.props.queryEditor, queryLimit);}getQueryCostEstimate() {if (this.props.database) {const qe = this.props.queryEditor;const query = { dbId: qe.dbId, sql: qe.selectedText ? qe.selectedText : this.state.sql, sqlEditorId: qe.id, schema: qe.schema, templateParams: qe.templateParams };this.props.actions.estimateQueryCost(query);}}handleWindowResize() {this.setState({ height: this.getSqlEditorHeight() });}elementStyle(dimension, elementSize, gutterSize) {return { [dimension]: \"calc(\" + elementSize + \"% - \" + (gutterSize + SQL_EDITOR_GUTTER_MARGIN) + \"px)\" };}requestValidation() {if (this.props.database) {const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: this.state.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams };\n\n      this.props.actions.validateQuery(query);\n    }\n  }\n  canValidateQuery() {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    const validatorMap = window.featureFlags.SQL_VALIDATORS_BY_ENGINE;\n    if (this.props.database && validatorMap != null) {\n      return validatorMap.hasOwnProperty(this.props.database.backend);\n    }\n    return false;\n  }\n  runQuery() {\n    if (this.props.database) {\n      this.startQuery();\n    }\n  }\n  startQuery(ctas = false) {\n    const qe = this.props.queryEditor;\n    const query = {\n      dbId: qe.dbId,\n      sql: qe.selectedText ? qe.selectedText : this.state.sql,\n      sqlEditorId: qe.id,\n      tab: qe.title,\n      schema: qe.schema,\n      tempTableName: ctas ? this.state.ctas : '',\n      templateParams: qe.templateParams,\n      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n      runAsync: this.props.database ?\n      this.props.database.allow_run_async :\n      false,\n      ctas,\n      updateTabState: !qe.selectedText };\n\n    this.props.actions.runQuery(query);\n    this.props.actions.setActiveSouthPaneTab('Results');\n  }\n  stopQuery() {var _context16;\n    if (\n    this.props.latestQuery &&\n    _indexOfInstanceProperty(_context16 = ['running', 'pending']).call(_context16, this.props.latestQuery.state) >= 0)\n    {\n      this.props.actions.postStopQuery(this.props.latestQuery);\n    }\n  }\n  createTableAs() {\n    this.startQuery(true);\n  }\n  ctasChanged(event) {\n    this.setState({ ctas: event.target.value });\n  }\n  queryPane() {\n    const hotkeys = this.getHotkeyConfig();\n    const {\n      aceEditorHeight,\n      southPaneHeight } =\n    this.getAceEditorAndSouthPaneHeights(\n    this.state.height,\n    this.state.northPercent,\n    this.state.southPercent);\n\n    return (\n      ___EmotionJSX(Split, {\n        expandToMin: true,\n        className: \"queryPane\",\n        sizes: [this.state.northPercent, this.state.southPercent],\n        elementStyle: this.elementStyle,\n        minSize: 200,\n        direction: \"vertical\",\n        gutterSize: SQL_EDITOR_GUTTER_HEIGHT,\n        onDragStart: this.onResizeStart,\n        onDragEnd: this.onResizeEnd, __source: { fileName: _jsxFileName, lineNumber: 332 }, __self: this },\n\n      ___EmotionJSX(\"div\", { ref: this.northPaneRef, className: \"north-pane\", __source: { fileName: _jsxFileName, lineNumber: 343 }, __self: this },\n      ___EmotionJSX(AceEditorWrapper, {\n        actions: this.props.actions,\n        autocomplete: this.state.autocompleteEnabled,\n        onBlur: this.setQueryEditorSql,\n        onChange: this.onSqlChanged,\n        queryEditor: this.props.queryEditor,\n        sql: this.props.queryEditor.sql,\n        schemas: this.props.queryEditor.schemaOptions,\n        tables: this.props.queryEditor.tableOptions,\n        functionNames:\n        this.props.database ? this.props.database.function_names : [],\n\n        extendedTables: this.props.tables,\n        height: aceEditorHeight + \"px\",\n        hotkeys: hotkeys, __source: { fileName: _jsxFileName, lineNumber: 344 }, __self: this }),\n\n      this.renderEditorBottomBar(hotkeys)),\n\n      ___EmotionJSX(SouthPane, {\n        editorQueries: this.props.editorQueries,\n        latestQueryId: this.props.latestQuery && this.props.latestQuery.id,\n        dataPreviewQueries: this.props.dataPreviewQueries,\n        actions: this.props.actions,\n        height: southPaneHeight,\n        displayLimit: this.props.displayLimit, __source: { fileName: _jsxFileName, lineNumber: 362 }, __self: this })));\n\n\n\n  }\n  renderEditorBottomBar(hotkeys) {var _context19;\n    let ctasControls;\n    if (this.props.database && this.props.database.allow_ctas) {var _context17, _context18;\n      const ctasToolTip = t('Create table as with query results');\n      ctasControls =\n      ___EmotionJSX(FormGroup, { __source: { fileName: _jsxFileName, lineNumber: 378 }, __self: this },\n      ___EmotionJSX(InputGroup, { __source: { fileName: _jsxFileName, lineNumber: 379 }, __self: this },\n      ___EmotionJSX(FormControl, {\n        type: \"text\",\n        bsSize: \"small\",\n        className: \"input-sm\",\n        placeholder: t('new table name'),\n        onChange: _bindInstanceProperty(_context17 = this.ctasChanged).call(_context17, this), __source: { fileName: _jsxFileName, lineNumber: 380 }, __self: this }),\n\n      ___EmotionJSX(InputGroup.Button, { __source: { fileName: _jsxFileName, lineNumber: 387 }, __self: this },\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        disabled: this.state.ctas.length === 0,\n        onClick: _bindInstanceProperty(_context18 = this.createTableAs).call(_context18, this),\n        tooltip: ctasToolTip, __source: { fileName: _jsxFileName, lineNumber: 388 }, __self: this },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-table\", __source: { fileName: _jsxFileName, lineNumber: 394 }, __self: this }), \" CTAS\"))));\n\n\n\n\n\n    }\n    const qe = this.props.queryEditor;\n    let limitWarning = null;\n    if (\n    this.props.latestQuery &&\n    this.props.latestQuery.results &&\n    this.props.latestQuery.results.displayLimitReached)\n    {\n      const tooltip =\n      ___EmotionJSX(Tooltip, { id: \"tooltip\", __source: { fileName: _jsxFileName, lineNumber: 409 }, __self: this },\n      t(\"It appears that the number of rows in the query results displayed\\n           was limited on the server side to\\n           the %s limit.\",\n\n\n\n      this.props.latestQuery.rows));\n\n\n\n      limitWarning =\n      ___EmotionJSX(OverlayTrigger, { placement: \"left\", overlay: tooltip, __source: { fileName: _jsxFileName, lineNumber: 419 }, __self: this },\n      ___EmotionJSX(Label, { bsStyle: \"warning\", __source: { fileName: _jsxFileName, lineNumber: 420 }, __self: this }, \"LIMIT\"));\n\n\n    }\n    const successful =\n    this.props.latestQuery && this.props.latestQuery.state === 'success';\n    const scheduleToolTip = successful ?\n    t('Schedule the query periodically') :\n    t('You must run the query successfully first');\n    return (\n      ___EmotionJSX(\"div\", { className: \"sql-toolbar\", id: \"js-sql-toolbar\", __source: { fileName: _jsxFileName, lineNumber: 430 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"leftItems\", __source: { fileName: _jsxFileName, lineNumber: 431 }, __self: this },\n      ___EmotionJSX(Form, { inline: true, __source: { fileName: _jsxFileName, lineNumber: 432 }, __self: this },\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 433 }, __self: this },\n      ___EmotionJSX(RunQueryActionButton, {\n        allowAsync:\n        this.props.database ?\n        this.props.database.allow_run_async :\n        false,\n\n        dbId: qe.dbId,\n        queryState:\n        this.props.latestQuery && this.props.latestQuery.state,\n\n        runQuery: this.runQuery,\n        selectedText: qe.selectedText,\n        stopQuery: this.stopQuery,\n        sql: this.state.sql, __source: { fileName: _jsxFileName, lineNumber: 434 }, __self: this })),\n\n\n      isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n      this.props.database &&\n      this.props.database.allows_cost_estimate &&\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 453 }, __self: this },\n      ___EmotionJSX(EstimateQueryCostButton, {\n        dbId: qe.dbId,\n        schema: qe.schema,\n        sql: qe.sql,\n        getEstimate: this.getQueryCostEstimate,\n        queryCostEstimate: qe.queryCostEstimate,\n        selectedText: qe.selectedText,\n        tooltip: t('Estimate the cost before running a query'), __source: { fileName: _jsxFileName, lineNumber: 454 }, __self: this })),\n\n\n\n      isFeatureEnabled(FeatureFlag.SCHEDULED_QUERIES) &&\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 466 }, __self: this },\n      ___EmotionJSX(ScheduleQueryButton, {\n        defaultLabel: qe.title,\n        sql: qe.sql,\n        onSchedule: this.props.actions.scheduleQuery,\n        schema: qe.schema,\n        dbId: qe.dbId,\n        scheduleQueryWarning: this.props.scheduleQueryWarning,\n        tooltip: scheduleToolTip,\n        disabled: !successful, __source: { fileName: _jsxFileName, lineNumber: 467 }, __self: this })),\n\n\n\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 479 }, __self: this },\n      ___EmotionJSX(SaveQuery, {\n        query: qe,\n        defaultLabel:\n        qe.description == null ? qe.title : qe.description,\n\n        onSave: this.props.actions.saveQuery,\n        onUpdate: this.props.actions.updateSavedQuery,\n        saveQueryWarning: this.props.saveQueryWarning, __source: { fileName: _jsxFileName, lineNumber: 480 }, __self: this })),\n\n\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 490 }, __self: this },\n      ___EmotionJSX(ShareSqlLabQuery, { queryEditor: qe, __source: { fileName: _jsxFileName, lineNumber: 491 }, __self: this })),\n\n      ctasControls && ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 493 }, __self: this }, ctasControls),\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 494 }, __self: this },\n      ___EmotionJSX(LimitControl, {\n        value:\n        this.props.queryEditor.queryLimit !== undefined ?\n        this.props.queryEditor.queryLimit :\n        this.props.defaultQueryLimit,\n\n        defaultQueryLimit: this.props.defaultQueryLimit,\n        maxRow: this.props.maxRow,\n        onChange: _bindInstanceProperty(_context19 = this.setQueryLimit).call(_context19, this), __source: { fileName: _jsxFileName, lineNumber: 495 }, __self: this })),\n\n\n      ___EmotionJSX(\"span\", { __source: { fileName: _jsxFileName, lineNumber: 506 }, __self: this },\n      ___EmotionJSX(Hotkeys, { header: t('Keyboard shortcuts'), hotkeys: hotkeys, __source: { fileName: _jsxFileName, lineNumber: 507 }, __self: this })))),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"rightItems\", __source: { fileName: _jsxFileName, lineNumber: 511 }, __self: this },\n      ___EmotionJSX(Button, {\n        className: \"autocomplete\",\n        onClick: this.handleToggleAutocompleteEnabled, __source: { fileName: _jsxFileName, lineNumber: 512 }, __self: this },\n\n      ___EmotionJSX(Checkbox, { checked: this.state.autocompleteEnabled, __source: { fileName: _jsxFileName, lineNumber: 516 }, __self: this }), ' ',\n      t('Autocomplete')),\n      ' ',\n      ___EmotionJSX(TemplateParamsEditor, {\n        language: \"json\",\n        onChange: params => {\n          this.props.actions.queryEditorSetTemplateParams(qe, params);\n        },\n        code: qe.templateParams, __source: { fileName: _jsxFileName, lineNumber: 519 }, __self: this }),\n\n      limitWarning,\n      this.props.latestQuery &&\n      ___EmotionJSX(Timer, {\n        startTime: this.props.latestQuery.startDttm,\n        endTime: this.props.latestQuery.endDttm,\n        state: STATE_BSSTYLE_MAP[this.props.latestQuery.state],\n        isRunning: this.props.latestQuery.state === 'running', __source: { fileName: _jsxFileName, lineNumber: 528 }, __self: this }))));\n\n\n\n\n\n  }\n  render() {\n    return (\n      ___EmotionJSX(\"div\", { ref: this.sqlEditorRef, className: \"SqlEditor\", __source: { fileName: _jsxFileName, lineNumber: 541 }, __self: this },\n      ___EmotionJSX(CSSTransition, {\n        classNames: \"schemaPane\",\n        in: !this.props.hideLeftBar,\n        timeout: 300, __source: { fileName: _jsxFileName, lineNumber: 542 }, __self: this },\n\n      ___EmotionJSX(\"div\", { className: \"schemaPane\", __source: { fileName: _jsxFileName, lineNumber: 547 }, __self: this },\n      ___EmotionJSX(SqlEditorLeftBar, {\n        database: this.props.database,\n        queryEditor: this.props.queryEditor,\n        tables: this.props.tables,\n        actions: this.props.actions, __source: { fileName: _jsxFileName, lineNumber: 548 }, __self: this }))),\n\n\n\n      this.queryPane()));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}SqlEditor.defaultProps = defaultProps;\nSqlEditor.propTypes = propTypes;const _default =\n\nSqlEditor;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SQL_EDITOR_PADDING, \"SQL_EDITOR_PADDING\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_NORTH_PERCENT, \"INITIAL_NORTH_PERCENT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(INITIAL_SOUTH_PERCENT, \"INITIAL_SOUTH_PERCENT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SET_QUERY_EDITOR_SQL_DEBOUNCE_MS, \"SET_QUERY_EDITOR_SQL_DEBOUNCE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(VALIDATION_DEBOUNCE_MS, \"VALIDATION_DEBOUNCE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(WINDOW_RESIZE_THROTTLE_MS, \"WINDOW_RESIZE_THROTTLE_MS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(SqlEditor, \"SqlEditor\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/SqlEditor.jsx"],"names":["React","CSSTransition","PropTypes","FormGroup","InputGroup","Form","FormControl","Label","OverlayTrigger","Tooltip","Split","t","debounce","throttle","Button","Checkbox","LimitControl","TemplateParamsEditor","SouthPane","SaveQuery","ScheduleQueryButton","EstimateQueryCostButton","ShareSqlLabQuery","Timer","Hotkeys","SqlEditorLeftBar","AceEditorWrapper","STATE_BSSTYLE_MAP","SQL_EDITOR_GUTTER_HEIGHT","SQL_EDITOR_GUTTER_MARGIN","SQL_TOOLBAR_HEIGHT","RunQueryActionButton","FeatureFlag","isFeatureEnabled","SQL_EDITOR_PADDING","INITIAL_NORTH_PERCENT","INITIAL_SOUTH_PERCENT","SET_QUERY_EDITOR_SQL_DEBOUNCE_MS","VALIDATION_DEBOUNCE_MS","WINDOW_RESIZE_THROTTLE_MS","propTypes","actions","object","isRequired","database","latestQuery","tables","array","editorQueries","dataPreviewQueries","queryEditor","hideLeftBar","bool","defaultQueryLimit","number","maxRow","displayLimit","saveQueryWarning","string","scheduleQueryWarning","defaultProps","SqlEditor","PureComponent","constructor","props","setState","autocompleteEnabled","state","autorun","ctas","northPercent","southPercent","sql","sqlEditorRef","createRef","northPaneRef","elementStyle","onResizeStart","onResizeEnd","canValidateQuery","runQuery","stopQuery","onSqlChanged","setQueryEditorSql","setQueryEditorSqlWithDebounce","queryPane","getAceEditorAndSouthPaneHeights","getSqlEditorHeight","requestValidation","getQueryCostEstimate","handleWindowResize","UNSAFE_componentWillMount","queryEditorSetAutorun","startQuery","componentDidMount","height","window","addEventListener","componentWillUnmount","removeEventListener","document","getElementsByClassName","style","current","clientHeight","persistEditorHeight","aceEditorHeight","southPaneHeight","getHotkeyConfig","name","key","descr","func","addQueryEditor","title","queryEditorSetSql","setQueryLimit","queryLimit","queryEditorSetQueryLimit","qe","query","dbId","selectedText","sqlEditorId","id","schema","templateParams","estimateQueryCost","dimension","elementSize","gutterSize","validateQuery","validatorMap","featureFlags","SQL_VALIDATORS_BY_ENGINE","hasOwnProperty","backend","tab","tempTableName","runAsync","allow_run_async","updateTabState","setActiveSouthPaneTab","postStopQuery","createTableAs","ctasChanged","event","target","value","hotkeys","schemaOptions","tableOptions","function_names","renderEditorBottomBar","ctasControls","allow_ctas","ctasToolTip","length","limitWarning","results","displayLimitReached","tooltip","rows","successful","scheduleToolTip","ESTIMATE_QUERY_COST","allows_cost_estimate","queryCostEstimate","SCHEDULED_QUERIES","scheduleQuery","description","saveQuery","updateSavedQuery","undefined","handleToggleAutocompleteEnabled","params","queryEditorSetTemplateParams","startDttm","endDttm","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  InputGroup,\n  Form,\n  FormControl,\n  Label,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport Split from 'react-split';\nimport { t } from '@superset-ui/translation';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\n\nimport Button from '../../components/Button';\nimport Checkbox from '../../components/Checkbox';\nimport LimitControl from './LimitControl';\nimport TemplateParamsEditor from './TemplateParamsEditor';\nimport SouthPane from './SouthPane';\nimport SaveQuery from './SaveQuery';\nimport ScheduleQueryButton from './ScheduleQueryButton';\nimport EstimateQueryCostButton from './EstimateQueryCostButton';\nimport ShareSqlLabQuery from './ShareSqlLabQuery';\nimport Timer from '../../components/Timer';\nimport Hotkeys from '../../components/Hotkeys';\nimport SqlEditorLeftBar from './SqlEditorLeftBar';\nimport AceEditorWrapper from './AceEditorWrapper';\nimport {\n  STATE_BSSTYLE_MAP,\n  SQL_EDITOR_GUTTER_HEIGHT,\n  SQL_EDITOR_GUTTER_MARGIN,\n  SQL_TOOLBAR_HEIGHT,\n} from '../constants';\nimport RunQueryActionButton from './RunQueryActionButton';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\n\nconst SQL_EDITOR_PADDING = 10;\nconst INITIAL_NORTH_PERCENT = 30;\nconst INITIAL_SOUTH_PERCENT = 70;\nconst SET_QUERY_EDITOR_SQL_DEBOUNCE_MS = 2000;\nconst VALIDATION_DEBOUNCE_MS = 600;\nconst WINDOW_RESIZE_THROTTLE_MS = 100;\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  database: PropTypes.object,\n  latestQuery: PropTypes.object,\n  tables: PropTypes.array.isRequired,\n  editorQueries: PropTypes.array.isRequired,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  queryEditor: PropTypes.object.isRequired,\n  hideLeftBar: PropTypes.bool,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\n\nconst defaultProps = {\n  database: null,\n  latestQuery: null,\n  hideLeftBar: false,\n  scheduleQueryWarning: null,\n};\n\nclass SqlEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autorun: props.queryEditor.autorun,\n      ctas: '',\n      northPercent: props.queryEditor.northPercent || INITIAL_NORTH_PERCENT,\n      southPercent: props.queryEditor.southPercent || INITIAL_SOUTH_PERCENT,\n      sql: props.queryEditor.sql,\n      autocompleteEnabled: true,\n    };\n    this.sqlEditorRef = React.createRef();\n    this.northPaneRef = React.createRef();\n\n    this.elementStyle = this.elementStyle.bind(this);\n    this.onResizeStart = this.onResizeStart.bind(this);\n    this.onResizeEnd = this.onResizeEnd.bind(this);\n    this.canValidateQuery = this.canValidateQuery.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n    this.stopQuery = this.stopQuery.bind(this);\n    this.onSqlChanged = this.onSqlChanged.bind(this);\n    this.setQueryEditorSql = this.setQueryEditorSql.bind(this);\n    this.setQueryEditorSqlWithDebounce = debounce(\n      this.setQueryEditorSql.bind(this),\n      SET_QUERY_EDITOR_SQL_DEBOUNCE_MS,\n    );\n    this.queryPane = this.queryPane.bind(this);\n    this.getAceEditorAndSouthPaneHeights = this.getAceEditorAndSouthPaneHeights.bind(\n      this,\n    );\n    this.getSqlEditorHeight = this.getSqlEditorHeight.bind(this);\n    this.requestValidation = debounce(\n      this.requestValidation.bind(this),\n      VALIDATION_DEBOUNCE_MS,\n    );\n    this.getQueryCostEstimate = this.getQueryCostEstimate.bind(this);\n    this.handleWindowResize = throttle(\n      this.handleWindowResize.bind(this),\n      WINDOW_RESIZE_THROTTLE_MS,\n    );\n  }\n  UNSAFE_componentWillMount() {\n    if (this.state.autorun) {\n      this.setState({ autorun: false });\n      this.props.actions.queryEditorSetAutorun(this.props.queryEditor, false);\n      this.startQuery();\n    }\n  }\n  componentDidMount() {\n    // We need to measure the height of the sql editor post render to figure the height of\n    // the south pane so it gets rendered properly\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({ height: this.getSqlEditorHeight() });\n\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n  onResizeStart() {\n    // Set the heights on the ace editor and the ace content area after drag starts\n    // to smooth out the visual transition to the new heights when drag ends\n    document.getElementsByClassName('ace_content')[0].style.height = '100%';\n  }\n  onResizeEnd([northPercent, southPercent]) {\n    this.setState({ northPercent, southPercent });\n\n    if (this.northPaneRef.current && this.northPaneRef.current.clientHeight) {\n      this.props.actions.persistEditorHeight(\n        this.props.queryEditor,\n        northPercent,\n        southPercent,\n      );\n    }\n  }\n  onSqlChanged(sql) {\n    this.setState({ sql });\n    this.setQueryEditorSqlWithDebounce(sql);\n    // Request server-side validation of the query text\n    if (this.canValidateQuery()) {\n      // NB. requestValidation is debounced\n      this.requestValidation();\n    }\n  }\n  // One layer of abstraction for easy spying in unit tests\n  getSqlEditorHeight() {\n    return this.sqlEditorRef.current\n      ? this.sqlEditorRef.current.clientHeight - SQL_EDITOR_PADDING * 2\n      : 0;\n  }\n  // Return the heights for the ace editor and the south pane as an object\n  // given the height of the sql editor, north pane percent and south pane percent.\n  getAceEditorAndSouthPaneHeights(height, northPercent, southPercent) {\n    return {\n      aceEditorHeight:\n        (height * northPercent) / 100 -\n        (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN) -\n        SQL_TOOLBAR_HEIGHT,\n      southPaneHeight:\n        (height * southPercent) / 100 -\n        (SQL_EDITOR_GUTTER_HEIGHT / 2 + SQL_EDITOR_GUTTER_MARGIN),\n    };\n  }\n  getHotkeyConfig() {\n    return [\n      {\n        name: 'runQuery1',\n        key: 'ctrl+r',\n        descr: t('Run query'),\n        func: this.runQuery,\n      },\n      {\n        name: 'runQuery2',\n        key: 'ctrl+enter',\n        descr: t('Run query'),\n        func: this.runQuery,\n      },\n      {\n        name: 'newTab',\n        key: 'ctrl+t',\n        descr: t('New tab'),\n        func: () => {\n          this.props.actions.addQueryEditor({\n            ...this.props.queryEditor,\n            title: t('Untitled Query'),\n            sql: '',\n          });\n        },\n      },\n      {\n        name: 'stopQuery',\n        key: 'ctrl+x',\n        descr: t('Stop query'),\n        func: this.stopQuery,\n      },\n    ];\n  }\n  setQueryEditorSql(sql) {\n    this.props.actions.queryEditorSetSql(this.props.queryEditor, sql);\n  }\n  setQueryLimit(queryLimit) {\n    this.props.actions.queryEditorSetQueryLimit(\n      this.props.queryEditor,\n      queryLimit,\n    );\n  }\n  getQueryCostEstimate() {\n    if (this.props.database) {\n      const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: qe.selectedText ? qe.selectedText : this.state.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams,\n      };\n      this.props.actions.estimateQueryCost(query);\n    }\n  }\n  handleWindowResize() {\n    this.setState({ height: this.getSqlEditorHeight() });\n  }\n  handleToggleAutocompleteEnabled = () => {\n    this.setState({ autocompleteEnabled: !this.state.autocompleteEnabled });\n  };\n  elementStyle(dimension, elementSize, gutterSize) {\n    return {\n      [dimension]: `calc(${elementSize}% - ${\n        gutterSize + SQL_EDITOR_GUTTER_MARGIN\n      }px)`,\n    };\n  }\n  requestValidation() {\n    if (this.props.database) {\n      const qe = this.props.queryEditor;\n      const query = {\n        dbId: qe.dbId,\n        sql: this.state.sql,\n        sqlEditorId: qe.id,\n        schema: qe.schema,\n        templateParams: qe.templateParams,\n      };\n      this.props.actions.validateQuery(query);\n    }\n  }\n  canValidateQuery() {\n    // Check whether or not we can validate the current query based on whether\n    // or not the backend has a validator configured for it.\n    const validatorMap = window.featureFlags.SQL_VALIDATORS_BY_ENGINE;\n    if (this.props.database && validatorMap != null) {\n      return validatorMap.hasOwnProperty(this.props.database.backend);\n    }\n    return false;\n  }\n  runQuery() {\n    if (this.props.database) {\n      this.startQuery();\n    }\n  }\n  startQuery(ctas = false) {\n    const qe = this.props.queryEditor;\n    const query = {\n      dbId: qe.dbId,\n      sql: qe.selectedText ? qe.selectedText : this.state.sql,\n      sqlEditorId: qe.id,\n      tab: qe.title,\n      schema: qe.schema,\n      tempTableName: ctas ? this.state.ctas : '',\n      templateParams: qe.templateParams,\n      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n      runAsync: this.props.database\n        ? this.props.database.allow_run_async\n        : false,\n      ctas,\n      updateTabState: !qe.selectedText,\n    };\n    this.props.actions.runQuery(query);\n    this.props.actions.setActiveSouthPaneTab('Results');\n  }\n  stopQuery() {\n    if (\n      this.props.latestQuery &&\n      ['running', 'pending'].indexOf(this.props.latestQuery.state) >= 0\n    ) {\n      this.props.actions.postStopQuery(this.props.latestQuery);\n    }\n  }\n  createTableAs() {\n    this.startQuery(true);\n  }\n  ctasChanged(event) {\n    this.setState({ ctas: event.target.value });\n  }\n  queryPane() {\n    const hotkeys = this.getHotkeyConfig();\n    const {\n      aceEditorHeight,\n      southPaneHeight,\n    } = this.getAceEditorAndSouthPaneHeights(\n      this.state.height,\n      this.state.northPercent,\n      this.state.southPercent,\n    );\n    return (\n      <Split\n        expandToMin\n        className=\"queryPane\"\n        sizes={[this.state.northPercent, this.state.southPercent]}\n        elementStyle={this.elementStyle}\n        minSize={200}\n        direction=\"vertical\"\n        gutterSize={SQL_EDITOR_GUTTER_HEIGHT}\n        onDragStart={this.onResizeStart}\n        onDragEnd={this.onResizeEnd}\n      >\n        <div ref={this.northPaneRef} className=\"north-pane\">\n          <AceEditorWrapper\n            actions={this.props.actions}\n            autocomplete={this.state.autocompleteEnabled}\n            onBlur={this.setQueryEditorSql}\n            onChange={this.onSqlChanged}\n            queryEditor={this.props.queryEditor}\n            sql={this.props.queryEditor.sql}\n            schemas={this.props.queryEditor.schemaOptions}\n            tables={this.props.queryEditor.tableOptions}\n            functionNames={\n              this.props.database ? this.props.database.function_names : []\n            }\n            extendedTables={this.props.tables}\n            height={`${aceEditorHeight}px`}\n            hotkeys={hotkeys}\n          />\n          {this.renderEditorBottomBar(hotkeys)}\n        </div>\n        <SouthPane\n          editorQueries={this.props.editorQueries}\n          latestQueryId={this.props.latestQuery && this.props.latestQuery.id}\n          dataPreviewQueries={this.props.dataPreviewQueries}\n          actions={this.props.actions}\n          height={southPaneHeight}\n          displayLimit={this.props.displayLimit}\n        />\n      </Split>\n    );\n  }\n  renderEditorBottomBar(hotkeys) {\n    let ctasControls;\n    if (this.props.database && this.props.database.allow_ctas) {\n      const ctasToolTip = t('Create table as with query results');\n      ctasControls = (\n        <FormGroup>\n          <InputGroup>\n            <FormControl\n              type=\"text\"\n              bsSize=\"small\"\n              className=\"input-sm\"\n              placeholder={t('new table name')}\n              onChange={this.ctasChanged.bind(this)}\n            />\n            <InputGroup.Button>\n              <Button\n                bsSize=\"small\"\n                disabled={this.state.ctas.length === 0}\n                onClick={this.createTableAs.bind(this)}\n                tooltip={ctasToolTip}\n              >\n                <i className=\"fa fa-table\" /> CTAS\n              </Button>\n            </InputGroup.Button>\n          </InputGroup>\n        </FormGroup>\n      );\n    }\n    const qe = this.props.queryEditor;\n    let limitWarning = null;\n    if (\n      this.props.latestQuery &&\n      this.props.latestQuery.results &&\n      this.props.latestQuery.results.displayLimitReached\n    ) {\n      const tooltip = (\n        <Tooltip id=\"tooltip\">\n          {t(\n            `It appears that the number of rows in the query results displayed\n           was limited on the server side to\n           the %s limit.`,\n            this.props.latestQuery.rows,\n          )}\n        </Tooltip>\n      );\n      limitWarning = (\n        <OverlayTrigger placement=\"left\" overlay={tooltip}>\n          <Label bsStyle=\"warning\">LIMIT</Label>\n        </OverlayTrigger>\n      );\n    }\n    const successful =\n      this.props.latestQuery && this.props.latestQuery.state === 'success';\n    const scheduleToolTip = successful\n      ? t('Schedule the query periodically')\n      : t('You must run the query successfully first');\n    return (\n      <div className=\"sql-toolbar\" id=\"js-sql-toolbar\">\n        <div className=\"leftItems\">\n          <Form inline>\n            <span>\n              <RunQueryActionButton\n                allowAsync={\n                  this.props.database\n                    ? this.props.database.allow_run_async\n                    : false\n                }\n                dbId={qe.dbId}\n                queryState={\n                  this.props.latestQuery && this.props.latestQuery.state\n                }\n                runQuery={this.runQuery}\n                selectedText={qe.selectedText}\n                stopQuery={this.stopQuery}\n                sql={this.state.sql}\n              />\n            </span>\n            {isFeatureEnabled(FeatureFlag.ESTIMATE_QUERY_COST) &&\n              this.props.database &&\n              this.props.database.allows_cost_estimate && (\n                <span>\n                  <EstimateQueryCostButton\n                    dbId={qe.dbId}\n                    schema={qe.schema}\n                    sql={qe.sql}\n                    getEstimate={this.getQueryCostEstimate}\n                    queryCostEstimate={qe.queryCostEstimate}\n                    selectedText={qe.selectedText}\n                    tooltip={t('Estimate the cost before running a query')}\n                  />\n                </span>\n              )}\n            {isFeatureEnabled(FeatureFlag.SCHEDULED_QUERIES) && (\n              <span>\n                <ScheduleQueryButton\n                  defaultLabel={qe.title}\n                  sql={qe.sql}\n                  onSchedule={this.props.actions.scheduleQuery}\n                  schema={qe.schema}\n                  dbId={qe.dbId}\n                  scheduleQueryWarning={this.props.scheduleQueryWarning}\n                  tooltip={scheduleToolTip}\n                  disabled={!successful}\n                />\n              </span>\n            )}\n            <span>\n              <SaveQuery\n                query={qe}\n                defaultLabel={\n                  qe.description == null ? qe.title : qe.description\n                }\n                onSave={this.props.actions.saveQuery}\n                onUpdate={this.props.actions.updateSavedQuery}\n                saveQueryWarning={this.props.saveQueryWarning}\n              />\n            </span>\n            <span>\n              <ShareSqlLabQuery queryEditor={qe} />\n            </span>\n            {ctasControls && <span>{ctasControls}</span>}\n            <span>\n              <LimitControl\n                value={\n                  this.props.queryEditor.queryLimit !== undefined\n                    ? this.props.queryEditor.queryLimit\n                    : this.props.defaultQueryLimit\n                }\n                defaultQueryLimit={this.props.defaultQueryLimit}\n                maxRow={this.props.maxRow}\n                onChange={this.setQueryLimit.bind(this)}\n              />\n            </span>\n            <span>\n              <Hotkeys header={t('Keyboard shortcuts')} hotkeys={hotkeys} />\n            </span>\n          </Form>\n        </div>\n        <div className=\"rightItems\">\n          <Button\n            className=\"autocomplete\"\n            onClick={this.handleToggleAutocompleteEnabled}\n          >\n            <Checkbox checked={this.state.autocompleteEnabled} />{' '}\n            {t('Autocomplete')}\n          </Button>{' '}\n          <TemplateParamsEditor\n            language=\"json\"\n            onChange={params => {\n              this.props.actions.queryEditorSetTemplateParams(qe, params);\n            }}\n            code={qe.templateParams}\n          />\n          {limitWarning}\n          {this.props.latestQuery && (\n            <Timer\n              startTime={this.props.latestQuery.startDttm}\n              endTime={this.props.latestQuery.endDttm}\n              state={STATE_BSSTYLE_MAP[this.props.latestQuery.state]}\n              isRunning={this.props.latestQuery.state === 'running'}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n  render() {\n    return (\n      <div ref={this.sqlEditorRef} className=\"SqlEditor\">\n        <CSSTransition\n          classNames=\"schemaPane\"\n          in={!this.props.hideLeftBar}\n          timeout={300}\n        >\n          <div className=\"schemaPane\">\n            <SqlEditorLeftBar\n              database={this.props.database}\n              queryEditor={this.props.queryEditor}\n              tables={this.props.tables}\n              actions={this.props.actions}\n            />\n          </div>\n        </CSSTransition>\n        {this.queryPane()}\n      </div>\n    );\n  }\n}\nSqlEditor.defaultProps = defaultProps;\nSqlEditor.propTypes = propTypes;\n\nexport default SqlEditor;\n"]},"metadata":{},"sourceType":"module"}
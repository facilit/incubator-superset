{"ast":null,"code":"import \"core-js/modules/es.string.split\";import \"core-js/modules/web.dom-collections.iterator\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * to you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * with the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * under the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CreatableSelect } from 'src/components/Select';\nimport { Button } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport DateFilterControl from '../../explore/components/controls/DateFilterControl';\nimport ControlRow from '../../explore/components/ControlRow';\nimport Control from '../../explore/components/Control';\nimport controls from '../../explore/controls';\nimport OnPasteSelect from '../../components/Select/OnPasteSelect';\nimport { getDashboardFilterKey } from '../../dashboard/util/getDashboardFilterKey';\nimport { getFilterColorMap } from '../../dashboard/util/dashboardFiltersColorMap';\nimport {\nFILTER_CONFIG_ATTRIBUTES,\nTIME_FILTER_LABELS } from\n'../../explore/constants';\nimport FilterBadgeIcon from '../../components/FilterBadgeIcon';\n\nimport './FilterBox.less';\n\n// maps control names to their key in extra_filters\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";export const TIME_FILTER_MAP = {\n  time_range: '__time_range',\n  granularity_sqla: '__time_col',\n  time_grain_sqla: '__time_grain',\n  druid_time_origin: '__time_origin',\n  granularity: '__granularity' };\n\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n  PropTypes.shape({\n    field: PropTypes.string,\n    label: PropTypes.string })),\n\n\n  filtersChoices: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    filter: PropTypes.string,\n    metric: PropTypes.number }))),\n\n\n\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool };\n\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false };\n\n\nclass FilterBox extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false };\n\n    this.changeFilter = _bindInstanceProperty(_context = this.changeFilter).call(_context, this);\n    this.onFilterMenuOpen = _bindInstanceProperty(_context2 = this.onFilterMenuOpen).call(_context2, this);\n    this.onOpenDateFilterControl = _bindInstanceProperty(_context3 = this.onOpenDateFilterControl).call(_context3, this);\n    this.onFilterMenuClose = _bindInstanceProperty(_context4 = this.onFilterMenuClose).call(_context4, this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onFilterMenuClose() {\n    return this.props.onFilterMenuClose(this.props.chartId);\n  }\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = _Object$assign({},\n    controls[controlName], { // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: \"control-\" + controlName,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter } });\n\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? _Object$assign({}, control, {}, mapFunc(this.props)) : control;\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (_Array$isArray(options)) {\n        vals = _mapInstanceProperty(options).call(options, opt => opt.value);\n      } else if (options.value) {\n        vals = options.value;\n      } else {\n        vals = options;\n      }\n    }\n    const selectedValues = _Object$assign({},\n    this.state.selectedValues, {\n      [fltr]: vals });\n\n\n    this.setState({ selectedValues, hasChanged: true }, () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n  }\n\n  renderDateFilter() {\n    const { showDateFilter, chartId } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        ___EmotionJSX(\"div\", { className: \"row space-1\" },\n        ___EmotionJSX(\"div\", { className: \"col-lg-12 col-xs-12 filter-container\" },\n        this.renderFilterBadge(chartId, TIME_RANGE, label),\n        ___EmotionJSX(DateFilterControl, {\n          name: TIME_RANGE,\n          label: label,\n          description: t('Select start and end date'),\n          onChange: newValue => {\n            this.changeFilter(TIME_RANGE, newValue);\n          },\n          onOpenDateFilterControl: this.onOpenDateFilterControl,\n          onCloseDateFilterControl: this.onFilterMenuClose,\n          value: this.state.selectedValues[TIME_RANGE] || 'No filter' }))));\n\n\n\n\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin } =\n    this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"sqla-filters\",\n        className: \"control-row\",\n        controls: _mapInstanceProperty(sqlaFilters).call(sqlaFilters, (control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"druid-filters\",\n        className: \"control-row\",\n        controls: _mapInstanceProperty(druidFilters).call(druidFilters, (control) =>\n        ___EmotionJSX(Control, this.getControlData(control))) }));\n\n\n\n    }\n    return datasourceFilters;\n  }\n  renderSelect(filterConfig) {var _context5, _context6, _context8;\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    _forEachInstanceProperty(_context5 = _filterInstanceProperty(_context6 = _Object$keys(selectedValues)).call(_context6,\n\n    key => selectedValues.hasOwnProperty(key) && key in filtersChoices)).call(_context5,\n\n    key => {var _context7;\n      const choices = filtersChoices[key] || [];\n      const choiceIds = new _Set(_mapInstanceProperty(choices).call(choices, f => f.id));\n      const selectedValuesForKey = _Array$isArray(selectedValues[key]) ?\n      selectedValues[key] :\n      [selectedValues[key]];\n      _forEachInstanceProperty(_context7 = _filterInstanceProperty(selectedValuesForKey).call(selectedValuesForKey,\n      value => !choiceIds.has(value))).call(_context7,\n      value => {\n        choices.unshift({\n          filter: key,\n          id: value,\n          text: value,\n          metric: 0 });\n\n      });\n    });\n    const { key, label } = filterConfig;\n    const data = this.props.filtersChoices[key];\n    const max = Math.max(..._mapInstanceProperty(data).call(data, d => d.metric));\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (\n    value === undefined &&\n    filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE])\n    {\n      if (filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE]) {\n        // Support for semicolon-delimited multiple values\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE].split(';');\n      } else {\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE];\n      }\n    }\n\n    return (\n      ___EmotionJSX(OnPasteSelect, {\n        key: key,\n        placeholder: t('Select [%s]', label),\n        isMulti: filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE],\n        isClearable: filterConfig.clearable,\n        value: value,\n        options: _mapInstanceProperty(_context8 = _filterInstanceProperty(data).call(data,\n        opt => opt.id !== null)).call(_context8,\n        opt => {\n          const perc = Math.round(opt.metric / max * 100);\n          const color = 'lightgrey';\n          const backgroundImage = \"linear-gradient(to right, \" + color + \", \" + color + \" \" + perc + \"%, rgba(0,0,0,0) \" + perc + \"%\";\n          const style = { backgroundImage };\n          return { value: opt.id, label: opt.id, style };\n        }),\n        onChange: newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        },\n        onFocus: () => this.onFilterMenuOpen(key),\n        onMenuOpen: () => this.onFilterMenuOpen(key),\n        onBlur: this.onFilterMenuClose,\n        onMenuClose: this.onFilterMenuClose,\n        selectWrap: CreatableSelect,\n        noResultsText: t('No results found') }));\n\n\n  }\n\n  renderFilters() {\n    const { filtersFields, chartId } = this.props;\n    return _mapInstanceProperty(filtersFields).call(filtersFields, filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        ___EmotionJSX(\"div\", { key: key, className: \"m-b-5 filter-container\" },\n        this.renderFilterBadge(chartId, key, label),\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(\"label\", { htmlFor: \"LABEL-\" + key }, label),\n        this.renderSelect(filterConfig))));\n\n\n\n    });\n  }\n\n  renderFilterBadge(chartId, column) {\n    const colorKey = getDashboardFilterKey({ chartId, column });\n    const filterColorMap = getFilterColorMap();\n    const colorCode = filterColorMap[colorKey];\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"filter-badge-container\" },\n      ___EmotionJSX(FilterBadgeIcon, { colorCode: colorCode })));\n\n\n  }\n\n  render() {var _context9;\n    const { instantFiltering } = this.props;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"scrollbar-container\" },\n      ___EmotionJSX(\"div\", { className: \"scrollbar-content\" },\n      this.renderDateFilter(),\n      this.renderDatasourceFilters(),\n      this.renderFilters(),\n      !instantFiltering &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        bsStyle: \"primary\",\n        onClick: _bindInstanceProperty(_context9 = this.clickApply).call(_context9, this),\n        disabled: !this.state.hasChanged },\n\n      t('Apply')))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;const _default =\n\nFilterBox;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_FILTER_MAP, \"TIME_FILTER_MAP\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(TIME_RANGE, \"TIME_RANGE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(FilterBox, \"FilterBox\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
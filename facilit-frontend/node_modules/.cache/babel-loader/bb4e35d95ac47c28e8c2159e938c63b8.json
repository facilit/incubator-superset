{"ast":null,"code":"import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup } from 'react-bootstrap';\nimport { Select, Creatable } from 'src/components/Select';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\n\nimport AdhocFilter, { EXPRESSION_TYPES, CLAUSES } from '../AdhocFilter';\nimport adhocMetricType from '../propTypes/adhocMetricType';\nimport columnType from '../propTypes/columnType';\nimport {\nOPERATORS,\nOPERATORS_OPTIONS,\nTABLE_ONLY_OPERATORS,\nDRUID_ONLY_OPERATORS,\nHAVING_OPERATORS,\nMULTI_OPERATORS,\nCUSTOM_OPERATORS,\nDISABLE_INPUT_OPERATORS } from\n'../constants';\nimport FilterDefinitionOption from './FilterDefinitionOption';\nimport SelectControl from './controls/SelectControl';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n  PropTypes.oneOfType([\n  columnType,\n  PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n  adhocMetricType])).\n\n  isRequired,\n  onHeightChange: PropTypes.func.isRequired,\n  datasource: PropTypes.object,\n  partitionColumn: PropTypes.string };\n\n\nconst defaultProps = {\n  datasource: {} };\n\n\nfunction translateOperator(operator) {\n  if (operator === OPERATORS['==']) {\n    return 'equals';\n  } else if (operator === OPERATORS['!=']) {\n    return 'not equal to';\n  } else if (operator === OPERATORS.LIKE) {\n    return 'like';\n  } else if (operator === OPERATORS['LATEST PARTITION']) {\n    return 'use latest_partition template';\n  }\n  return operator;\n}\n\nconst SINGLE_LINE_SELECT_CONTROL_HEIGHT = 30;\n\nexport default class AdhocFilterEditPopoverSimpleTabContent extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n    super(props);\n    this.onSubjectChange = _bindInstanceProperty(_context = this.onSubjectChange).call(_context, this);\n    this.onOperatorChange = _bindInstanceProperty(_context2 = this.onOperatorChange).call(_context2, this);\n    this.onComparatorChange = _bindInstanceProperty(_context3 = this.onComparatorChange).call(_context3, this);\n    this.onInputComparatorChange = _bindInstanceProperty(_context4 = this.onInputComparatorChange).call(_context4, this);\n    this.isOperatorRelevant = _bindInstanceProperty(_context5 = this.isOperatorRelevant).call(_context5, this);\n    this.refreshComparatorSuggestions = _bindInstanceProperty(_context6 = this.refreshComparatorSuggestions).call(_context6,\n    this);\n\n    this.multiComparatorRef = _bindInstanceProperty(_context7 = this.multiComparatorRef).call(_context7, this);\n\n    this.state = {\n      suggestions: [],\n      multiComparatorHeight: SINGLE_LINE_SELECT_CONTROL_HEIGHT,\n      abortActiveRequest: null };\n\n\n    this.selectProps = {\n      isMulti: false,\n      name: 'select-column',\n      labelKey: 'label',\n      autosize: false,\n      clearable: false };\n\n  }\n\n  UNSAFE_componentWillMount() {\n    this.refreshComparatorSuggestions();\n  }\n\n  componentDidMount() {\n    this.handleMultiComparatorInputHeightChange();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.adhocFilter.subject !== this.props.adhocFilter.subject) {\n      this.refreshComparatorSuggestions();\n    }\n    this.handleMultiComparatorInputHeightChange();\n  }\n\n  onSubjectChange(option) {\n    let subject;\n    let clause;\n    // infer the new clause based on what subject was selected.\n    if (option && option.column_name) {\n      subject = option.column_name;\n      clause = CLAUSES.WHERE;\n    } else if (option && (option.saved_metric_name || option.label)) {\n      subject = option.saved_metric_name || option.label;\n      clause = CLAUSES.HAVING;\n    }\n    const { operator } = this.props.adhocFilter;\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      subject,\n      clause,\n      operator:\n      operator && this.isOperatorRelevant(operator, subject) ?\n      operator :\n      null,\n      expressionType: EXPRESSION_TYPES.SIMPLE }));\n\n\n  }\n\n  onOperatorChange(operator) {\n    const currentComparator = this.props.adhocFilter.comparator;\n    let newComparator;\n    // convert between list of comparators and individual comparators\n    // (e.g. `in ('North America', 'Africa')` to `== 'North America'`)\n    if (MULTI_OPERATORS.has(operator)) {var _context8;\n      newComparator = _Array$isArray(currentComparator) ?\n      currentComparator :\n      _filterInstanceProperty(_context8 = [currentComparator]).call(_context8, element => element);\n    } else {\n      newComparator = _Array$isArray(currentComparator) ?\n      currentComparator[0] :\n      currentComparator;\n    }\n\n    if (operator && CUSTOM_OPERATORS.has(operator)) {\n      this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        subject: this.props.adhocFilter.subject,\n        clause: CLAUSES.WHERE,\n        operator,\n        expressionType: EXPRESSION_TYPES.SQL,\n        datasource: this.props.datasource }));\n\n\n    } else {\n      this.props.onChange(\n      this.props.adhocFilter.duplicateWith({\n        operator,\n        comparator: newComparator,\n        expressionType: EXPRESSION_TYPES.SIMPLE }));\n\n\n    }\n  }\n\n  onInputComparatorChange(event) {\n    this.onComparatorChange(event.target.value);\n  }\n\n  onComparatorChange(comparator) {\n    this.props.onChange(\n    this.props.adhocFilter.duplicateWith({\n      comparator,\n      expressionType: EXPRESSION_TYPES.SIMPLE }));\n\n\n  }\n\n  handleMultiComparatorInputHeightChange() {\n    if (this.multiComparatorComponent) {var _this$multiComparator, _this$multiComparator2;\n      const multiComparatorDOMNode = (_this$multiComparator = this.multiComparatorComponent) === null || _this$multiComparator === void 0 ? void 0 : (_this$multiComparator2 = _this$multiComparator.select) === null || _this$multiComparator2 === void 0 ? void 0 : _this$multiComparator2.\n      select.controlRef;\n      if (multiComparatorDOMNode) {\n        if (\n        multiComparatorDOMNode.clientHeight !==\n        this.state.multiComparatorHeight)\n        {\n          this.props.onHeightChange(\n          multiComparatorDOMNode.clientHeight -\n          this.state.multiComparatorHeight);\n\n          this.setState({\n            multiComparatorHeight: multiComparatorDOMNode.clientHeight });\n\n        }\n      }\n    }\n  }\n\n  refreshComparatorSuggestions() {\n    const datasource = this.props.datasource;\n    const col = this.props.adhocFilter.subject;\n    const having = this.props.adhocFilter.clause === CLAUSES.HAVING;\n\n    if (col && datasource && datasource.filter_select && !having) {\n      if (this.state.abortActiveRequest) {\n        this.state.abortActiveRequest();\n      }\n\n      const controller = new AbortController();\n      const { signal } = controller;\n      this.setState({ abortActiveRequest: controller.abort, loading: true });\n\n      SupersetClient.get({\n        signal,\n        endpoint: \"/superset/filter/\" + datasource.type + \"/\" + datasource.id + \"/\" + col + \"/\" }).\n\n      then(({ json }) => {\n        this.setState(() => ({\n          suggestions: json,\n          abortActiveRequest: null,\n          loading: false }));\n\n      }).\n      catch(error => {\n        this.setState(() => ({\n          suggestions: [],\n          abortActiveRequest: null,\n          loading: false }));\n\n      });\n    }\n  }\n\n  isOperatorRelevant(operator, subject) {\n    if (operator && CUSTOM_OPERATORS.has(operator)) {\n      const { partitionColumn } = this.props;\n      return partitionColumn && subject && subject === partitionColumn;\n    }\n\n    return !(\n    this.props.datasource.type === 'druid' &&\n    _indexOfInstanceProperty(TABLE_ONLY_OPERATORS).call(TABLE_ONLY_OPERATORS, operator) >= 0 ||\n    this.props.datasource.type === 'table' &&\n    _indexOfInstanceProperty(DRUID_ONLY_OPERATORS).call(DRUID_ONLY_OPERATORS, operator) >= 0 ||\n    this.props.adhocFilter.clause === CLAUSES.HAVING &&\n    _indexOfInstanceProperty(HAVING_OPERATORS).call(HAVING_OPERATORS, operator) === -1);\n\n  }\n\n  focusComparator(ref) {\n    if (ref) {\n      ref.focus();\n    }\n  }\n\n  multiComparatorRef(ref) {\n    if (ref) {\n      this.multiComparatorComponent = ref;\n    }\n  }\n\n  renderSubjectOptionLabel(option) {\n    return ___EmotionJSX(FilterDefinitionOption, { option: option });\n  }\n\n  renderSubjectOptionValue({ value }) {\n    return ___EmotionJSX(\"span\", null, value);\n  }\n\n  render() {\n    const { adhocFilter, options: columns, datasource } = this.props;\n    const { subject, operator, comparator } = adhocFilter;\n    const subjectSelectProps = {\n      options: columns,\n      value: subject ? { value: subject } : undefined,\n      onChange: this.onSubjectChange,\n      optionRenderer: this.renderSubjectOptionLabel,\n      valueRenderer: this.renderSubjectOptionValue,\n      valueKey: 'filterOptionName',\n      noResultsText: t(\n      'No such column found. To filter on a metric, try the Custom SQL tab.') };\n\n\n\n    if (datasource.type === 'druid') {\n      subjectSelectProps.placeholder = t(\n      '%s column(s) and metric(s)',\n      columns.length);\n\n    } else {\n      // we cannot support simple ad-hoc filters for metrics because we don't know what type\n      // the value should be cast to (without knowing the output type of the aggregate, which\n      // becomes a rather complicated problem)\n      subjectSelectProps.placeholder =\n      adhocFilter.clause === CLAUSES.WHERE ?\n      t('%s column(s)', columns.length) :\n      t('To filter on a metric, use Custom SQL tab.');\n      // make sure options have `column_name`\n      subjectSelectProps.options = _filterInstanceProperty(columns).call(columns, option => option.column_name);\n    }\n\n    const operatorSelectProps = {\n      placeholder: t('%s operators(s)', OPERATORS_OPTIONS.length),\n      // like AGGREGTES_OPTIONS, operator options are string\n      options: _filterInstanceProperty(OPERATORS_OPTIONS).call(OPERATORS_OPTIONS, (op) =>\n      this.isOperatorRelevant(op, subject)),\n\n      value: operator,\n      onChange: this.onOperatorChange,\n      getOptionLabel: translateOperator };\n\n\n    return (\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(FormGroup, { className: \"adhoc-filter-simple-column-dropdown\" },\n      ___EmotionJSX(Select, _extends({},\n      this.selectProps,\n      subjectSelectProps, {\n        name: \"filter-column\" }))),\n\n\n      ___EmotionJSX(FormGroup, null,\n      ___EmotionJSX(Select, _extends({},\n      this.selectProps,\n      operatorSelectProps, {\n        name: \"filter-operator\" }))),\n\n\n      ___EmotionJSX(FormGroup, { \"data-test\": \"adhoc-filter-simple-value\" },\n      MULTI_OPERATORS.has(operator) ||\n      this.state.suggestions.length > 0 ?\n      ___EmotionJSX(SelectControl, {\n        name: \"filter-value\",\n        autoFocus: true,\n        freeForm: true,\n        multi: MULTI_OPERATORS.has(operator),\n        value: comparator,\n        isLoading: this.state.loading,\n        choices: this.state.suggestions,\n        onChange: this.onComparatorChange,\n        showHeader: false,\n        noResultsText: t('type a value here'),\n        selectRef: this.multiComparatorRef,\n        disabled: _includesInstanceProperty(DISABLE_INPUT_OPERATORS).call(DISABLE_INPUT_OPERATORS, operator) }) :\n\n\n      ___EmotionJSX(\"input\", {\n        name: \"filter-value\",\n        ref: this.focusComparator,\n        type: \"text\",\n        onChange: this.onInputComparatorChange,\n        value: comparator,\n        className: \"form-control input-sm\",\n        placeholder: t('Filter value'),\n        disabled: _includesInstanceProperty(DISABLE_INPUT_OPERATORS).call(DISABLE_INPUT_OPERATORS, operator) }))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}AdhocFilterEditPopoverSimpleTabContent.propTypes = propTypes;\nAdhocFilterEditPopoverSimpleTabContent.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/AdhocFilterEditPopoverSimpleTabContent.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/AdhocFilterEditPopoverSimpleTabContent.jsx\");reactHotLoader.register(translateOperator, \"translateOperator\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/AdhocFilterEditPopoverSimpleTabContent.jsx\");reactHotLoader.register(SINGLE_LINE_SELECT_CONTROL_HEIGHT, \"SINGLE_LINE_SELECT_CONTROL_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/AdhocFilterEditPopoverSimpleTabContent.jsx\");reactHotLoader.register(AdhocFilterEditPopoverSimpleTabContent, \"AdhocFilterEditPopoverSimpleTabContent\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/AdhocFilterEditPopoverSimpleTabContent.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
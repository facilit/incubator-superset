{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * distributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FilterIndicators from '../../containers/FilterIndicators';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from '../../util/componentTypes';\n\nimport {\nGRID_MIN_COLUMN_COUNT,\nGRID_MIN_ROW_UNITS,\nGRID_BASE_UNIT,\nGRID_GUTTER_SIZE } from\n'../../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0 };\n\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      ___EmotionJSX(\"style\", { __source: { fileName: _jsxFileName, lineNumber: 75 }, __self: this }, \"label[for=\" +\n      columnName + \"] + .Select .Select__control {\\n                    border-color: #00736a;\\n                    transition: border-color 1s ease-in-out;\\n           }\"));\n\n\n\n\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId } =\n    getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n    directPathLastUpdated !== state.directPathLastUpdated &&\n    component.id === chartComponentId)\n    {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated };\n\n    }\n    return null;\n  }\n\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0 };\n\n\n    this.handleChangeFocus = _bindInstanceProperty(_context = this.handleChangeFocus).call(_context, this);\n    this.handleDeleteComponent = _bindInstanceProperty(_context2 = this.handleDeleteComponent).call(_context2, this);\n    this.handleUpdateSliceName = _bindInstanceProperty(_context3 = this.handleUpdateSliceName).call(_context3, this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      _setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null }));\n\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: _Object$assign({},\n      component, {\n        meta: _Object$assign({},\n        component.meta, {\n          sliceName: nextName }) }) });\n\n\n\n  }\n\n  render() {\n    const { isFocused } = this.state;\n\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId } =\n    this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n    parentComponent.type === COLUMN_TYPE ?\n    parentComponent.meta.width || GRID_MIN_COLUMN_COUNT :\n    component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row',\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        disableDragDrop: isFocused,\n        editMode: editMode, __source: { fileName: _jsxFileName, lineNumber: 189 }, __self: this },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(ResizableContainer, {\n        id: component.id,\n        adjustableWidth: parentComponent.type === ROW_TYPE,\n        adjustableHeight: true,\n        widthStep: columnWidth,\n        widthMultiple: widthMultiple,\n        heightStep: GRID_BASE_UNIT,\n        heightMultiple: component.meta.height,\n        minWidthMultiple: GRID_MIN_COLUMN_COUNT,\n        minHeightMultiple: GRID_MIN_ROW_UNITS,\n        maxWidthMultiple: availableColumnCount + widthMultiple,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        editMode: editMode, __source: { fileName: _jsxFileName, lineNumber: 200 }, __self: this },\n\n      ___EmotionJSX(\"div\", {\n        ref: dragSourceRef,\n        className: \"dashboard-component dashboard-component-chart-holder \" + (\n        this.state.outlinedComponentId ? 'fade-in' : 'fade-out'), __source: { fileName: _jsxFileName, lineNumber: 216 }, __self: this },\n\n\n      !editMode &&\n      ___EmotionJSX(AnchorLink, {\n        anchorLinkId: component.id,\n        inFocus: !!this.state.outlinedComponentId, __source: { fileName: _jsxFileName, lineNumber: 223 }, __self: this }),\n\n\n      !!this.state.outlinedComponentId &&\n      ChartHolder.renderInFocusCSS(this.state.outlinedColumnName),\n      ___EmotionJSX(Chart, {\n        componentId: component.id,\n        id: component.meta.chartId,\n        dashboardId: dashboardId,\n        width: Math.floor(\n        widthMultiple * columnWidth +\n        (widthMultiple - 1) * GRID_GUTTER_SIZE -\n        CHART_MARGIN),\n\n        height: Math.floor(\n        component.meta.height * GRID_BASE_UNIT - CHART_MARGIN),\n\n        sliceName: component.meta.sliceName || '',\n        updateSliceName: this.handleUpdateSliceName,\n        isComponentVisible: isComponentVisible, __source: { fileName: _jsxFileName, lineNumber: 230 }, __self: this }),\n\n      !editMode &&\n      ___EmotionJSX(FilterIndicators, { chartId: component.meta.chartId, __source: { fileName: _jsxFileName, lineNumber: 247 }, __self: this }),\n\n      editMode &&\n      ___EmotionJSX(HoverMenu, { position: \"top\", __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this },\n      ___EmotionJSX(DeleteComponentButton, {\n        onDelete: this.handleDeleteComponent, __source: { fileName: _jsxFileName, lineNumber: 251 }, __self: this }))),\n\n\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", _extends({}, dropIndicatorProps, { __source: { fileName: _jsxFileName, lineNumber: 258 }, __self: this })))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;const _default =\n\nChartHolder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_MARGIN, \"CHART_MARGIN\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(ChartHolder, \"ChartHolder\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx"],"names":["React","PropTypes","FilterIndicators","Chart","AnchorLink","DeleteComponentButton","DragDroppable","HoverMenu","ResizableContainer","getChartAndLabelComponentIdFromPath","componentShape","ROW_TYPE","COLUMN_TYPE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","GRID_BASE_UNIT","GRID_GUTTER_SIZE","CHART_MARGIN","propTypes","id","string","isRequired","parentId","dashboardId","number","component","parentComponent","index","depth","editMode","bool","directPathToChild","arrayOf","directPathLastUpdated","availableColumnCount","columnWidth","onResizeStart","func","onResize","onResizeStop","deleteComponent","updateComponents","handleComponentDrop","defaultProps","ChartHolder","Component","renderInFocusCSS","columnName","getDerivedStateFromProps","props","state","label","chart","chartComponentId","outlinedComponentId","outlinedColumnName","constructor","isFocused","handleChangeFocus","handleDeleteComponent","handleUpdateSliceName","componentDidMount","hideOutline","componentDidUpdate","prevProps","prevState","timerKey","prevTimerKey","setState","nextFocus","nextName","meta","sliceName","render","isComponentVisible","widthMultiple","type","width","dropIndicatorProps","dragSourceRef","height","chartId","Math","floor"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FilterIndicators from '../../containers/FilterIndicators';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from '../../util/componentTypes';\n\nimport {\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n  GRID_BASE_UNIT,\n  GRID_GUTTER_SIZE,\n} from '../../util/constants';\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n};\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      <style>\n        {`label[for=${columnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n           }`}\n      </style>\n    );\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId,\n    } = getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n      directPathLastUpdated !== state.directPathLastUpdated &&\n      component.id === chartComponentId\n    ) {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0,\n    };\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateSliceName = this.handleUpdateSliceName.bind(this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null,\n        }));\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceName: nextName,\n        },\n      },\n    });\n  }\n\n  render() {\n    const { isFocused } = this.state;\n\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId,\n    } = this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n      parentComponent.type === COLUMN_TYPE\n        ? parentComponent.meta.width || GRID_MIN_COLUMN_COUNT\n        : component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        disableDragDrop={isFocused}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <ResizableContainer\n            id={component.id}\n            adjustableWidth={parentComponent.type === ROW_TYPE}\n            adjustableHeight\n            widthStep={columnWidth}\n            widthMultiple={widthMultiple}\n            heightStep={GRID_BASE_UNIT}\n            heightMultiple={component.meta.height}\n            minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n            minHeightMultiple={GRID_MIN_ROW_UNITS}\n            maxWidthMultiple={availableColumnCount + widthMultiple}\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            editMode={editMode}\n          >\n            <div\n              ref={dragSourceRef}\n              className={`dashboard-component dashboard-component-chart-holder ${\n                this.state.outlinedComponentId ? 'fade-in' : 'fade-out'\n              }`}\n            >\n              {!editMode && (\n                <AnchorLink\n                  anchorLinkId={component.id}\n                  inFocus={!!this.state.outlinedComponentId}\n                />\n              )}\n              {!!this.state.outlinedComponentId &&\n                ChartHolder.renderInFocusCSS(this.state.outlinedColumnName)}\n              <Chart\n                componentId={component.id}\n                id={component.meta.chartId}\n                dashboardId={dashboardId}\n                width={Math.floor(\n                  widthMultiple * columnWidth +\n                    (widthMultiple - 1) * GRID_GUTTER_SIZE -\n                    CHART_MARGIN,\n                )}\n                height={Math.floor(\n                  component.meta.height * GRID_BASE_UNIT - CHART_MARGIN,\n                )}\n                sliceName={component.meta.sliceName || ''}\n                updateSliceName={this.handleUpdateSliceName}\n                isComponentVisible={isComponentVisible}\n              />\n              {!editMode && (\n                <FilterIndicators chartId={component.meta.chartId} />\n              )}\n              {editMode && (\n                <HoverMenu position=\"top\">\n                  <DeleteComponentButton\n                    onDelete={this.handleDeleteComponent}\n                  />\n                </HoverMenu>\n              )}\n            </div>\n\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </ResizableContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;\n\nexport default ChartHolder;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _objectWithoutPropertiesLoose from \"@babel/runtime-corejs3/helpers/objectWithoutPropertiesLoose\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _merge from \"lodash/merge\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * \"License\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * with the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *\nnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\n\nimport BasicSelect, { components as defaultComponents, createFilter } from 'react-select';\nimport { withAsyncPaginate } from 'react-select-async-paginate';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { WindowedSelect, WindowedAsyncSelect, WindowedCreatableSelect, WindowedAsyncCreatableSelect } from './WindowedSelect';\nimport { DEFAULT_CLASS_NAME, DEFAULT_CLASS_NAME_PREFIX, DEFAULT_STYLES, DEFAULT_THEME, DEFAULT_COMPONENTS, VALUE_LABELED_STYLES } from './styles';\nimport { findValue } from './utils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nfunction styled(SelectComponent) {\n  const SortableSelectComponent = SortableContainer(SelectComponent, {\n    withRef: true });\n\n  // default components for the given OptionType\n  const supersetDefaultComponents = DEFAULT_COMPONENTS;\n  const getSortableMultiValue = MultiValue => {\n    return SortableElement(props => {\n      const onMouseDown = e => {\n        e.preventDefault();\n        e.stopPropagation();\n      };\n      const innerProps = { onMouseDown };\n      return ___EmotionJSX(MultiValue, _extends({}, props, { innerProps: innerProps }));\n    });\n  };\n  /**\n      * Superset styled `Select` component. Apply Superset themed stylesheets and\n      * consolidate props API for backward compatibility with react-select v1.\n      */\n  function StyledSelect(selectProps) {\n    let stateManager; // reference to react-select StateManager\n    const {\n      // additional props for Superset Select\n      selectRef, labelKey = 'label', valueKey = 'value', themeConfig, stylesConfig = {}, optionRenderer, valueRenderer,\n      // whether value is rendered as `option-label` in input,\n      // useful for AdhocMetric and AdhocFilter\n      valueRenderedAsLabel: valueRenderedAsLabel_, onPaste, multi = false, // same as `isMulti`, used for backward compatibility\n      clearable, // same as `isClearable`\n      sortable = true, // whether to enable drag & drop sorting\n      // react-select props\n      className = DEFAULT_CLASS_NAME, classNamePrefix = DEFAULT_CLASS_NAME_PREFIX, options, value: value_, components: components_, isMulti: isMulti_, isClearable: isClearable_, minMenuHeight = 100, // apply different defaults\n      maxMenuHeight = 220, filterOption, ignoreAccents = false, // default is `true`, but it is slow\n      getOptionValue = option => typeof option === 'string' ? option : option[valueKey], getOptionLabel = option => typeof option === 'string' ?\n      option :\n      option[labelKey] || option[valueKey], formatOptionLabel = (option, { context }) => {\n        if (context === 'value') {\n          return valueRenderer ? valueRenderer(option) : getOptionLabel(option);\n        }\n        return optionRenderer ? optionRenderer(option) : getOptionLabel(option);\n      } } = selectProps,restProps = _objectWithoutPropertiesLoose(selectProps, [\"selectRef\", \"labelKey\", \"valueKey\", \"themeConfig\", \"stylesConfig\", \"optionRenderer\", \"valueRenderer\", \"valueRenderedAsLabel\", \"onPaste\", \"multi\", \"clearable\", \"sortable\", \"className\", \"classNamePrefix\", \"options\", \"value\", \"components\", \"isMulti\", \"isClearable\", \"minMenuHeight\", \"maxMenuHeight\", \"filterOption\", \"ignoreAccents\", \"getOptionValue\", \"getOptionLabel\", \"formatOptionLabel\"]);\n    // `value` may be rendered values (strings), we want option objects\n    const value = findValue(value_, options || [], valueKey);\n    // Add backward compability to v1 API\n    const isMulti = isMulti_ === undefined ? multi : isMulti_;\n    const isClearable = isClearable_ === undefined ? clearable : isClearable_;\n    // Sort is only applied when there are multiple selected values\n    const shouldAllowSort = isMulti && sortable && _Array$isArray(value) && value.length > 1;\n    const MaybeSortableSelect = shouldAllowSort ?\n    SortableSelectComponent :\n    SelectComponent;\n    const components = _Object$assign({}, supersetDefaultComponents, {}, components_);\n    // Make multi-select sortable as per https://react-select.netlify.app/advanced\n    if (shouldAllowSort) {\n      components.MultiValue = getSortableMultiValue(components.MultiValue || defaultComponents.MultiValue);\n      const sortableContainerProps = {\n        getHelperDimensions: ({ node }) => node.getBoundingClientRect(),\n        axis: 'xy',\n        onSortEnd: ({ oldIndex, newIndex }) => {\n          const newValue = arrayMove(value, oldIndex, newIndex);\n          if (restProps.onChange) {\n            restProps.onChange(newValue, { action: 'set-value' });\n          }\n        },\n        distance: 4 };\n\n      _Object$assign(restProps, sortableContainerProps);\n    }\n    // When values are rendered as labels, adjust valueContainer padding\n    const valueRenderedAsLabel = valueRenderedAsLabel_ === undefined ? isMulti : valueRenderedAsLabel_;\n    if (valueRenderedAsLabel && !stylesConfig.valueContainer) {\n      _Object$assign(stylesConfig, VALUE_LABELED_STYLES);\n    }\n    // Handle onPaste event\n    if (onPaste) {\n      const Input = components.Input || defaultComponents.Input;\n      // @ts-ignore (needed for passing `onPaste`)\n      components.Input = props => ___EmotionJSX(Input, _extends({}, props, { onPaste: onPaste }));\n    }\n    // for CreaTable\n    if (SelectComponent === WindowedCreatableSelect) {\n      restProps.getNewOptionData = (inputValue, label) => ({\n        label: label || inputValue,\n        [valueKey]: inputValue,\n        isNew: true });\n\n    }\n    // Make sure always return StateManager for the refs.\n    // To get the real `Select` component, keep tap into `obj.select`:\n    //   - for normal <Select /> component: StateManager -> Select,\n    //   - for <Creatable />: StateManager -> Creatable -> Select\n    const setRef = instance => {\n      stateManager =\n      shouldAllowSort && instance && 'refs' in instance ?\n      instance.refs.wrappedInstance // obtain StateManger from SortableContainer\n      : instance;\n      if (typeof selectRef === 'function') {\n        selectRef(stateManager);\n      } else\n      if (selectRef && 'current' in selectRef) {\n        selectRef.current = stateManager;\n      }\n    };\n    return ___EmotionJSX(MaybeSortableSelect, _extends({ ref: setRef, className: className, classNamePrefix: classNamePrefix, isMulti: isMulti, isClearable: isClearable, options: options, value: value, minMenuHeight: minMenuHeight, maxMenuHeight: maxMenuHeight, filterOption:\n      // filterOption may be NULL\n      filterOption !== undefined ?\n      filterOption :\n      createFilter({ ignoreAccents }), styles: _Object$assign({}, DEFAULT_STYLES, {}, stylesConfig)\n      // merge default theme from `react-select`, default theme for Superset,\n      // and the theme from props.\n      , theme: defaultTheme => _merge(defaultTheme, DEFAULT_THEME, themeConfig), formatOptionLabel: formatOptionLabel, getOptionLabel: getOptionLabel, getOptionValue: getOptionValue, components: components }, restProps));\n  }\n  // React.memo makes sure the component does no rerender given the same props\n  return React.memo(StyledSelect);\n}\nexport const Select = styled(WindowedSelect);\nexport const AsyncSelect = styled(WindowedAsyncSelect);\nexport const CreatableSelect = styled(WindowedCreatableSelect);\nexport const AsyncCreatableSelect = styled(WindowedAsyncCreatableSelect);\n// Wrap with async pagination (infinite scroll). Cannot use windowed since options are appended dynamically which causes focus jumping\n// @ts-ignore\nexport const PaginatedSelect = withAsyncPaginate(styled(BasicSelect));const _default =\nSelect;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(styled, \"styled\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(Select, \"Select\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(AsyncSelect, \"AsyncSelect\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(CreatableSelect, \"CreatableSelect\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(AsyncCreatableSelect, \"AsyncCreatableSelect\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(PaginatedSelect, \"PaginatedSelect\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/Select/SupersetStyledSelect.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { SyntheticEvent, MutableRefObject } from 'react';\nimport { merge } from 'lodash';\nimport BasicSelect, {\n  OptionTypeBase,\n  MultiValueProps,\n  FormatOptionLabelMeta,\n  ValueType,\n  SelectComponentsConfig,\n  components as defaultComponents,\n  createFilter,\n} from 'react-select';\nimport Async from 'react-select/async';\nimport Creatable from 'react-select/creatable';\nimport AsyncCreatable from 'react-select/async-creatable';\nimport { withAsyncPaginate } from 'react-select-async-paginate';\n\nimport { SelectComponents } from 'react-select/src/components';\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableContainerProps,\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport {\n  WindowedSelectComponentType,\n  WindowedSelectProps,\n  WindowedSelect,\n  WindowedAsyncSelect,\n  WindowedCreatableSelect,\n  WindowedAsyncCreatableSelect,\n} from './WindowedSelect';\nimport {\n  DEFAULT_CLASS_NAME,\n  DEFAULT_CLASS_NAME_PREFIX,\n  DEFAULT_STYLES,\n  DEFAULT_THEME,\n  DEFAULT_COMPONENTS,\n  VALUE_LABELED_STYLES,\n  PartialThemeConfig,\n  PartialStylesConfig,\n} from './styles';\nimport { findValue } from './utils';\n\ntype AnyReactSelect<OptionType extends OptionTypeBase> =\n  | BasicSelect<OptionType>\n  | Async<OptionType>\n  | Creatable<OptionType>\n  | AsyncCreatable<OptionType>;\n\nexport type SupersetStyledSelectProps<\n  OptionType extends OptionTypeBase,\n  T extends WindowedSelectProps<OptionType> = WindowedSelectProps<OptionType>\n> = T & {\n  // additional props for easier usage or backward compatibility\n  labelKey?: string;\n  valueKey?: string;\n  multi?: boolean;\n  clearable?: boolean;\n  sortable?: boolean;\n  ignoreAccents?: boolean;\n  creatable?: boolean;\n  selectRef?:\n    | React.RefCallback<AnyReactSelect<OptionType>>\n    | MutableRefObject<AnyReactSelect<OptionType>>;\n  getInputValue?: (selectBalue: ValueType<OptionType>) => string | undefined;\n  optionRenderer?: (option: OptionType) => React.ReactNode;\n  valueRenderer?: (option: OptionType) => React.ReactNode;\n  valueRenderedAsLabel?: boolean;\n  // callback for paste event\n  onPaste?: (e: SyntheticEvent) => void;\n  // for simplier theme overrides\n  themeConfig?: PartialThemeConfig;\n  stylesConfig?: PartialStylesConfig;\n};\n\nfunction styled<\n  OptionType extends OptionTypeBase,\n  SelectComponentType extends WindowedSelectComponentType<\n    OptionType\n  > = WindowedSelectComponentType<OptionType>\n>(SelectComponent: SelectComponentType) {\n  type SelectProps = SupersetStyledSelectProps<OptionType>;\n  type Components = SelectComponents<OptionType>;\n\n  const SortableSelectComponent = SortableContainer(SelectComponent, {\n    withRef: true,\n  });\n\n  // default components for the given OptionType\n  const supersetDefaultComponents: SelectComponentsConfig<OptionType> = DEFAULT_COMPONENTS;\n\n  const getSortableMultiValue = (MultiValue: Components['MultiValue']) => {\n    return SortableElement((props: MultiValueProps<OptionType>) => {\n      const onMouseDown = (e: SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n      };\n      const innerProps = { onMouseDown };\n      return <MultiValue {...props} innerProps={innerProps} />;\n    });\n  };\n\n  /**\n   * Superset styled `Select` component. Apply Superset themed stylesheets and\n   * consolidate props API for backward compatibility with react-select v1.\n   */\n  function StyledSelect(selectProps: SelectProps) {\n    let stateManager: AnyReactSelect<OptionType>; // reference to react-select StateManager\n    const {\n      // additional props for Superset Select\n      selectRef,\n      labelKey = 'label',\n      valueKey = 'value',\n      themeConfig,\n      stylesConfig = {},\n      optionRenderer,\n      valueRenderer,\n      // whether value is rendered as `option-label` in input,\n      // useful for AdhocMetric and AdhocFilter\n      valueRenderedAsLabel: valueRenderedAsLabel_,\n      onPaste,\n      multi = false, // same as `isMulti`, used for backward compatibility\n      clearable, // same as `isClearable`\n      sortable = true, // whether to enable drag & drop sorting\n\n      // react-select props\n      className = DEFAULT_CLASS_NAME,\n      classNamePrefix = DEFAULT_CLASS_NAME_PREFIX,\n      options,\n      value: value_,\n      components: components_,\n      isMulti: isMulti_,\n      isClearable: isClearable_,\n      minMenuHeight = 100, // apply different defaults\n      maxMenuHeight = 220,\n      filterOption,\n      ignoreAccents = false, // default is `true`, but it is slow\n\n      getOptionValue = option =>\n        typeof option === 'string' ? option : option[valueKey],\n\n      getOptionLabel = option =>\n        typeof option === 'string'\n          ? option\n          : option[labelKey] || option[valueKey],\n\n      formatOptionLabel = (\n        option: OptionType,\n        { context }: FormatOptionLabelMeta<OptionType>,\n      ) => {\n        if (context === 'value') {\n          return valueRenderer ? valueRenderer(option) : getOptionLabel(option);\n        }\n        return optionRenderer ? optionRenderer(option) : getOptionLabel(option);\n      },\n\n      ...restProps\n    } = selectProps;\n\n    // `value` may be rendered values (strings), we want option objects\n    const value: OptionType[] = findValue(value_, options || [], valueKey);\n\n    // Add backward compability to v1 API\n    const isMulti = isMulti_ === undefined ? multi : isMulti_;\n    const isClearable = isClearable_ === undefined ? clearable : isClearable_;\n\n    // Sort is only applied when there are multiple selected values\n    const shouldAllowSort =\n      isMulti && sortable && Array.isArray(value) && value.length > 1;\n\n    const MaybeSortableSelect = shouldAllowSort\n      ? SortableSelectComponent\n      : SelectComponent;\n    const components = { ...supersetDefaultComponents, ...components_ };\n\n    // Make multi-select sortable as per https://react-select.netlify.app/advanced\n    if (shouldAllowSort) {\n      components.MultiValue = getSortableMultiValue(\n        components.MultiValue || defaultComponents.MultiValue,\n      );\n\n      const sortableContainerProps: Partial<SortableContainerProps> = {\n        getHelperDimensions: ({ node }) => node.getBoundingClientRect(),\n        axis: 'xy',\n        onSortEnd: ({ oldIndex, newIndex }) => {\n          const newValue = arrayMove(value, oldIndex, newIndex);\n          if (restProps.onChange) {\n            restProps.onChange(newValue, { action: 'set-value' });\n          }\n        },\n        distance: 4,\n      };\n      Object.assign(restProps, sortableContainerProps);\n    }\n\n    // When values are rendered as labels, adjust valueContainer padding\n    const valueRenderedAsLabel =\n      valueRenderedAsLabel_ === undefined ? isMulti : valueRenderedAsLabel_;\n    if (valueRenderedAsLabel && !stylesConfig.valueContainer) {\n      Object.assign(stylesConfig, VALUE_LABELED_STYLES);\n    }\n\n    // Handle onPaste event\n    if (onPaste) {\n      const Input = components.Input || defaultComponents.Input;\n      // @ts-ignore (needed for passing `onPaste`)\n      components.Input = props => <Input {...props} onPaste={onPaste} />;\n    }\n    // for CreaTable\n    if (SelectComponent === WindowedCreatableSelect) {\n      restProps.getNewOptionData = (inputValue: string, label: string) => ({\n        label: label || inputValue,\n        [valueKey]: inputValue,\n        isNew: true,\n      });\n    }\n\n    // Make sure always return StateManager for the refs.\n    // To get the real `Select` component, keep tap into `obj.select`:\n    //   - for normal <Select /> component: StateManager -> Select,\n    //   - for <Creatable />: StateManager -> Creatable -> Select\n    const setRef = (instance: any) => {\n      stateManager =\n        shouldAllowSort && instance && 'refs' in instance\n          ? instance.refs.wrappedInstance // obtain StateManger from SortableContainer\n          : instance;\n      if (typeof selectRef === 'function') {\n        selectRef(stateManager);\n      } else if (selectRef && 'current' in selectRef) {\n        selectRef.current = stateManager;\n      }\n    };\n\n    return (\n      <MaybeSortableSelect\n        ref={setRef}\n        className={className}\n        classNamePrefix={classNamePrefix}\n        isMulti={isMulti}\n        isClearable={isClearable}\n        options={options}\n        value={value}\n        minMenuHeight={minMenuHeight}\n        maxMenuHeight={maxMenuHeight}\n        filterOption={\n          // filterOption may be NULL\n          filterOption !== undefined\n            ? filterOption\n            : createFilter({ ignoreAccents })\n        }\n        styles={{ ...DEFAULT_STYLES, ...stylesConfig } as SelectProps['styles']}\n        // merge default theme from `react-select`, default theme for Superset,\n        // and the theme from props.\n        theme={defaultTheme => merge(defaultTheme, DEFAULT_THEME, themeConfig)}\n        formatOptionLabel={formatOptionLabel}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        components={components}\n        {...restProps}\n      />\n    );\n  }\n\n  // React.memo makes sure the component does no rerender given the same props\n  return React.memo(StyledSelect);\n}\n\nexport const Select = styled(WindowedSelect);\nexport const AsyncSelect = styled(WindowedAsyncSelect);\nexport const CreatableSelect = styled(WindowedCreatableSelect);\nexport const AsyncCreatableSelect = styled(WindowedAsyncCreatableSelect);\n// Wrap with async pagination (infinite scroll). Cannot use windowed since options are appended dynamically which causes focus jumping\n// @ts-ignore\nexport const PaginatedSelect = withAsyncPaginate(styled(BasicSelect));\nexport default Select;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
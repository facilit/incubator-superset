{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, Alert, Button, Radio } from 'react-bootstrap';\nimport Select from 'src/components/Select';\nimport { t } from '@superset-ui/translation';\n\nimport { supersetURL } from '../../utils/common';\nimport { EXPLORE_ONLY_VIZ_TYPE } from '../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  can_overwrite: PropTypes.bool,\n  onHide: PropTypes.func.isRequired,\n  actions: PropTypes.object.isRequired,\n  form_data: PropTypes.object,\n  userId: PropTypes.string.isRequired,\n  dashboards: PropTypes.array.isRequired,\n  alert: PropTypes.string,\n  slice: PropTypes.object,\n  datasource: PropTypes.object };\n\n\nclass SaveModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saveToDashboardId: null,\n      newDashboardName: '',\n      newSliceName: props.sliceName,\n      dashboards: [],\n      alert: null,\n      action: props.can_overwrite ? 'overwrite' : 'saveas',\n      addToDash: 'noSave',\n      vizType: props.form_data.viz_type };\n\n  }\n  componentDidMount() {\n    this.props.actions.fetchDashboards(this.props.userId).then(() => {var _context;\n      const dashboardIds = _mapInstanceProperty(_context = this.props.dashboards).call(_context,\n      dashboard => dashboard.value);\n\n      let recentDashboard = sessionStorage.getItem(\n      'save_chart_recent_dashboard');\n\n      recentDashboard = recentDashboard && _parseInt(recentDashboard, 10);\n      if (\n      recentDashboard !== null &&\n      _indexOfInstanceProperty(dashboardIds).call(dashboardIds, recentDashboard) !== -1)\n      {\n        this.setState({\n          saveToDashboardId: recentDashboard,\n          addToDash: 'existing' });\n\n      }\n    });\n  }\n  onChange(name, event) {\n    switch (name) {\n      case 'newSliceName':\n        this.setState({ newSliceName: event.target.value });\n        break;\n      case 'saveToDashboardId':\n        this.setState({ saveToDashboardId: event.value });\n        this.changeDash('existing');\n        break;\n      case 'newDashboardName':\n        this.setState({ newDashboardName: event.target.value });\n        break;\n      default:\n        break;}\n\n  }\n  changeAction(action) {\n    this.setState({ action });\n  }\n  changeDash(dash) {\n    this.setState({ addToDash: dash });\n  }\n  saveOrOverwrite(gotodash) {\n    this.setState({ alert: null });\n    this.props.actions.removeSaveModalAlert();\n    const sliceParams = {};\n\n    if (_sliceInstanceProperty(this.props) && _sliceInstanceProperty(this.props).slice_id) {\n      sliceParams.slice_id = _sliceInstanceProperty(this.props).slice_id;\n    }\n    if (sliceParams.action === 'saveas') {\n      if (this.state.newSliceName === '') {\n        this.setState({ alert: t('Please enter a chart name') });\n        return;\n      }\n    }\n    sliceParams.action = this.state.action;\n    sliceParams.slice_name = this.state.newSliceName;\n\n    const addToDash = this.state.addToDash;\n    sliceParams.add_to_dash = addToDash;\n    let dashboard = null;\n    switch (addToDash) {\n      case 'existing':\n        dashboard = this.state.saveToDashboardId;\n        if (!dashboard) {\n          this.setState({ alert: t('Please select a dashboard') });\n          return;\n        }\n        sliceParams.save_to_dashboard_id = dashboard;\n        break;\n      case 'new':\n        dashboard = this.state.newDashboardName;\n        if (dashboard === '') {\n          this.setState({ alert: t('Please enter a dashboard name') });\n          return;\n        }\n        sliceParams.new_dashboard_name = dashboard;\n        break;\n      default:\n        dashboard = null;}\n\n    sliceParams.goto_dash = gotodash;\n\n    this.props.actions.\n    saveSlice(this.props.form_data, sliceParams).\n    then(({ data }) => {\n      if (data.dashboard_id === null) {\n        sessionStorage.removeItem('save_chart_recent_dashboard');\n      } else {\n        sessionStorage.setItem(\n        'save_chart_recent_dashboard',\n        data.dashboard_id);\n\n      }\n      // Go to new slice url or dashboard url\n      if (gotodash) {\n        window.location.assign(supersetURL(data.dashboard));\n      } else {\n        window.location.assign(_sliceInstanceProperty(data).slice_url);\n      }\n    });\n    this.props.onHide();\n  }\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n  render() {var _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context14;\n    const canNotSaveToDash =\n    _indexOfInstanceProperty(EXPLORE_ONLY_VIZ_TYPE).call(EXPLORE_ONLY_VIZ_TYPE, this.state.vizType) > -1;\n    return (\n      ___EmotionJSX(Modal, { show: true, onHide: this.props.onHide, bsStyle: \"large\" },\n      ___EmotionJSX(Modal.Header, { closeButton: true },\n      ___EmotionJSX(Modal.Title, null, t('Save A Chart'))),\n\n      ___EmotionJSX(Modal.Body, null,\n      (this.state.alert || this.props.alert) &&\n      ___EmotionJSX(Alert, null,\n      this.state.alert ? this.state.alert : this.props.alert,\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-close pull-right\",\n        onClick: _bindInstanceProperty(_context2 = this.removeAlert).call(_context2, this),\n        style: { cursor: 'pointer' } })),\n\n\n\n      _sliceInstanceProperty(this.props) &&\n      ___EmotionJSX(Radio, {\n        id: \"overwrite-radio\",\n        disabled: !this.props.can_overwrite,\n        checked: this.state.action === 'overwrite',\n        onChange: _bindInstanceProperty(_context3 = this.changeAction).call(_context3, this, 'overwrite') },\n\n      t('Overwrite chart %s', _sliceInstanceProperty(this.props).slice_name)),\n\n\n\n      ___EmotionJSX(Radio, {\n        id: \"saveas-radio\",\n        inline: true,\n        checked: this.state.action === 'saveas',\n        onChange: _bindInstanceProperty(_context4 = this.changeAction).call(_context4, this, 'saveas') },\n\n      ' ',\n      t('Save as'), \" \\xA0\"),\n\n      ___EmotionJSX(\"input\", {\n        name: \"new_slice_name\",\n        placeholder: this.state.newSliceName || t('[chart name]'),\n        onChange: _bindInstanceProperty(_context5 = this.onChange).call(_context5, this, 'newSliceName'),\n        onFocus: _bindInstanceProperty(_context6 = this.changeAction).call(_context6, this, 'saveas') }),\n\n\n      ___EmotionJSX(\"br\", null),\n      ___EmotionJSX(\"hr\", null),\n\n      ___EmotionJSX(Radio, {\n        checked: this.state.addToDash === 'noSave',\n        onChange: _bindInstanceProperty(_context7 = this.changeDash).call(_context7, this, 'noSave') },\n\n      t('Do not add to a dashboard')),\n\n\n      ___EmotionJSX(Radio, {\n        inline: true,\n        disabled: canNotSaveToDash,\n        checked: this.state.addToDash === 'existing',\n        onChange: _bindInstanceProperty(_context8 = this.changeDash).call(_context8, this, 'existing'),\n        \"data-test\": \"add-to-existing-dashboard\" },\n\n      t('Add chart to existing dashboard')),\n\n      ___EmotionJSX(Select, {\n        className: \"save-modal-selector\",\n        disabled: canNotSaveToDash,\n        options: this.props.dashboards,\n        onChange: _bindInstanceProperty(_context9 = this.onChange).call(_context9, this, 'saveToDashboardId'),\n        autoSize: false,\n        value: this.state.saveToDashboardId,\n        placeholder: \"Select Dashboard\" }),\n\n\n      ___EmotionJSX(Radio, {\n        inline: true,\n        checked: this.state.addToDash === 'new',\n        onChange: _bindInstanceProperty(_context10 = this.changeDash).call(_context10, this, 'new'),\n        disabled: canNotSaveToDash,\n        \"data-test\": \"add-to-new-dashboard\" },\n\n      t('Add to new dashboard'), \" \\xA0\"),\n\n      ___EmotionJSX(\"input\", {\n        onChange: _bindInstanceProperty(_context11 = this.onChange).call(_context11, this, 'newDashboardName'),\n        disabled: canNotSaveToDash,\n        onFocus: _bindInstanceProperty(_context12 = this.changeDash).call(_context12, this, 'new'),\n        placeholder: t('[dashboard name]') })),\n\n\n\n      ___EmotionJSX(Modal.Footer, null,\n      ___EmotionJSX(Button, {\n        type: \"button\",\n        id: \"btn_modal_save\",\n        className: \"btn pull-left\",\n        onClick: _bindInstanceProperty(_context13 = this.saveOrOverwrite).call(_context13, this, false) },\n\n      t('Save')),\n\n      ___EmotionJSX(Button, {\n        type: \"button\",\n        id: \"btn_modal_save_goto_dash\",\n        className: \"btn btn-primary pull-left gotodash\",\n        disabled: this.state.addToDash === 'noSave' || canNotSaveToDash,\n        onClick: _bindInstanceProperty(_context14 = this.saveOrOverwrite).call(_context14, this, true) },\n\n      t('Save & go to dashboard')))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSaveModal.propTypes = propTypes;\n\nfunction mapStateToProps({ explore, saveModal }) {\n  return {\n    datasource: explore.datasource,\n    slice: _sliceInstanceProperty(explore),\n    can_overwrite: explore.can_overwrite,\n    userId: explore.user_id,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert };\n\n}\n\nexport { SaveModal };const _default =\nconnect(mapStateToProps, () => ({}))(SaveModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(SaveModal, \"SaveModal\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx"],"names":["React","PropTypes","connect","Modal","Alert","Button","Radio","Select","t","supersetURL","EXPLORE_ONLY_VIZ_TYPE","propTypes","can_overwrite","bool","onHide","func","isRequired","actions","object","form_data","userId","string","dashboards","array","alert","slice","datasource","SaveModal","Component","constructor","props","state","saveToDashboardId","newDashboardName","newSliceName","sliceName","action","addToDash","vizType","viz_type","componentDidMount","fetchDashboards","then","dashboardIds","dashboard","value","recentDashboard","sessionStorage","getItem","setState","onChange","name","event","target","changeDash","changeAction","dash","saveOrOverwrite","gotodash","removeSaveModalAlert","sliceParams","slice_id","slice_name","add_to_dash","save_to_dashboard_id","new_dashboard_name","goto_dash","saveSlice","data","dashboard_id","removeItem","setItem","window","location","assign","slice_url","removeAlert","render","canNotSaveToDash","cursor","mapStateToProps","explore","saveModal","user_id","saveModalAlert"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, Alert, Button, Radio } from 'react-bootstrap';\nimport Select from 'src/components/Select';\nimport { t } from '@superset-ui/translation';\n\nimport { supersetURL } from '../../utils/common';\nimport { EXPLORE_ONLY_VIZ_TYPE } from '../constants';\n\nconst propTypes = {\n  can_overwrite: PropTypes.bool,\n  onHide: PropTypes.func.isRequired,\n  actions: PropTypes.object.isRequired,\n  form_data: PropTypes.object,\n  userId: PropTypes.string.isRequired,\n  dashboards: PropTypes.array.isRequired,\n  alert: PropTypes.string,\n  slice: PropTypes.object,\n  datasource: PropTypes.object,\n};\n\nclass SaveModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saveToDashboardId: null,\n      newDashboardName: '',\n      newSliceName: props.sliceName,\n      dashboards: [],\n      alert: null,\n      action: props.can_overwrite ? 'overwrite' : 'saveas',\n      addToDash: 'noSave',\n      vizType: props.form_data.viz_type,\n    };\n  }\n  componentDidMount() {\n    this.props.actions.fetchDashboards(this.props.userId).then(() => {\n      const dashboardIds = this.props.dashboards.map(\n        dashboard => dashboard.value,\n      );\n      let recentDashboard = sessionStorage.getItem(\n        'save_chart_recent_dashboard',\n      );\n      recentDashboard = recentDashboard && parseInt(recentDashboard, 10);\n      if (\n        recentDashboard !== null &&\n        dashboardIds.indexOf(recentDashboard) !== -1\n      ) {\n        this.setState({\n          saveToDashboardId: recentDashboard,\n          addToDash: 'existing',\n        });\n      }\n    });\n  }\n  onChange(name, event) {\n    switch (name) {\n      case 'newSliceName':\n        this.setState({ newSliceName: event.target.value });\n        break;\n      case 'saveToDashboardId':\n        this.setState({ saveToDashboardId: event.value });\n        this.changeDash('existing');\n        break;\n      case 'newDashboardName':\n        this.setState({ newDashboardName: event.target.value });\n        break;\n      default:\n        break;\n    }\n  }\n  changeAction(action) {\n    this.setState({ action });\n  }\n  changeDash(dash) {\n    this.setState({ addToDash: dash });\n  }\n  saveOrOverwrite(gotodash) {\n    this.setState({ alert: null });\n    this.props.actions.removeSaveModalAlert();\n    const sliceParams = {};\n\n    if (this.props.slice && this.props.slice.slice_id) {\n      sliceParams.slice_id = this.props.slice.slice_id;\n    }\n    if (sliceParams.action === 'saveas') {\n      if (this.state.newSliceName === '') {\n        this.setState({ alert: t('Please enter a chart name') });\n        return;\n      }\n    }\n    sliceParams.action = this.state.action;\n    sliceParams.slice_name = this.state.newSliceName;\n\n    const addToDash = this.state.addToDash;\n    sliceParams.add_to_dash = addToDash;\n    let dashboard = null;\n    switch (addToDash) {\n      case 'existing':\n        dashboard = this.state.saveToDashboardId;\n        if (!dashboard) {\n          this.setState({ alert: t('Please select a dashboard') });\n          return;\n        }\n        sliceParams.save_to_dashboard_id = dashboard;\n        break;\n      case 'new':\n        dashboard = this.state.newDashboardName;\n        if (dashboard === '') {\n          this.setState({ alert: t('Please enter a dashboard name') });\n          return;\n        }\n        sliceParams.new_dashboard_name = dashboard;\n        break;\n      default:\n        dashboard = null;\n    }\n    sliceParams.goto_dash = gotodash;\n\n    this.props.actions\n      .saveSlice(this.props.form_data, sliceParams)\n      .then(({ data }) => {\n        if (data.dashboard_id === null) {\n          sessionStorage.removeItem('save_chart_recent_dashboard');\n        } else {\n          sessionStorage.setItem(\n            'save_chart_recent_dashboard',\n            data.dashboard_id,\n          );\n        }\n        // Go to new slice url or dashboard url\n        if (gotodash) {\n          window.location.assign(supersetURL(data.dashboard));\n        } else {\n          window.location.assign(data.slice.slice_url);\n        }\n      });\n    this.props.onHide();\n  }\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n  render() {\n    const canNotSaveToDash =\n      EXPLORE_ONLY_VIZ_TYPE.indexOf(this.state.vizType) > -1;\n    return (\n      <Modal show onHide={this.props.onHide} bsStyle=\"large\">\n        <Modal.Header closeButton>\n          <Modal.Title>{t('Save A Chart')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {(this.state.alert || this.props.alert) && (\n            <Alert>\n              {this.state.alert ? this.state.alert : this.props.alert}\n              <i\n                className=\"fa fa-close pull-right\"\n                onClick={this.removeAlert.bind(this)}\n                style={{ cursor: 'pointer' }}\n              />\n            </Alert>\n          )}\n          {this.props.slice && (\n            <Radio\n              id=\"overwrite-radio\"\n              disabled={!this.props.can_overwrite}\n              checked={this.state.action === 'overwrite'}\n              onChange={this.changeAction.bind(this, 'overwrite')}\n            >\n              {t('Overwrite chart %s', this.props.slice.slice_name)}\n            </Radio>\n          )}\n\n          <Radio\n            id=\"saveas-radio\"\n            inline\n            checked={this.state.action === 'saveas'}\n            onChange={this.changeAction.bind(this, 'saveas')}\n          >\n            {' '}\n            {t('Save as')} &nbsp;\n          </Radio>\n          <input\n            name=\"new_slice_name\"\n            placeholder={this.state.newSliceName || t('[chart name]')}\n            onChange={this.onChange.bind(this, 'newSliceName')}\n            onFocus={this.changeAction.bind(this, 'saveas')}\n          />\n\n          <br />\n          <hr />\n\n          <Radio\n            checked={this.state.addToDash === 'noSave'}\n            onChange={this.changeDash.bind(this, 'noSave')}\n          >\n            {t('Do not add to a dashboard')}\n          </Radio>\n\n          <Radio\n            inline\n            disabled={canNotSaveToDash}\n            checked={this.state.addToDash === 'existing'}\n            onChange={this.changeDash.bind(this, 'existing')}\n            data-test=\"add-to-existing-dashboard\"\n          >\n            {t('Add chart to existing dashboard')}\n          </Radio>\n          <Select\n            className=\"save-modal-selector\"\n            disabled={canNotSaveToDash}\n            options={this.props.dashboards}\n            onChange={this.onChange.bind(this, 'saveToDashboardId')}\n            autoSize={false}\n            value={this.state.saveToDashboardId}\n            placeholder=\"Select Dashboard\"\n          />\n\n          <Radio\n            inline\n            checked={this.state.addToDash === 'new'}\n            onChange={this.changeDash.bind(this, 'new')}\n            disabled={canNotSaveToDash}\n            data-test=\"add-to-new-dashboard\"\n          >\n            {t('Add to new dashboard')} &nbsp;\n          </Radio>\n          <input\n            onChange={this.onChange.bind(this, 'newDashboardName')}\n            disabled={canNotSaveToDash}\n            onFocus={this.changeDash.bind(this, 'new')}\n            placeholder={t('[dashboard name]')}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"button\"\n            id=\"btn_modal_save\"\n            className=\"btn pull-left\"\n            onClick={this.saveOrOverwrite.bind(this, false)}\n          >\n            {t('Save')}\n          </Button>\n          <Button\n            type=\"button\"\n            id=\"btn_modal_save_goto_dash\"\n            className=\"btn btn-primary pull-left gotodash\"\n            disabled={this.state.addToDash === 'noSave' || canNotSaveToDash}\n            onClick={this.saveOrOverwrite.bind(this, true)}\n          >\n            {t('Save & go to dashboard')}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nSaveModal.propTypes = propTypes;\n\nfunction mapStateToProps({ explore, saveModal }) {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    can_overwrite: explore.can_overwrite,\n    userId: explore.user_id,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n  };\n}\n\nexport { SaveModal };\nexport default connect(mapStateToProps, () => ({}))(SaveModal);\n"]},"metadata":{},"sourceType":"module"}
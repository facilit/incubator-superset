{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import \"core-js/modules/es.promise\";import \"core-js/modules/es.promise.finally\";import \"core-js/modules/web.dom-collections.iterator\";import _keysInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/keys\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * Licensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * Unless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport { getChartMetadataRegistry } from '@superset-ui/chart';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst PAGE_SIZE = 25;\nclass ChartList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      chartCount: 0,\n      charts: [],\n      filterOperators: {},\n      filters: [],\n      lastFetchDataConfig: null,\n      loading: false,\n      permissions: [],\n      sliceCurrentlyEditing: null };\n\n    this.initialSort = [{ id: 'changed_on', desc: true }];\n    this.columns = [\n    {\n      Cell: ({ row: { original: { url, slice_name: sliceName } } }) => ___EmotionJSX(\"a\", { href: url }, sliceName),\n      Header: t('Chart'),\n      accessor: 'slice_name',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { viz_type: vizType } } }) => vizType,\n      Header: t('Visualization Type'),\n      accessor: 'viz_type',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { datasource_name_text: dsNameTxt, datasource_url: dsUrl } } }) => ___EmotionJSX(\"a\", { href: dsUrl }, dsNameTxt),\n      Header: t('Datasource'),\n      accessor: 'datasource_name',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_by_name: changedByName, changed_by_url: changedByUrl } } }) => ___EmotionJSX(\"a\", { href: changedByUrl }, changedByName),\n      Header: t('Creator'),\n      accessor: 'changed_by_fk',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_on: changedOn } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\" }, moment(changedOn).fromNow()),\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true },\n\n    {\n      accessor: 'description',\n      hidden: true },\n\n    {\n      accessor: 'owners',\n      hidden: true },\n\n    {\n      accessor: 'datasource',\n      hidden: true },\n\n    {\n      Cell: ({ row: { state, original } }) => {\n        const handleDelete = () => this.handleChartDelete(original);\n        const openEditModal = () => this.openChartEditModal(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n        return ___EmotionJSX(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible') },\n        this.canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please Confirm'), description: ___EmotionJSX(React.Fragment, null,\n          t('Are you sure you want to delete'), ' ',\n          ___EmotionJSX(\"b\", null, original.slice_name), \"?\"),\n          onConfirm: handleDelete },\n        confirmDelete => ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n        ___EmotionJSX(\"i\", { className: \"fa fa-trash\" }))),\n\n\n        this.canEdit && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: openEditModal },\n        ___EmotionJSX(\"i\", { className: \"fa fa-pencil\" })));\n\n\n      },\n      Header: 'Actions',\n      id: 'actions' }];\n\n\n    this.hasPerm = perm => {var _context;\n      if (!this.state.permissions.length) {\n        return false;\n      }\n      return _someInstanceProperty(_context = this.state.permissions).call(_context, p => p === perm);\n    };\n    this.openChartEditModal = chart => {\n      this.setState({\n        sliceCurrentlyEditing: {\n          slice_id: chart.id,\n          slice_name: chart.slice_name,\n          description: chart.description,\n          cache_timeout: chart.cache_timeout } });\n\n\n    };\n    this.closeChartEditModal = () => {\n      this.setState({ sliceCurrentlyEditing: null });\n    };\n    this.handleChartUpdated = edits => {var _context2;\n      // update the chart in our state with the edited info\n      const newCharts = _mapInstanceProperty(_context2 = this.state.charts).call(_context2, chart => chart.id === edits.id ? _Object$assign({}, chart, {}, edits) : chart);\n      this.setState({\n        charts: newCharts });\n\n    };\n    this.handleChartDelete = ({ id, slice_name: sliceName }) => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/chart/\" + id }).\n      then(() => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted: %s', sliceName));\n      }, () => {\n        this.props.addDangerToast(t('There was an issue deleting: %s', sliceName));\n      });\n    };\n    this.handleBulkChartDelete = charts => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/chart/?q=\" + rison.encode(_mapInstanceProperty(charts).call(charts, ({ id }) => id)) }).\n      then(({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      }, err => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected charts: %s', err.statusText));\n      });\n    };\n    this.fetchData = ({ pageIndex, pageSize, sortBy, filters }) => {var _context3;\n      // set loading state, cache the last config for fetching data in this component.\n      this.setState({\n        lastFetchDataConfig: {\n          filters,\n          pageIndex,\n          pageSize,\n          sortBy },\n\n        loading: true });\n\n      const filterExps = _reduceInstanceProperty(_context3 = _mapInstanceProperty(filters).call(filters,\n      ({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value }))).call(_context3,\n\n      (acc, fltr) => {\n        if (fltr.col === 'datasource' &&\n        fltr.value &&\n        typeof fltr.value === 'string') {\n          const { datasource_id: dsId, datasource_type: dsType } = JSON.parse(fltr.value);\n          return [\n          ...acc, _Object$assign({},\n          fltr, { col: 'datasource_id', value: dsId }), _Object$assign({},\n          fltr, { col: 'datasource_type', value: dsType })];\n\n        }\n        return [...acc, fltr];\n      }, []);\n      const queryParams = rison.encode(_Object$assign({\n        order_column: sortBy[0].id,\n        order_direction: sortBy[0].desc ? 'desc' : 'asc',\n        page: pageIndex,\n        page_size: pageSize },\n      filterExps.length ? { filters: filterExps } : {}));\n\n      return SupersetClient.get({\n        endpoint: \"/api/v1/chart/?q=\" + queryParams }).\n\n      then(({ json = {} }) => {\n        this.setState({ charts: json.result, chartCount: json.count });\n      }).\n      catch(e => {\n        console.log(e.body);\n        this.props.addDangerToast(t('An error occurred while fetching charts: %s', e.statusText));\n      }).\n      finally(() => {\n        this.setState({ loading: false });\n      });\n    };\n    this.fetchOwners = async (filterValue = '', pageIndex, pageSize) => {\n      const resource = '/api/v1/chart/related/owners';\n      try {var _json$result;\n        const queryParams = rison.encode(_Object$assign({},\n        pageIndex ? { page: pageIndex } : {}, {},\n        pageSize ? { page_ize: pageSize } : {}, {},\n        filterValue ? { filter: filterValue } : {}));\n\n        const { json = {} } = await SupersetClient.get({\n          endpoint: resource + \"?q=\" + queryParams });\n\n        return json === null || json === void 0 ? void 0 : (_json$result = json.result) === null || _json$result === void 0 ? void 0 : _mapInstanceProperty(_json$result).call(_json$result, ({ text: label, value }) => ({\n          label,\n          value }));\n\n      }\n      catch (e) {\n        console.error(e);\n        this.props.addDangerToast(t('An error occurred while fetching chart owner values: %s', e.statusText));\n      }\n      return [];\n    };\n    this.fetchDatasets = async () => {\n      const resource = '/api/v1/chart/datasources';\n      try {var _json$result2;\n        const { json = {} } = await SupersetClient.get({\n          endpoint: \"\" + resource });\n\n        return json === null || json === void 0 ? void 0 : (_json$result2 = json.result) === null || _json$result2 === void 0 ? void 0 : _mapInstanceProperty(_json$result2).call(_json$result2, ds => _Object$assign({},\n        ds, {\n          value: _JSON$stringify(ds.value) }));\n\n      }\n      catch (e) {\n        this.props.addDangerToast(t('An error occurred while fetching chart dataset values: %s', e.statusText));\n      }\n      return [];\n    };\n    this.updateFilters = async () => {var _context6, _context7, _context8, _context9, _context10;\n      const { filterOperators } = this.state;\n      if (this.isNewUIEnabled) {var _context4, _context5;\n        this.setState({\n          filters: [\n          {\n            Header: 'Owner',\n            id: 'owners',\n            input: 'select',\n            operator: 'rel_m_m',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchOwners,\n            paginate: true },\n\n          {\n            Header: 'Viz Type',\n            id: 'viz_type',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            selects: _mapInstanceProperty(_context4 = _keysInstanceProperty(_context5 = getChartMetadataRegistry()).call(_context5)).call(_context4,\n\n            k => ({ label: k, value: k })) },\n\n          {\n            Header: 'Dataset',\n            id: 'datasource',\n            input: 'select',\n            operator: 'eq',\n            unfilteredLabel: 'All',\n            fetchSelects: this.fetchDatasets,\n            paginate: false },\n\n          {\n            Header: 'Search',\n            id: 'slice_name',\n            input: 'search',\n            operator: 'name_or_description' }] });\n\n\n\n        return;\n      }\n      const convertFilter = ({ name: label, operator }) => ({ label, value: operator });\n      const owners = await this.fetchOwners();\n      this.setState({\n        filters: [\n        {\n          Header: 'Chart',\n          id: 'slice_name',\n          operators: _mapInstanceProperty(_context6 = filterOperators.slice_name).call(_context6, convertFilter) },\n\n        {\n          Header: 'Description',\n          id: 'description',\n          operators: _mapInstanceProperty(_context7 = filterOperators.slice_name).call(_context7, convertFilter) },\n\n        {\n          Header: 'Visualization Type',\n          id: 'viz_type',\n          operators: _mapInstanceProperty(_context8 = filterOperators.viz_type).call(_context8, convertFilter) },\n\n        {\n          Header: 'Datasource Name',\n          id: 'datasource_name',\n          operators: _mapInstanceProperty(_context9 = filterOperators.datasource_name).call(_context9, convertFilter) },\n\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: _mapInstanceProperty(_context10 = filterOperators.owners).call(_context10, convertFilter),\n          selects: owners }] });\n\n\n\n    };\n  }\n  componentDidMount() {\n    SupersetClient.get({\n      endpoint: \"/api/v1/chart/_info\" }).\n    then(({ json: infoJson = {} }) => {\n      this.setState({\n        filterOperators: infoJson.filters,\n        permissions: infoJson.permissions },\n      this.updateFilters);\n    }, e => {\n      this.props.addDangerToast(t('An error occurred while fetching charts: %s', e.statusText));\n      console.error(e);\n    });\n  }\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n  get isNewUIEnabled() {\n    return isFeatureEnabled(FeatureFlag.LIST_VIEWS_NEW_UI);\n  }\n  render() {\n    const { charts, chartCount, loading, filters, sliceCurrentlyEditing } = this.state;\n    return ___EmotionJSX(\"div\", { className: \"container welcome\" },\n    ___EmotionJSX(Panel, null,\n    ___EmotionJSX(Panel.Body, null,\n    sliceCurrentlyEditing && ___EmotionJSX(PropertiesModal, { show: true, onHide: this.closeChartEditModal, onSave: this.handleChartUpdated, slice: sliceCurrentlyEditing }),\n    ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected charts?'), onConfirm: this.handleBulkChartDelete },\n    confirmDelete => {\n      const bulkActions = [];\n      if (this.canDelete) {\n        bulkActions.push({\n          key: 'delete',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-trash\" }), \" Delete\"),\n\n          onSelect: confirmDelete });\n\n      }\n      return ___EmotionJSX(ListView, { className: \"chart-list-view\", title: 'Charts', columns: this.columns, data: charts, count: chartCount, pageSize: PAGE_SIZE, fetchData: this.fetchData, loading: loading, initialSort: this.initialSort, filters: filters, bulkActions: bulkActions, useNewUIFilters: this.isNewUIEnabled });\n    }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ChartList.propTypes = {\n  addDangerToast: PropTypes.func.isRequired };const _default =\n\nwithToasts(ChartList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");reactHotLoader.register(ChartList, \"ChartList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/chartList/ChartList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
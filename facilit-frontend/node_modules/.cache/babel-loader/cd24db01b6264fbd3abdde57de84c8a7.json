{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                 * Licensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                 * or more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                 * distributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                 * regarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                 * to you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"License\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                 * with the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                 * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                 * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                 * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                 * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                 */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, FormGroup, Radio } from 'react-bootstrap';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport ModalTrigger from '../../components/ModalTrigger';\nimport Checkbox from '../../components/Checkbox';\nimport { SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD } from '../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  saveType: PropTypes.oneOf([SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD]),\n  triggerNode: PropTypes.node.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  isMenuItem: PropTypes.bool,\n  canOverwrite: PropTypes.bool.isRequired,\n  refreshFrequency: PropTypes.number.isRequired };\n\n\nconst defaultProps = {\n  isMenuItem: false,\n  saveType: SAVE_TYPE_OVERWRITE,\n  colorNamespace: undefined,\n  colorScheme: undefined };\n\n\nclass SaveModal extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6;\n    super(props);\n    this.state = {\n      saveType: props.saveType,\n      newDashName: props.dashboardTitle + \" [copy]\",\n      duplicateSlices: false };\n\n    this.modal = null;\n    this.handleSaveTypeChange = _bindInstanceProperty(_context = this.handleSaveTypeChange).call(_context, this);\n    this.handleNameChange = _bindInstanceProperty(_context2 = this.handleNameChange).call(_context2, this);\n    this.saveDashboard = _bindInstanceProperty(_context3 = this.saveDashboard).call(_context3, this);\n    this.setModalRef = _bindInstanceProperty(_context4 = this.setModalRef).call(_context4, this);\n    this.toggleDuplicateSlices = _bindInstanceProperty(_context5 = this.toggleDuplicateSlices).call(_context5, this);\n    this.onSave = _bindInstanceProperty(_context6 = this.props.onSave).call(_context6, this);\n  }\n\n  setModalRef(ref) {\n    this.modal = ref;\n  }\n\n  toggleDuplicateSlices() {\n    this.setState({ duplicateSlices: !this.state.duplicateSlices });\n  }\n\n  handleSaveTypeChange(event) {\n    this.setState({\n      saveType: event.target.value });\n\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newDashName: event.target.value,\n      saveType: SAVE_TYPE_NEWDASHBOARD });\n\n  }\n\n  saveDashboard() {\n    const { saveType, newDashName } = this.state;\n    const {\n      dashboardTitle,\n      dashboardInfo,\n      layout: positions,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      expandedSlices,\n      dashboardId,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency } =\n    this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n    colorScheme,\n    colorNamespace);\n\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency ?\n    currentRefreshFrequency :\n    dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      css: customCss,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      expanded_slices: expandedSlices,\n      dashboard_title:\n      saveType === SAVE_TYPE_NEWDASHBOARD ? newDashName : dashboardTitle,\n      duplicate_slices: this.state.duplicateSlices,\n      refresh_frequency: refreshFrequency };\n\n\n    if (saveType === SAVE_TYPE_NEWDASHBOARD && !newDashName) {\n      this.props.addDangerToast(\n      t('You must pick a name for the new dashboard'));\n\n    } else {\n      this.onSave(data, dashboardId, saveType).then(resp => {\n        if (\n        saveType === SAVE_TYPE_NEWDASHBOARD &&\n        resp &&\n        resp.json &&\n        resp.json.id)\n        {\n          window.location = \"/superset/dashboard/\" + resp.json.id + \"/\";\n        }\n      });\n      this.modal.close();\n    }\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(ModalTrigger, {\n        ref: this.setModalRef,\n        isMenuItem: this.props.isMenuItem,\n        triggerNode: this.props.triggerNode,\n        modalTitle: t('Save Dashboard'),\n        modalBody:\n        ___EmotionJSX(FormGroup, null,\n        ___EmotionJSX(Radio, {\n          value: SAVE_TYPE_OVERWRITE,\n          onChange: this.handleSaveTypeChange,\n          checked: this.state.saveType === SAVE_TYPE_OVERWRITE,\n          disabled: !this.props.canOverwrite },\n\n        t('Overwrite Dashboard [%s]', this.props.dashboardTitle)),\n\n        ___EmotionJSX(\"hr\", null),\n        ___EmotionJSX(Radio, {\n          value: SAVE_TYPE_NEWDASHBOARD,\n          onChange: this.handleSaveTypeChange,\n          checked: this.state.saveType === SAVE_TYPE_NEWDASHBOARD },\n\n        t('Save as:')),\n\n        ___EmotionJSX(FormControl, {\n          type: \"text\",\n          placeholder: t('[dashboard name]'),\n          value: this.state.newDashName,\n          onFocus: this.handleNameChange,\n          onChange: this.handleNameChange }),\n\n        ___EmotionJSX(\"div\", { className: \"m-l-25 m-t-5\" },\n        ___EmotionJSX(Checkbox, {\n          checked: this.state.duplicateSlices,\n          onChange: this.toggleDuplicateSlices }),\n\n        ___EmotionJSX(\"span\", { className: \"m-l-5\" }, t('also copy (duplicate) charts')))),\n\n\n\n        modalFooter:\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Button, { bsStyle: \"primary\", onClick: this.saveDashboard },\n        t('Save'))) }));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSaveModal.propTypes = propTypes;\nSaveModal.defaultProps = defaultProps;const _default =\n\nSaveModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(SaveModal, \"SaveModal\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
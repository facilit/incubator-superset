{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { getChartControlPanelRegistry } from '@superset-ui/chart';\nimport { controls as SHARED_CONTROLS } from './controls';\nimport * as SECTIONS from './controlPanels/sections';\n\nexport function getFormDataFromControls(controlsState) {var _context;\n  const formData = { queryFields: {} };\n  _forEachInstanceProperty(_context = _Object$keys(controlsState)).call(_context, controlName => {\n    const control = controlsState[controlName];\n    formData[controlName] = control.value;\n    if (control.hasOwnProperty('queryField')) {\n      formData.queryFields[controlName] = control.queryField;\n    }\n  });\n  return formData;\n}\n\nexport function validateControl(control) {\n  const validators = control.validators;\n  if (validators && validators.length > 0) {\n    const validatedControl = _Object$assign({}, control);\n    const validationErrors = [];\n    _forEachInstanceProperty(validators).call(validators, f => {\n      const v = f(control.value);\n      if (v) {\n        validationErrors.push(v);\n      }\n    });\n    delete validatedControl.validators;\n    return _Object$assign({}, validatedControl, { validationErrors });\n  }\n  return control;\n}\n\nfunction findCustomControl(controlPanelSections, controlKey) {\n  // find custom control in `controlPanelSections` and apply `controlOverrides` if needed.\n  for (const section of controlPanelSections) {\n    for (const controlArr of section.controlSetRows) {\n      for (const control of controlArr) {\n        if (control != null && typeof control === 'object') {\n          if (control.config && control.name === controlKey) {\n            return control.config;\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport function getControlConfig(controlKey, vizType) {\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  const {\n    controlOverrides = {},\n    controlPanelSections = [] } =\n  controlPanelConfig;\n\n  const config =\n  controlKey in SHARED_CONTROLS ?\n  SHARED_CONTROLS[controlKey] :\n  findCustomControl(controlPanelSections, controlKey);\n\n  return _Object$assign({},\n  config, {},\n  controlOverrides[controlKey]);\n\n}\n\nexport function applyMapStateToPropsToControl(control, state) {\n  if (control.mapStateToProps) {\n    const appliedControl = _Object$assign({}, control);\n    if (state) {\n      _Object$assign(appliedControl, control.mapStateToProps(state, control));\n    }\n    delete appliedControl.mapStateToProps;\n    return appliedControl;\n  }\n  return control;\n}\n\nfunction handleMissingChoice(control) {\n  // If the value is not valid anymore based on choices, clear it\n  const value = control.value;\n  if (\n  control.type === 'SelectControl' &&\n  !control.freeForm &&\n  control.choices &&\n  value)\n  {var _context2;\n    const alteredControl = _Object$assign({}, control);\n    const choiceValues = _mapInstanceProperty(_context2 = control.choices).call(_context2, c => c[0]);\n    if (control.multi && value.length > 0) {\n      alteredControl.value = _filterInstanceProperty(value).call(value, el => _indexOfInstanceProperty(choiceValues).call(choiceValues, el) > -1);\n      return alteredControl;\n    } else if (!control.multi && _indexOfInstanceProperty(choiceValues).call(choiceValues, value) < 0) {\n      alteredControl.value = null;\n      return alteredControl;\n    }\n  }\n  return control;\n}\n\nexport function getControlStateFromControlConfig(controlConfig, state, value) {\n  const controlState = applyMapStateToPropsToControl(_Object$assign({},\n  controlConfig),\n  state);\n\n\n  // If default is a function, evaluate it\n  if (typeof controlState.default === 'function') {\n    controlState.default = controlState.default(controlState);\n  }\n\n  // If a choice control went from multi=false to true, wrap value in array\n  const controlValue =\n  controlConfig.multi && value && !_Array$isArray(value) ? [value] : value;\n  controlState.value =\n  typeof controlValue === 'undefined' ? controlState.default : controlValue;\n\n  return validateControl(handleMissingChoice(controlState));\n}\n\nexport function getControlState(controlKey, vizType, state, value) {\n  return getControlStateFromControlConfig(\n  getControlConfig(controlKey, vizType),\n  state,\n  value);\n\n}\n\nexport function sectionsToRender(vizType, datasourceType) {var _context3, _context4, _context5;\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  const {\n    sectionOverrides = {},\n    controlPanelSections = [] } =\n  controlPanelConfig;\n\n  const sections = _Object$assign({}, SECTIONS);\n\n  _forEachInstanceProperty(_context3 = _Object$entries(sectionOverrides)).call(_context3, ([section, overrides]) => {\n    if (typeof overrides === 'object' && overrides.constructor === Object) {\n      sections[section] = _Object$assign({},\n      sections[section], {},\n      overrides);\n\n    } else {\n      sections[section] = overrides;\n    }\n  });\n\n  const { datasourceAndVizType, sqlaTimeSeries, druidTimeSeries } = sections;\n  const timeSection =\n  datasourceType === 'table' ? sqlaTimeSeries : druidTimeSeries;\n\n  return _filterInstanceProperty(_context4 = _concatInstanceProperty(_context5 = []).call(_context5,\n  datasourceAndVizType, timeSection, controlPanelSections)).call(_context4,\n  section => section);\n}\n\nexport function getAllControlsState(vizType, datasourceType, state, formData) {var _context6;\n  const controlsState = {};\n  _forEachInstanceProperty(_context6 = sectionsToRender(vizType, datasourceType)).call(_context6, section => {var _context7;return (\n      _forEachInstanceProperty(_context7 = section.controlSetRows).call(_context7, (fieldsetRow) =>\n      _forEachInstanceProperty(fieldsetRow).call(fieldsetRow, field => {\n        if (typeof field === 'string') {\n          controlsState[field] = getControlState(\n          field,\n          vizType,\n          state,\n          formData[field]);\n\n        } else if (field != null && typeof field === 'object') {\n          if (field.config && field.name) {\n            const { config, name } = field;\n            controlsState[name] = getControlStateFromControlConfig(\n            config,\n            state,\n            formData[name]);\n\n          }\n        }\n      })));});\n\n\n\n  return controlsState;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getFormDataFromControls, \"getFormDataFromControls\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(validateControl, \"validateControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(findCustomControl, \"findCustomControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(getControlConfig, \"getControlConfig\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(applyMapStateToPropsToControl, \"applyMapStateToPropsToControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(handleMissingChoice, \"handleMissingChoice\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(getControlStateFromControlConfig, \"getControlStateFromControlConfig\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(getControlState, \"getControlState\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(sectionsToRender, \"sectionsToRender\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");reactHotLoader.register(getAllControlsState, \"getAllControlsState\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/controlUtils.js"],"names":["getChartControlPanelRegistry","controls","SHARED_CONTROLS","SECTIONS","getFormDataFromControls","controlsState","formData","queryFields","controlName","control","value","hasOwnProperty","queryField","validateControl","validators","length","validatedControl","validationErrors","f","v","push","findCustomControl","controlPanelSections","controlKey","section","controlArr","controlSetRows","config","name","getControlConfig","vizType","controlPanelConfig","get","controlOverrides","applyMapStateToPropsToControl","state","mapStateToProps","appliedControl","handleMissingChoice","type","freeForm","choices","alteredControl","choiceValues","c","multi","el","getControlStateFromControlConfig","controlConfig","controlState","default","controlValue","getControlState","sectionsToRender","datasourceType","sectionOverrides","sections","overrides","constructor","Object","datasourceAndVizType","sqlaTimeSeries","druidTimeSeries","timeSection","getAllControlsState","fieldsetRow","field"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartControlPanelRegistry } from '@superset-ui/chart';\nimport { controls as SHARED_CONTROLS } from './controls';\nimport * as SECTIONS from './controlPanels/sections';\n\nexport function getFormDataFromControls(controlsState) {\n  const formData = { queryFields: {} };\n  Object.keys(controlsState).forEach(controlName => {\n    const control = controlsState[controlName];\n    formData[controlName] = control.value;\n    if (control.hasOwnProperty('queryField')) {\n      formData.queryFields[controlName] = control.queryField;\n    }\n  });\n  return formData;\n}\n\nexport function validateControl(control) {\n  const validators = control.validators;\n  if (validators && validators.length > 0) {\n    const validatedControl = { ...control };\n    const validationErrors = [];\n    validators.forEach(f => {\n      const v = f(control.value);\n      if (v) {\n        validationErrors.push(v);\n      }\n    });\n    delete validatedControl.validators;\n    return { ...validatedControl, validationErrors };\n  }\n  return control;\n}\n\nfunction findCustomControl(controlPanelSections, controlKey) {\n  // find custom control in `controlPanelSections` and apply `controlOverrides` if needed.\n  for (const section of controlPanelSections) {\n    for (const controlArr of section.controlSetRows) {\n      for (const control of controlArr) {\n        if (control != null && typeof control === 'object') {\n          if (control.config && control.name === controlKey) {\n            return control.config;\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport function getControlConfig(controlKey, vizType) {\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  const {\n    controlOverrides = {},\n    controlPanelSections = [],\n  } = controlPanelConfig;\n\n  const config =\n    controlKey in SHARED_CONTROLS\n      ? SHARED_CONTROLS[controlKey]\n      : findCustomControl(controlPanelSections, controlKey);\n\n  return {\n    ...config,\n    ...controlOverrides[controlKey],\n  };\n}\n\nexport function applyMapStateToPropsToControl(control, state) {\n  if (control.mapStateToProps) {\n    const appliedControl = { ...control };\n    if (state) {\n      Object.assign(appliedControl, control.mapStateToProps(state, control));\n    }\n    delete appliedControl.mapStateToProps;\n    return appliedControl;\n  }\n  return control;\n}\n\nfunction handleMissingChoice(control) {\n  // If the value is not valid anymore based on choices, clear it\n  const value = control.value;\n  if (\n    control.type === 'SelectControl' &&\n    !control.freeForm &&\n    control.choices &&\n    value\n  ) {\n    const alteredControl = { ...control };\n    const choiceValues = control.choices.map(c => c[0]);\n    if (control.multi && value.length > 0) {\n      alteredControl.value = value.filter(el => choiceValues.indexOf(el) > -1);\n      return alteredControl;\n    } else if (!control.multi && choiceValues.indexOf(value) < 0) {\n      alteredControl.value = null;\n      return alteredControl;\n    }\n  }\n  return control;\n}\n\nexport function getControlStateFromControlConfig(controlConfig, state, value) {\n  const controlState = applyMapStateToPropsToControl(\n    { ...controlConfig },\n    state,\n  );\n\n  // If default is a function, evaluate it\n  if (typeof controlState.default === 'function') {\n    controlState.default = controlState.default(controlState);\n  }\n\n  // If a choice control went from multi=false to true, wrap value in array\n  const controlValue =\n    controlConfig.multi && value && !Array.isArray(value) ? [value] : value;\n  controlState.value =\n    typeof controlValue === 'undefined' ? controlState.default : controlValue;\n\n  return validateControl(handleMissingChoice(controlState));\n}\n\nexport function getControlState(controlKey, vizType, state, value) {\n  return getControlStateFromControlConfig(\n    getControlConfig(controlKey, vizType),\n    state,\n    value,\n  );\n}\n\nexport function sectionsToRender(vizType, datasourceType) {\n  const controlPanelConfig = getChartControlPanelRegistry().get(vizType) || {};\n  const {\n    sectionOverrides = {},\n    controlPanelSections = [],\n  } = controlPanelConfig;\n\n  const sections = { ...SECTIONS };\n\n  Object.entries(sectionOverrides).forEach(([section, overrides]) => {\n    if (typeof overrides === 'object' && overrides.constructor === Object) {\n      sections[section] = {\n        ...sections[section],\n        ...overrides,\n      };\n    } else {\n      sections[section] = overrides;\n    }\n  });\n\n  const { datasourceAndVizType, sqlaTimeSeries, druidTimeSeries } = sections;\n  const timeSection =\n    datasourceType === 'table' ? sqlaTimeSeries : druidTimeSeries;\n\n  return []\n    .concat(datasourceAndVizType, timeSection, controlPanelSections)\n    .filter(section => section);\n}\n\nexport function getAllControlsState(vizType, datasourceType, state, formData) {\n  const controlsState = {};\n  sectionsToRender(vizType, datasourceType).forEach(section =>\n    section.controlSetRows.forEach(fieldsetRow =>\n      fieldsetRow.forEach(field => {\n        if (typeof field === 'string') {\n          controlsState[field] = getControlState(\n            field,\n            vizType,\n            state,\n            formData[field],\n          );\n        } else if (field != null && typeof field === 'object') {\n          if (field.config && field.name) {\n            const { config, name } = field;\n            controlsState[name] = getControlStateFromControlConfig(\n              config,\n              state,\n              formData[name],\n            );\n          }\n        }\n      }),\n    ),\n  );\n\n  return controlsState;\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.string.match\";import \"core-js/modules/web.dom-collections.iterator\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _endsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/ends-with\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _startsWithInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/starts-with\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _everyInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/every\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/translation';\n\n\nimport OnPasteSelect from 'src/components/Select/OnPasteSelect';\n\nimport ControlHeader from '../ControlHeader';\nimport MetricDefinitionOption from '../MetricDefinitionOption';\nimport MetricDefinitionValue from '../MetricDefinitionValue';\nimport AdhocMetric from '../../AdhocMetric';\nimport columnType from '../../propTypes/columnType';\nimport savedMetricType from '../../propTypes/savedMetricType';\nimport adhocMetricType from '../../propTypes/adhocMetricType';\nimport {\nAGGREGATES,\nAGGREGATES_OPTIONS,\nsqlaAutoGeneratedMetricNameRegex,\ndruidAutoGeneratedMetricRegex } from\n'../../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, adhocMetricType])),\n  PropTypes.oneOfType([PropTypes.string, adhocMetricType])]),\n\n  columns: PropTypes.arrayOf(columnType),\n  savedMetrics: PropTypes.arrayOf(savedMetricType),\n  multi: PropTypes.bool,\n  clearable: PropTypes.bool,\n  datasourceType: PropTypes.string };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  clearable: true,\n  savedMetrics: [],\n  columns: [] };\n\n\nfunction isDictionaryForAdhocMetric(value) {\n  return value && !(value instanceof AdhocMetric) && value.expressionType;\n}\n\nfunction columnsContainAllMetrics(value, nextProps) {var _context, _context2, _context3, _context4, _context5;\n  const columnNames = new _Set(\n  _mapInstanceProperty(_context = [...(nextProps.columns || []), ...(nextProps.savedMetrics || [])]\n  // eslint-disable-next-line camelcase\n  ).call(_context, ({ column_name, metric_name }) => column_name || metric_name));\n\n\n  return (\n    _everyInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _mapInstanceProperty(_context4 = _filterInstanceProperty(_context5 = _Array$isArray(value) ? value : [value]).call(_context5,\n    metric => metric)\n    // find column names\n    ).call(_context4, (metric) =>\n    metric.column ?\n    metric.column.column_name :\n    metric.column_name || metric)).call(_context3,\n\n    name => name && typeof name === 'string')).call(_context2,\n    name => columnNames.has(name)));\n\n}\n\n// adhoc metrics are stored as dictionaries in URL params. We convert them back into the\n// AdhocMetric class for typechecking, consistency and instance method access.\nfunction coerceAdhocMetrics(value) {\n  if (!value) {\n    return [];\n  }\n  if (!_Array$isArray(value)) {\n    if (isDictionaryForAdhocMetric(value)) {\n      return [new AdhocMetric(value)];\n    }\n    return [value];\n  }\n  return _mapInstanceProperty(value).call(value, val => {\n    if (isDictionaryForAdhocMetric(val)) {\n      return new AdhocMetric(val);\n    }\n    return val;\n  });\n}\n\nfunction getDefaultAggregateForColumn(column) {\n  const type = column.type;\n  if (typeof type !== 'string') {\n    return AGGREGATES.COUNT;\n  } else if (type === '' || type === 'expression') {\n    return AGGREGATES.SUM;\n  } else if (\n  type.match(/.*char.*/i) ||\n  type.match(/string.*/i) ||\n  type.match(/.*text.*/i))\n  {\n    return AGGREGATES.COUNT_DISTINCT;\n  } else if (\n  type.match(/.*int.*/i) ||\n  type === 'LONG' ||\n  type === 'DOUBLE' ||\n  type === 'FLOAT')\n  {\n    return AGGREGATES.SUM;\n  } else if (type.match(/.*bool.*/i)) {\n    return AGGREGATES.MAX;\n  } else if (type.match(/.*time.*/i)) {\n    return AGGREGATES.COUNT;\n  } else if (type.match(/unknown/i)) {\n    return AGGREGATES.COUNT;\n  }\n  return null;\n}\n\nexport default class MetricsControl extends React.PureComponent {\n  constructor(props) {var _context6, _context7, _context8, _context9, _context10, _context11;\n    super(props);\n    this.onChange = _bindInstanceProperty(_context6 = this.onChange).call(_context6, this);\n    this.onMetricEdit = _bindInstanceProperty(_context7 = this.onMetricEdit).call(_context7, this);\n    this.checkIfAggregateInInput = _bindInstanceProperty(_context8 = this.checkIfAggregateInInput).call(_context8, this);\n    this.optionsForSelect = _bindInstanceProperty(_context9 = this.optionsForSelect).call(_context9, this);\n    this.selectFilterOption = _bindInstanceProperty(_context10 = this.selectFilterOption).call(_context10, this);\n    this.isAutoGeneratedMetric = _bindInstanceProperty(_context11 = this.isAutoGeneratedMetric).call(_context11, this);\n    this.optionRenderer = option => ___EmotionJSX(MetricDefinitionOption, { option: option });\n    this.valueRenderer = (option) =>\n    ___EmotionJSX(MetricDefinitionValue, {\n      option: option,\n      onMetricEdit: this.onMetricEdit,\n      columns: this.props.columns,\n      multi: this.props.multi,\n      datasourceType: this.props.datasourceType });\n\n\n    this.select = null;\n    this.selectRef = ref => {\n      if (ref) {\n        this.select = ref.select;\n      } else {\n        this.select = null;\n      }\n    };\n    this.state = {\n      aggregateInInput: null,\n      options: this.optionsForSelect(this.props),\n      value: coerceAdhocMetrics(this.props.value) };\n\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { value } = this.props;\n    if (\n    !_isEqual(this.props.columns, nextProps.columns) ||\n    !_isEqual(this.props.savedMetrics, nextProps.savedMetrics))\n    {\n      this.setState({ options: this.optionsForSelect(nextProps) });\n\n      // Remove metrics if selected value no longer a column\n      const containsAllMetrics = columnsContainAllMetrics(value, nextProps);\n\n      if (!containsAllMetrics) {\n        this.props.onChange([]);\n      }\n    }\n    if (value !== nextProps.value) {\n      this.setState({ value: coerceAdhocMetrics(nextProps.value) });\n    }\n  }\n\n  onMetricEdit(changedMetric) {var _context12;\n    let newValue = _mapInstanceProperty(_context12 = this.state.value).call(_context12, value => {\n      if (value.optionName === changedMetric.optionName) {\n        return changedMetric;\n      }\n      return value;\n    });\n    if (!this.props.multi) {\n      newValue = newValue[0];\n    }\n    this.props.onChange(newValue);\n  }\n\n  onChange(opts) {var _context13;\n    // if clear out options\n    if (opts === null) {\n      this.props.onChange(null);\n      return;\n    }\n\n    let transformedOpts;\n    if (_Array$isArray(opts)) {\n      transformedOpts = opts;\n    } else {\n      transformedOpts = opts ? [opts] : [];\n    }\n    const optionValues = _filterInstanceProperty(_context13 = _mapInstanceProperty(transformedOpts).call(transformedOpts,\n    option => {\n      // pre-defined metric\n      if (option.metric_name) {\n        return option.metric_name;\n      }\n      // adding a new adhoc metric\n      if (option.column_name) {\n        const clearedAggregate = this.clearedAggregateInInput;\n        this.clearedAggregateInInput = null;\n        return new AdhocMetric({\n          isNew: true,\n          column: option,\n          aggregate: clearedAggregate || getDefaultAggregateForColumn(option) });\n\n      }\n      // existing adhoc metric or custom SQL metric\n      if (option instanceof AdhocMetric) {\n        return option;\n      }\n      // start with selecting an aggregate function\n      if (option.aggregate_name && this.select) {\n        const newValue = option.aggregate_name + \"()\";\n        this.select.inputRef.value = newValue;\n        this.select.handleInputChange({ currentTarget: { value: newValue } });\n        // we need to set a timeout here or the selectionWill be overwritten\n        // by some browsers (e.g. Chrome)\n        _setTimeout(() => {\n          this.select.focusInput();\n          this.select.inputRef.selectionStart = newValue.length - 1;\n          this.select.inputRef.selectionEnd = newValue.length - 1;\n        });\n      }\n      return null;\n    })).call(_context13,\n    option => option);\n    this.props.onChange(this.props.multi ? optionValues : optionValues[0]);\n  }\n\n  checkIfAggregateInInput(input) {\n    const lowercaseInput = input.toLowerCase();\n    const aggregateInInput =\n    _findInstanceProperty(AGGREGATES_OPTIONS).call(AGGREGATES_OPTIONS, (x) =>\n    _startsWithInstanceProperty(lowercaseInput).call(lowercaseInput, x.toLowerCase() + \"(\")) ||\n    null;\n    this.clearedAggregateInInput = this.state.aggregateInInput;\n    this.setState({ aggregateInInput });\n  }\n\n  optionsForSelect(props) {\n    const { columns, savedMetrics } = props;\n    const aggregates =\n    columns && columns.length ?\n    _mapInstanceProperty(AGGREGATES_OPTIONS).call(AGGREGATES_OPTIONS, aggregate => ({\n      aggregate_name: aggregate })) :\n\n    [];\n    const options = [\n    ...(columns || []),\n    ...aggregates,\n    ...(savedMetrics || [])];\n\n\n    return _reduceInstanceProperty(options).call(options, (results, option) => {\n      if (option.metric_name) {\n        results.push(_Object$assign({}, option, { optionName: option.metric_name }));\n      } else if (option.column_name) {\n        results.push(_Object$assign({}, option, { optionName: '_col_' + option.column_name }));\n      } else if (option.aggregate_name) {\n        results.push(_Object$assign({},\n        option, {\n          optionName: '_aggregate_' + option.aggregate_name }));\n\n      }\n      return results;\n    }, []);\n  }\n\n  isAutoGeneratedMetric(savedMetric) {\n    if (this.props.datasourceType === 'druid') {\n      return druidAutoGeneratedMetricRegex.test(savedMetric.verbose_name);\n    }\n    return sqlaAutoGeneratedMetricNameRegex.test(savedMetric.metric_name);\n  }\n\n  selectFilterOption({ data: option }, filterValue) {var _context15, _context16;\n    if (this.state.aggregateInInput) {var _context14;\n      let endIndex = filterValue.length;\n      if (_endsWithInstanceProperty(filterValue).call(filterValue, ')')) {\n        endIndex = filterValue.length - 1;\n      }\n      const valueAfterAggregate = filterValue.substring(\n      _indexOfInstanceProperty(filterValue).call(filterValue, '(') + 1,\n      endIndex);\n\n      return (\n        option.column_name &&\n        _indexOfInstanceProperty(_context14 = option.column_name.toLowerCase()).call(_context14, valueAfterAggregate) >= 0);\n\n    }\n    return (\n      option.optionName && (\n      !option.metric_name ||\n      !this.isAutoGeneratedMetric(option) ||\n      option.verbose_name) && (\n      _indexOfInstanceProperty(_context15 = option.optionName.toLowerCase()).call(_context15, filterValue) >= 0 ||\n      option.verbose_name &&\n      _indexOfInstanceProperty(_context16 = option.verbose_name.toLowerCase()).call(_context16, filterValue) >= 0));\n\n  }\n\n  render() {\n    // TODO figure out why the dropdown isnt appearing as soon as a metric is selected\n    return (\n      ___EmotionJSX(\"div\", { className: \"metrics-select\" },\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(OnPasteSelect, {\n        isMulti: this.props.multi,\n        name: \"select-\" + this.props.name,\n        placeholder: t('choose a column or aggregate function'),\n        options: this.state.options,\n        value: this.state.value,\n        labelKey: \"label\",\n        valueKey: \"optionName\",\n        clearable: this.props.clearable,\n        closeOnSelect: true,\n        onChange: this.onChange,\n        optionRenderer: this.optionRenderer,\n        valueRenderer: this.valueRenderer,\n        valueRenderedAsLabel: true,\n        onInputChange: this.checkIfAggregateInInput,\n        filterOption: this.selectFilterOption,\n        selectRef: this.selectRef })));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nMetricsControl.propTypes = propTypes;\nMetricsControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(isDictionaryForAdhocMetric, \"isDictionaryForAdhocMetric\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(columnsContainAllMetrics, \"columnsContainAllMetrics\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(coerceAdhocMetrics, \"coerceAdhocMetrics\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(getDefaultAggregateForColumn, \"getDefaultAggregateForColumn\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");reactHotLoader.register(MetricsControl, \"MetricsControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/MetricsControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/es.regexp.to-string\";import \"core-js/modules/web.dom-collections.iterator\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\neither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint no-undef: 'error' */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport URI from 'urijs';\nimport moment from 'moment';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport { isFeatureEnabled, FeatureFlag } from '../featureFlags';\nimport {\ngetAnnotationJsonUrl,\ngetExploreUrl,\ngetHostName,\ngetLegacyEndpointType,\nbuildV1ChartDataPayload,\npostForm,\nshouldUseLegacyApi,\ngetChartDataUri } from\n'../explore/exploreUtils';\nimport {\nrequiresQuery,\nANNOTATION_SOURCE_TYPES } from\n'../modules/AnnotationTypes';\n\nimport { addDangerToast } from '../messageToasts/actions';\nimport { logEvent } from '../logger/actions';\nimport { Logger, LOG_ACTIONS_LOAD_CHART } from '../logger/LogUtils';\nimport getClientErrorObject from '../utils/getClientErrorObject';\nimport { allowCrossDomain as allowDomainSharding } from '../utils/hostNamesConfig';\n\nexport const CHART_UPDATE_STARTED = 'CHART_UPDATE_STARTED';\nexport function chartUpdateStarted(queryController, latestQueryFormData, key) {\n  return {\n    type: CHART_UPDATE_STARTED,\n    queryController,\n    latestQueryFormData,\n    key };\n\n}\n\nexport const CHART_UPDATE_SUCCEEDED = 'CHART_UPDATE_SUCCEEDED';\nexport function chartUpdateSucceeded(queryResponse, key) {\n  return { type: CHART_UPDATE_SUCCEEDED, queryResponse, key };\n}\n\nexport const CHART_UPDATE_STOPPED = 'CHART_UPDATE_STOPPED';\nexport function chartUpdateStopped(key) {\n  return { type: CHART_UPDATE_STOPPED, key };\n}\n\nexport const CHART_UPDATE_TIMEOUT = 'CHART_UPDATE_TIMEOUT';\nexport function chartUpdateTimeout(statusText, timeout, key) {\n  return { type: CHART_UPDATE_TIMEOUT, statusText, timeout, key };\n}\n\nexport const CHART_UPDATE_FAILED = 'CHART_UPDATE_FAILED';\nexport function chartUpdateFailed(queryResponse, key) {\n  return { type: CHART_UPDATE_FAILED, queryResponse, key };\n}\n\nexport const CHART_RENDERING_FAILED = 'CHART_RENDERING_FAILED';\nexport function chartRenderingFailed(error, key, stackTrace) {\n  return { type: CHART_RENDERING_FAILED, error, key, stackTrace };\n}\n\nexport const CHART_RENDERING_SUCCEEDED = 'CHART_RENDERING_SUCCEEDED';\nexport function chartRenderingSucceeded(key) {\n  return { type: CHART_RENDERING_SUCCEEDED, key };\n}\n\nexport const REMOVE_CHART = 'REMOVE_CHART';\nexport function removeChart(key) {\n  return { type: REMOVE_CHART, key };\n}\n\nexport const ANNOTATION_QUERY_SUCCESS = 'ANNOTATION_QUERY_SUCCESS';\nexport function annotationQuerySuccess(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_SUCCESS, annotation, queryResponse, key };\n}\n\nexport const ANNOTATION_QUERY_STARTED = 'ANNOTATION_QUERY_STARTED';\nexport function annotationQueryStarted(annotation, queryController, key) {\n  return { type: ANNOTATION_QUERY_STARTED, annotation, queryController, key };\n}\n\nexport const ANNOTATION_QUERY_FAILED = 'ANNOTATION_QUERY_FAILED';\nexport function annotationQueryFailed(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_FAILED, annotation, queryResponse, key };\n}\n\nconst legacyChartDataRequest = async (\nformData,\nresultFormat,\nresultType,\nforce,\nmethod = 'POST',\nrequestParams = {}) =>\n{\n  const endpointType = getLegacyEndpointType({ resultFormat, resultType });\n  const url = getExploreUrl({\n    formData,\n    endpointType,\n    force,\n    allowDomainSharding,\n    method,\n    requestParams: requestParams.dashboard_id ?\n    { dashboard_id: requestParams.dashboard_id } :\n    {} });\n\n  const querySettings = _Object$assign({},\n  requestParams, {\n    url,\n    postPayload: { form_data: formData } });\n\n\n  const clientMethod =\n  'GET' && isFeatureEnabled(FeatureFlag.CLIENT_CACHE) ?\n  SupersetClient.get :\n  SupersetClient.post;\n  return clientMethod(querySettings).then(({ json }) => {\n    // Make the legacy endpoint return a payload that corresponds to the\n    // V1 chart data endpoint response signature.\n    return {\n      result: [json] };\n\n  });\n};\n\nconst v1ChartDataRequest = async (\nformData,\nresultFormat,\nresultType,\nforce,\nrequestParams) =>\n{\n  const payload = buildV1ChartDataPayload({\n    formData,\n    resultType,\n    resultFormat,\n    force });\n\n\n  // The dashboard id is added to query params for tracking purposes\n  const qs = requestParams.dashboard_id ?\n  { dashboard_id: requestParams.dashboard_id } :\n  {};\n  const url = getChartDataUri({\n    path: '/api/v1/chart/data',\n    qs,\n    allowDomainSharding }).\n  toString();\n\n  const querySettings = _Object$assign({},\n  requestParams, {\n    url,\n    headers: { 'Content-Type': 'application/json' },\n    body: _JSON$stringify(payload) });\n\n  return SupersetClient.post(querySettings).then(({ json }) => {\n    return json;\n  });\n};\n\nexport async function getChartDataRequest({\n  formData,\n  resultFormat = 'json',\n  resultType = 'full',\n  force = false,\n  method = 'POST',\n  requestParams = {} })\n{\n  let querySettings = _Object$assign({},\n  requestParams);\n\n\n  if (allowDomainSharding) {\n    querySettings = _Object$assign({},\n    querySettings, {\n      mode: 'cors',\n      credentials: 'include' });\n\n  }\n\n  if (shouldUseLegacyApi(formData)) {\n    return legacyChartDataRequest(\n    formData,\n    resultFormat,\n    resultType,\n    force,\n    method,\n    querySettings);\n\n  }\n  return v1ChartDataRequest(\n  formData,\n  resultFormat,\n  resultType,\n  force,\n  querySettings);\n\n}\n\nexport function runAnnotationQuery(\nannotation,\ntimeout = 60,\nformData = null,\nkey,\nisDashboardRequest = false)\n{\n  return function (dispatch, getState) {var _context;\n    const sliceKey = key || _Object$keys(getState().charts)[0];\n    // make a copy of formData, not modifying original formData\n    const fd = _Object$assign({},\n    formData || getState().charts[sliceKey].latestQueryFormData);\n\n\n    if (!requiresQuery(annotation.sourceType)) {\n      return _Promise.resolve();\n    }\n\n    const granularity = fd.time_grain_sqla || fd.granularity;\n    fd.time_grain_sqla = granularity;\n    fd.granularity = granularity;\n    const overridesKeys = _Object$keys(annotation.overrides);\n    if (_includesInstanceProperty(overridesKeys).call(overridesKeys, 'since') || _includesInstanceProperty(overridesKeys).call(overridesKeys, 'until')) {\n      annotation.overrides = _Object$assign({},\n      annotation.overrides, {\n        time_range: null });\n\n    }\n    const sliceFormData = _reduceInstanceProperty(_context = _Object$keys(annotation.overrides)).call(_context,\n    (d, k) => _Object$assign({},\n    d, {\n      [k]: annotation.overrides[k] || fd[k] }),\n\n    {});\n\n\n    if (!isDashboardRequest && fd) {\n      const hasExtraFilters = fd.extra_filters && fd.extra_filters.length > 0;\n      sliceFormData.extra_filters = hasExtraFilters ?\n      fd.extra_filters :\n      undefined;\n    }\n\n    const isNative = annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE;\n    const url = getAnnotationJsonUrl(annotation.value, sliceFormData, isNative);\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    dispatch(annotationQueryStarted(annotation, controller, sliceKey));\n\n    return SupersetClient.get({\n      url,\n      signal,\n      timeout: timeout * 1000 }).\n\n    then(({ json }) =>\n    dispatch(annotationQuerySuccess(annotation, json, sliceKey))).\n\n    catch((response) =>\n    getClientErrorObject(response).then(err => {var _context2;\n      if (err.statusText === 'timeout') {\n        dispatch(\n        annotationQueryFailed(\n        annotation,\n        { error: 'Query Timeout' },\n        sliceKey));\n\n\n      } else if (_includesInstanceProperty(_context2 = (err.error || '').toLowerCase()).call(_context2, 'no data')) {\n        dispatch(annotationQuerySuccess(annotation, err, sliceKey));\n      } else if (err.statusText !== 'abort') {\n        dispatch(annotationQueryFailed(annotation, err, sliceKey));\n      }\n    }));\n\n  };\n}\n\nexport const TRIGGER_QUERY = 'TRIGGER_QUERY';\nexport function triggerQuery(value = true, key) {\n  return { type: TRIGGER_QUERY, value, key };\n}\n\n// this action is used for forced re-render without fetch data\nexport const RENDER_TRIGGERED = 'RENDER_TRIGGERED';\nexport function renderTriggered(value, key) {\n  return { type: RENDER_TRIGGERED, value, key };\n}\n\nexport const UPDATE_QUERY_FORM_DATA = 'UPDATE_QUERY_FORM_DATA';\nexport function updateQueryFormData(value, key) {\n  return { type: UPDATE_QUERY_FORM_DATA, value, key };\n}\n\n// in the sql lab -> explore flow, user can inline edit chart title,\n// then the chart will be assigned a new slice_id\nexport const UPDATE_CHART_ID = 'UPDATE_CHART_ID';\nexport function updateChartId(newId, key = 0) {\n  return { type: UPDATE_CHART_ID, newId, key };\n}\n\nexport const ADD_CHART = 'ADD_CHART';\nexport function addChart(chart, key) {\n  return { type: ADD_CHART, chart, key };\n}\n\nexport function exploreJSON(\nformData,\nforce = false,\ntimeout = 60,\nkey,\nmethod,\ndashboardId)\n{\n  return async dispatch => {\n    const logStart = Logger.getTimestamp();\n    const controller = new AbortController();\n\n    const requestParams = {\n      signal: controller.signal,\n      timeout: timeout * 1000 };\n\n    if (dashboardId) requestParams.dashboard_id = dashboardId;\n\n    const chartDataRequest = getChartDataRequest({\n      formData,\n      resultFormat: 'json',\n      resultType: 'full',\n      force,\n      method,\n      requestParams });\n\n\n    dispatch(chartUpdateStarted(controller, formData, key));\n\n    const chartDataRequestCaught = chartDataRequest.\n    then(response => {\n      // new API returns an object with an array of restults\n      // problem: response holds a list of results, when before we were just getting one result.\n      // How to make the entire app compatible with multiple results?\n      // For now just use the first result.\n      const result = response.result[0];\n      dispatch(\n      logEvent(LOG_ACTIONS_LOAD_CHART, {\n        slice_id: key,\n        is_cached: result.is_cached,\n        force_refresh: force,\n        row_count: result.rowcount,\n        datasource: formData.datasource,\n        start_offset: logStart,\n        ts: new Date().getTime(),\n        duration: Logger.getTimestamp() - logStart,\n        has_extra_filters:\n        formData.extra_filters && formData.extra_filters.length > 0,\n        viz_type: formData.viz_type,\n        data_age: result.is_cached ?\n        moment(new Date()).diff(moment.utc(result.cached_dttm)) :\n        null }));\n\n\n      return dispatch(chartUpdateSucceeded(result, key));\n    }).\n    catch(response => {\n      const appendErrorLog = (errorDetails, isCached) => {\n        dispatch(\n        logEvent(LOG_ACTIONS_LOAD_CHART, {\n          slice_id: key,\n          has_err: true,\n          is_cached: isCached,\n          error_details: errorDetails,\n          datasource: formData.datasource,\n          start_offset: logStart,\n          ts: new Date().getTime(),\n          duration: Logger.getTimestamp() - logStart }));\n\n\n      };\n\n      if (response.statusText === 'timeout') {\n        appendErrorLog('timeout');\n        return dispatch(\n        chartUpdateTimeout(response.statusText, timeout, key));\n\n      } else if (response.name === 'AbortError') {\n        appendErrorLog('abort');\n        return dispatch(chartUpdateStopped(key));\n      }\n      return getClientErrorObject(response).then(parsedResponse => {\n        // query is processed, but error out.\n        appendErrorLog(parsedResponse.error, parsedResponse.is_cached);\n        return dispatch(chartUpdateFailed(parsedResponse, key));\n      });\n    });\n\n    const annotationLayers = formData.annotation_layers || [];\n    const isDashboardRequest = dashboardId > 0;\n\n    return _Promise.all([\n    chartDataRequestCaught,\n    dispatch(triggerQuery(false, key)),\n    dispatch(updateQueryFormData(formData, key)),\n    ..._mapInstanceProperty(annotationLayers).call(annotationLayers, (x) =>\n    dispatch(\n    runAnnotationQuery(x, timeout, formData, key, isDashboardRequest)))]);\n\n\n\n  };\n}\n\nexport const GET_SAVED_CHART = 'GET_SAVED_CHART';\nexport function getSavedChart(\nformData,\nforce = false,\ntimeout = 60,\nkey,\ndashboardId)\n{\n  /*\n   * Perform a GET request to `/explore_json`.\n   *\n   * This will return the payload of a saved chart, optionally filtered by\n   * ad-hoc or extra filters from dashboards. Eg:\n   *\n   *  GET  /explore_json?{\"chart_id\":1}\n   *  GET  /explore_json?{\"chart_id\":1,\"extra_filters\":\"...\"}\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'GET', dashboardId);\n}\n\nexport const POST_CHART_FORM_DATA = 'POST_CHART_FORM_DATA';\nexport function postChartFormData(\nformData,\nforce = false,\ntimeout = 60,\nkey,\ndashboardId)\n{\n  /*\n   * Perform a POST request to `/explore_json`.\n   *\n   * This will post the form data to the endpoint, returning a new chart.\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'POST', dashboardId);\n}\n\nexport function redirectSQLLab(formData) {\n  return dispatch => {\n    getChartDataRequest({ formData, resultFormat: 'json', resultType: 'query' }).\n    then(({ result }) => {\n      const redirectUrl = '/superset/sqllab';\n      const payload = {\n        datasourceKey: formData.datasource,\n        sql: result[0].query };\n\n      postForm(redirectUrl, payload);\n    }).\n    catch(() =>\n    dispatch(addDangerToast(t('An error occurred while loading the SQL'))));\n\n  };\n}\n\nexport function refreshChart(chartKey, force, dashboardId) {\n  return (dispatch, getState) => {\n    const chart = (getState().charts || {})[chartKey];\n    const timeout = getState().dashboardInfo.common.conf.\n    SUPERSET_WEBSERVER_TIMEOUT;\n\n    if (\n    !chart.latestQueryFormData ||\n    _Object$keys(chart.latestQueryFormData).length === 0)\n    {\n      return;\n    }\n    dispatch(\n    postChartFormData(\n    chart.latestQueryFormData,\n    force,\n    timeout,\n    chart.id,\n    dashboardId));\n\n\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_UPDATE_STARTED, \"CHART_UPDATE_STARTED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateStarted, \"chartUpdateStarted\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_SUCCEEDED, \"CHART_UPDATE_SUCCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateSucceeded, \"chartUpdateSucceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_STOPPED, \"CHART_UPDATE_STOPPED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateStopped, \"chartUpdateStopped\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_TIMEOUT, \"CHART_UPDATE_TIMEOUT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateTimeout, \"chartUpdateTimeout\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_UPDATE_FAILED, \"CHART_UPDATE_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartUpdateFailed, \"chartUpdateFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_RENDERING_FAILED, \"CHART_RENDERING_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartRenderingFailed, \"chartRenderingFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(CHART_RENDERING_SUCCEEDED, \"CHART_RENDERING_SUCCEEDED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(chartRenderingSucceeded, \"chartRenderingSucceeded\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(REMOVE_CHART, \"REMOVE_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(removeChart, \"removeChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_SUCCESS, \"ANNOTATION_QUERY_SUCCESS\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQuerySuccess, \"annotationQuerySuccess\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_STARTED, \"ANNOTATION_QUERY_STARTED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQueryStarted, \"annotationQueryStarted\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ANNOTATION_QUERY_FAILED, \"ANNOTATION_QUERY_FAILED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(annotationQueryFailed, \"annotationQueryFailed\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(legacyChartDataRequest, \"legacyChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(v1ChartDataRequest, \"v1ChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(getChartDataRequest, \"getChartDataRequest\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(runAnnotationQuery, \"runAnnotationQuery\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(TRIGGER_QUERY, \"TRIGGER_QUERY\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(triggerQuery, \"triggerQuery\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(RENDER_TRIGGERED, \"RENDER_TRIGGERED\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(renderTriggered, \"renderTriggered\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(UPDATE_QUERY_FORM_DATA, \"UPDATE_QUERY_FORM_DATA\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(updateQueryFormData, \"updateQueryFormData\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(UPDATE_CHART_ID, \"UPDATE_CHART_ID\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(updateChartId, \"updateChartId\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(ADD_CHART, \"ADD_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(addChart, \"addChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(exploreJSON, \"exploreJSON\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(GET_SAVED_CHART, \"GET_SAVED_CHART\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(getSavedChart, \"getSavedChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(POST_CHART_FORM_DATA, \"POST_CHART_FORM_DATA\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(postChartFormData, \"postChartFormData\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(redirectSQLLab, \"redirectSQLLab\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");reactHotLoader.register(refreshChart, \"refreshChart\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/chart/chartAction.js"],"names":["URI","moment","t","SupersetClient","isFeatureEnabled","FeatureFlag","getAnnotationJsonUrl","getExploreUrl","getHostName","getLegacyEndpointType","buildV1ChartDataPayload","postForm","shouldUseLegacyApi","getChartDataUri","requiresQuery","ANNOTATION_SOURCE_TYPES","addDangerToast","logEvent","Logger","LOG_ACTIONS_LOAD_CHART","getClientErrorObject","allowCrossDomain","allowDomainSharding","CHART_UPDATE_STARTED","chartUpdateStarted","queryController","latestQueryFormData","key","type","CHART_UPDATE_SUCCEEDED","chartUpdateSucceeded","queryResponse","CHART_UPDATE_STOPPED","chartUpdateStopped","CHART_UPDATE_TIMEOUT","chartUpdateTimeout","statusText","timeout","CHART_UPDATE_FAILED","chartUpdateFailed","CHART_RENDERING_FAILED","chartRenderingFailed","error","stackTrace","CHART_RENDERING_SUCCEEDED","chartRenderingSucceeded","REMOVE_CHART","removeChart","ANNOTATION_QUERY_SUCCESS","annotationQuerySuccess","annotation","ANNOTATION_QUERY_STARTED","annotationQueryStarted","ANNOTATION_QUERY_FAILED","annotationQueryFailed","legacyChartDataRequest","formData","resultFormat","resultType","force","method","requestParams","endpointType","url","dashboard_id","querySettings","postPayload","form_data","clientMethod","CLIENT_CACHE","get","post","then","json","result","v1ChartDataRequest","payload","qs","path","toString","headers","body","getChartDataRequest","mode","credentials","runAnnotationQuery","isDashboardRequest","dispatch","getState","sliceKey","charts","fd","sourceType","resolve","granularity","time_grain_sqla","overridesKeys","overrides","time_range","sliceFormData","d","k","hasExtraFilters","extra_filters","length","undefined","isNative","NATIVE","value","controller","AbortController","signal","catch","response","err","toLowerCase","TRIGGER_QUERY","triggerQuery","RENDER_TRIGGERED","renderTriggered","UPDATE_QUERY_FORM_DATA","updateQueryFormData","UPDATE_CHART_ID","updateChartId","newId","ADD_CHART","addChart","chart","exploreJSON","dashboardId","logStart","getTimestamp","chartDataRequest","chartDataRequestCaught","slice_id","is_cached","force_refresh","row_count","rowcount","datasource","start_offset","ts","Date","getTime","duration","has_extra_filters","viz_type","data_age","diff","utc","cached_dttm","appendErrorLog","errorDetails","isCached","has_err","error_details","name","parsedResponse","annotationLayers","annotation_layers","all","x","GET_SAVED_CHART","getSavedChart","POST_CHART_FORM_DATA","postChartFormData","redirectSQLLab","redirectUrl","datasourceKey","sql","query","refreshChart","chartKey","dashboardInfo","common","conf","SUPERSET_WEBSERVER_TIMEOUT","id"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-undef: 'error' */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport URI from 'urijs';\nimport moment from 'moment';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport { isFeatureEnabled, FeatureFlag } from '../featureFlags';\nimport {\n  getAnnotationJsonUrl,\n  getExploreUrl,\n  getHostName,\n  getLegacyEndpointType,\n  buildV1ChartDataPayload,\n  postForm,\n  shouldUseLegacyApi,\n  getChartDataUri,\n} from '../explore/exploreUtils';\nimport {\n  requiresQuery,\n  ANNOTATION_SOURCE_TYPES,\n} from '../modules/AnnotationTypes';\n\nimport { addDangerToast } from '../messageToasts/actions';\nimport { logEvent } from '../logger/actions';\nimport { Logger, LOG_ACTIONS_LOAD_CHART } from '../logger/LogUtils';\nimport getClientErrorObject from '../utils/getClientErrorObject';\nimport { allowCrossDomain as allowDomainSharding } from '../utils/hostNamesConfig';\n\nexport const CHART_UPDATE_STARTED = 'CHART_UPDATE_STARTED';\nexport function chartUpdateStarted(queryController, latestQueryFormData, key) {\n  return {\n    type: CHART_UPDATE_STARTED,\n    queryController,\n    latestQueryFormData,\n    key,\n  };\n}\n\nexport const CHART_UPDATE_SUCCEEDED = 'CHART_UPDATE_SUCCEEDED';\nexport function chartUpdateSucceeded(queryResponse, key) {\n  return { type: CHART_UPDATE_SUCCEEDED, queryResponse, key };\n}\n\nexport const CHART_UPDATE_STOPPED = 'CHART_UPDATE_STOPPED';\nexport function chartUpdateStopped(key) {\n  return { type: CHART_UPDATE_STOPPED, key };\n}\n\nexport const CHART_UPDATE_TIMEOUT = 'CHART_UPDATE_TIMEOUT';\nexport function chartUpdateTimeout(statusText, timeout, key) {\n  return { type: CHART_UPDATE_TIMEOUT, statusText, timeout, key };\n}\n\nexport const CHART_UPDATE_FAILED = 'CHART_UPDATE_FAILED';\nexport function chartUpdateFailed(queryResponse, key) {\n  return { type: CHART_UPDATE_FAILED, queryResponse, key };\n}\n\nexport const CHART_RENDERING_FAILED = 'CHART_RENDERING_FAILED';\nexport function chartRenderingFailed(error, key, stackTrace) {\n  return { type: CHART_RENDERING_FAILED, error, key, stackTrace };\n}\n\nexport const CHART_RENDERING_SUCCEEDED = 'CHART_RENDERING_SUCCEEDED';\nexport function chartRenderingSucceeded(key) {\n  return { type: CHART_RENDERING_SUCCEEDED, key };\n}\n\nexport const REMOVE_CHART = 'REMOVE_CHART';\nexport function removeChart(key) {\n  return { type: REMOVE_CHART, key };\n}\n\nexport const ANNOTATION_QUERY_SUCCESS = 'ANNOTATION_QUERY_SUCCESS';\nexport function annotationQuerySuccess(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_SUCCESS, annotation, queryResponse, key };\n}\n\nexport const ANNOTATION_QUERY_STARTED = 'ANNOTATION_QUERY_STARTED';\nexport function annotationQueryStarted(annotation, queryController, key) {\n  return { type: ANNOTATION_QUERY_STARTED, annotation, queryController, key };\n}\n\nexport const ANNOTATION_QUERY_FAILED = 'ANNOTATION_QUERY_FAILED';\nexport function annotationQueryFailed(annotation, queryResponse, key) {\n  return { type: ANNOTATION_QUERY_FAILED, annotation, queryResponse, key };\n}\n\nconst legacyChartDataRequest = async (\n  formData,\n  resultFormat,\n  resultType,\n  force,\n  method = 'POST',\n  requestParams = {},\n) => {\n  const endpointType = getLegacyEndpointType({ resultFormat, resultType });\n  const url = getExploreUrl({\n    formData,\n    endpointType,\n    force,\n    allowDomainSharding,\n    method,\n    requestParams: requestParams.dashboard_id\n      ? { dashboard_id: requestParams.dashboard_id }\n      : {},\n  });\n  const querySettings = {\n    ...requestParams,\n    url,\n    postPayload: { form_data: formData },\n  };\n\n  const clientMethod =\n    'GET' && isFeatureEnabled(FeatureFlag.CLIENT_CACHE)\n      ? SupersetClient.get\n      : SupersetClient.post;\n  return clientMethod(querySettings).then(({ json }) => {\n    // Make the legacy endpoint return a payload that corresponds to the\n    // V1 chart data endpoint response signature.\n    return {\n      result: [json],\n    };\n  });\n};\n\nconst v1ChartDataRequest = async (\n  formData,\n  resultFormat,\n  resultType,\n  force,\n  requestParams,\n) => {\n  const payload = buildV1ChartDataPayload({\n    formData,\n    resultType,\n    resultFormat,\n    force,\n  });\n\n  // The dashboard id is added to query params for tracking purposes\n  const qs = requestParams.dashboard_id\n    ? { dashboard_id: requestParams.dashboard_id }\n    : {};\n  const url = getChartDataUri({\n    path: '/api/v1/chart/data',\n    qs,\n    allowDomainSharding,\n  }).toString();\n\n  const querySettings = {\n    ...requestParams,\n    url,\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload),\n  };\n  return SupersetClient.post(querySettings).then(({ json }) => {\n    return json;\n  });\n};\n\nexport async function getChartDataRequest({\n  formData,\n  resultFormat = 'json',\n  resultType = 'full',\n  force = false,\n  method = 'POST',\n  requestParams = {},\n}) {\n  let querySettings = {\n    ...requestParams,\n  };\n\n  if (allowDomainSharding) {\n    querySettings = {\n      ...querySettings,\n      mode: 'cors',\n      credentials: 'include',\n    };\n  }\n\n  if (shouldUseLegacyApi(formData)) {\n    return legacyChartDataRequest(\n      formData,\n      resultFormat,\n      resultType,\n      force,\n      method,\n      querySettings,\n    );\n  }\n  return v1ChartDataRequest(\n    formData,\n    resultFormat,\n    resultType,\n    force,\n    querySettings,\n  );\n}\n\nexport function runAnnotationQuery(\n  annotation,\n  timeout = 60,\n  formData = null,\n  key,\n  isDashboardRequest = false,\n) {\n  return function (dispatch, getState) {\n    const sliceKey = key || Object.keys(getState().charts)[0];\n    // make a copy of formData, not modifying original formData\n    const fd = {\n      ...(formData || getState().charts[sliceKey].latestQueryFormData),\n    };\n\n    if (!requiresQuery(annotation.sourceType)) {\n      return Promise.resolve();\n    }\n\n    const granularity = fd.time_grain_sqla || fd.granularity;\n    fd.time_grain_sqla = granularity;\n    fd.granularity = granularity;\n    const overridesKeys = Object.keys(annotation.overrides);\n    if (overridesKeys.includes('since') || overridesKeys.includes('until')) {\n      annotation.overrides = {\n        ...annotation.overrides,\n        time_range: null,\n      };\n    }\n    const sliceFormData = Object.keys(annotation.overrides).reduce(\n      (d, k) => ({\n        ...d,\n        [k]: annotation.overrides[k] || fd[k],\n      }),\n      {},\n    );\n\n    if (!isDashboardRequest && fd) {\n      const hasExtraFilters = fd.extra_filters && fd.extra_filters.length > 0;\n      sliceFormData.extra_filters = hasExtraFilters\n        ? fd.extra_filters\n        : undefined;\n    }\n\n    const isNative = annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE;\n    const url = getAnnotationJsonUrl(annotation.value, sliceFormData, isNative);\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    dispatch(annotationQueryStarted(annotation, controller, sliceKey));\n\n    return SupersetClient.get({\n      url,\n      signal,\n      timeout: timeout * 1000,\n    })\n      .then(({ json }) =>\n        dispatch(annotationQuerySuccess(annotation, json, sliceKey)),\n      )\n      .catch(response =>\n        getClientErrorObject(response).then(err => {\n          if (err.statusText === 'timeout') {\n            dispatch(\n              annotationQueryFailed(\n                annotation,\n                { error: 'Query Timeout' },\n                sliceKey,\n              ),\n            );\n          } else if ((err.error || '').toLowerCase().includes('no data')) {\n            dispatch(annotationQuerySuccess(annotation, err, sliceKey));\n          } else if (err.statusText !== 'abort') {\n            dispatch(annotationQueryFailed(annotation, err, sliceKey));\n          }\n        }),\n      );\n  };\n}\n\nexport const TRIGGER_QUERY = 'TRIGGER_QUERY';\nexport function triggerQuery(value = true, key) {\n  return { type: TRIGGER_QUERY, value, key };\n}\n\n// this action is used for forced re-render without fetch data\nexport const RENDER_TRIGGERED = 'RENDER_TRIGGERED';\nexport function renderTriggered(value, key) {\n  return { type: RENDER_TRIGGERED, value, key };\n}\n\nexport const UPDATE_QUERY_FORM_DATA = 'UPDATE_QUERY_FORM_DATA';\nexport function updateQueryFormData(value, key) {\n  return { type: UPDATE_QUERY_FORM_DATA, value, key };\n}\n\n// in the sql lab -> explore flow, user can inline edit chart title,\n// then the chart will be assigned a new slice_id\nexport const UPDATE_CHART_ID = 'UPDATE_CHART_ID';\nexport function updateChartId(newId, key = 0) {\n  return { type: UPDATE_CHART_ID, newId, key };\n}\n\nexport const ADD_CHART = 'ADD_CHART';\nexport function addChart(chart, key) {\n  return { type: ADD_CHART, chart, key };\n}\n\nexport function exploreJSON(\n  formData,\n  force = false,\n  timeout = 60,\n  key,\n  method,\n  dashboardId,\n) {\n  return async dispatch => {\n    const logStart = Logger.getTimestamp();\n    const controller = new AbortController();\n\n    const requestParams = {\n      signal: controller.signal,\n      timeout: timeout * 1000,\n    };\n    if (dashboardId) requestParams.dashboard_id = dashboardId;\n\n    const chartDataRequest = getChartDataRequest({\n      formData,\n      resultFormat: 'json',\n      resultType: 'full',\n      force,\n      method,\n      requestParams,\n    });\n\n    dispatch(chartUpdateStarted(controller, formData, key));\n\n    const chartDataRequestCaught = chartDataRequest\n      .then(response => {\n        // new API returns an object with an array of restults\n        // problem: response holds a list of results, when before we were just getting one result.\n        // How to make the entire app compatible with multiple results?\n        // For now just use the first result.\n        const result = response.result[0];\n        dispatch(\n          logEvent(LOG_ACTIONS_LOAD_CHART, {\n            slice_id: key,\n            is_cached: result.is_cached,\n            force_refresh: force,\n            row_count: result.rowcount,\n            datasource: formData.datasource,\n            start_offset: logStart,\n            ts: new Date().getTime(),\n            duration: Logger.getTimestamp() - logStart,\n            has_extra_filters:\n              formData.extra_filters && formData.extra_filters.length > 0,\n            viz_type: formData.viz_type,\n            data_age: result.is_cached\n              ? moment(new Date()).diff(moment.utc(result.cached_dttm))\n              : null,\n          }),\n        );\n        return dispatch(chartUpdateSucceeded(result, key));\n      })\n      .catch(response => {\n        const appendErrorLog = (errorDetails, isCached) => {\n          dispatch(\n            logEvent(LOG_ACTIONS_LOAD_CHART, {\n              slice_id: key,\n              has_err: true,\n              is_cached: isCached,\n              error_details: errorDetails,\n              datasource: formData.datasource,\n              start_offset: logStart,\n              ts: new Date().getTime(),\n              duration: Logger.getTimestamp() - logStart,\n            }),\n          );\n        };\n\n        if (response.statusText === 'timeout') {\n          appendErrorLog('timeout');\n          return dispatch(\n            chartUpdateTimeout(response.statusText, timeout, key),\n          );\n        } else if (response.name === 'AbortError') {\n          appendErrorLog('abort');\n          return dispatch(chartUpdateStopped(key));\n        }\n        return getClientErrorObject(response).then(parsedResponse => {\n          // query is processed, but error out.\n          appendErrorLog(parsedResponse.error, parsedResponse.is_cached);\n          return dispatch(chartUpdateFailed(parsedResponse, key));\n        });\n      });\n\n    const annotationLayers = formData.annotation_layers || [];\n    const isDashboardRequest = dashboardId > 0;\n\n    return Promise.all([\n      chartDataRequestCaught,\n      dispatch(triggerQuery(false, key)),\n      dispatch(updateQueryFormData(formData, key)),\n      ...annotationLayers.map(x =>\n        dispatch(\n          runAnnotationQuery(x, timeout, formData, key, isDashboardRequest),\n        ),\n      ),\n    ]);\n  };\n}\n\nexport const GET_SAVED_CHART = 'GET_SAVED_CHART';\nexport function getSavedChart(\n  formData,\n  force = false,\n  timeout = 60,\n  key,\n  dashboardId,\n) {\n  /*\n   * Perform a GET request to `/explore_json`.\n   *\n   * This will return the payload of a saved chart, optionally filtered by\n   * ad-hoc or extra filters from dashboards. Eg:\n   *\n   *  GET  /explore_json?{\"chart_id\":1}\n   *  GET  /explore_json?{\"chart_id\":1,\"extra_filters\":\"...\"}\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'GET', dashboardId);\n}\n\nexport const POST_CHART_FORM_DATA = 'POST_CHART_FORM_DATA';\nexport function postChartFormData(\n  formData,\n  force = false,\n  timeout = 60,\n  key,\n  dashboardId,\n) {\n  /*\n   * Perform a POST request to `/explore_json`.\n   *\n   * This will post the form data to the endpoint, returning a new chart.\n   *\n   */\n  return exploreJSON(formData, force, timeout, key, 'POST', dashboardId);\n}\n\nexport function redirectSQLLab(formData) {\n  return dispatch => {\n    getChartDataRequest({ formData, resultFormat: 'json', resultType: 'query' })\n      .then(({ result }) => {\n        const redirectUrl = '/superset/sqllab';\n        const payload = {\n          datasourceKey: formData.datasource,\n          sql: result[0].query,\n        };\n        postForm(redirectUrl, payload);\n      })\n      .catch(() =>\n        dispatch(addDangerToast(t('An error occurred while loading the SQL'))),\n      );\n  };\n}\n\nexport function refreshChart(chartKey, force, dashboardId) {\n  return (dispatch, getState) => {\n    const chart = (getState().charts || {})[chartKey];\n    const timeout = getState().dashboardInfo.common.conf\n      .SUPERSET_WEBSERVER_TIMEOUT;\n\n    if (\n      !chart.latestQueryFormData ||\n      Object.keys(chart.latestQueryFormData).length === 0\n    ) {\n      return;\n    }\n    dispatch(\n      postChartFormData(\n        chart.latestQueryFormData,\n        force,\n        timeout,\n        chart.id,\n        dashboardId,\n      ),\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _everyInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/every\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * to you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport { useEffect, useMemo, useState } from 'react';\nimport { useFilters, usePagination, useRowSelect, useRowState, useSortBy, useTable } from 'react-table';\nimport { JsonParam, NumberParam, StringParam, useQueryParams } from 'use-query-params';\n\nexport class ListViewError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = 'ListViewError';\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}} // removes element from a list, returns new list\nexport function removeFromList(list, index) {\n  return _filterInstanceProperty(list).call(list, (_, i) => index !== i);\n}\n// apply update to elements of object list, returns new list\nfunction updateInList(list, index, update) {\n  const element = _findInstanceProperty(list).call(list, (_, i) => index === i);\n  return [\n  ..._sliceInstanceProperty(list).call(list, 0, index), _Object$assign({},\n  element, {}, update),\n  ..._sliceInstanceProperty(list).call(list, index + 1)];\n\n}\nfunction mergeCreateFilterValues(list, updateList) {\n  return _mapInstanceProperty(list).call(list, ({ id, operator }) => {\n    const update = _findInstanceProperty(updateList).call(updateList, obj => obj.id === id);\n    return { id, operator, value: update === null || update === void 0 ? void 0 : update.value };\n  });\n}\n// convert filters from UI objects to data objects\nexport function convertFilters(fts) {var _context;\n  return _mapInstanceProperty(_context = _filterInstanceProperty(fts).call(fts,\n  f => typeof f.value !== 'undefined')).call(_context,\n  ({ value, operator, id }) => ({ value, operator, id }));\n}\nexport function extractInputValue(inputType, event) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n  return null;\n}\nexport function getDefaultFilterOperator(filter) {var _filter$operators;\n  if (filter === null || filter === void 0 ? void 0 : filter.operator)\n  return filter.operator;\n  if (filter === null || filter === void 0 ? void 0 : (_filter$operators = filter.operators) === null || _filter$operators === void 0 ? void 0 : _filter$operators.length) {\n    return filter.operators[0].value;\n  }\n  return '';\n}\nexport function useListViewState({ fetchData, columns, data, count, initialPageSize, initialFilters = [], initialSort = [], bulkSelectMode = false, bulkSelectColumnConfig }) {\n  const [query, setQuery] = useQueryParams({\n    filters: JsonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam });\n\n  const initialSortBy = useMemo(() => query.sortColumn && query.sortOrder ?\n  [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }] :\n  initialSort, [query.sortColumn, query.sortOrder]);\n  const initialState = {\n    filters: convertFilters(query.filters || []),\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy };\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = _mapInstanceProperty(columns).call(columns, f => _Object$assign({}, f, { filter: 'exact' }));\n    return bulkSelectMode ?\n    [bulkSelectColumnConfig, ...columnsWithFilter] :\n    columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, state: { pageIndex, pageSize, sortBy, filters } } = useTable({\n    columns: columnsWithSelect,\n    count,\n    data,\n    disableFilters: true,\n    disableSortRemove: true,\n    initialState,\n    manualFilters: true,\n    manualPagination: true,\n    manualSortBy: true,\n    pageCount: Math.ceil(count / initialPageSize) },\n  useFilters, useSortBy, usePagination, useRowState, useRowSelect);\n  const [internalFilters, setInternalFilters] = useState(query.filters || []);\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(mergeCreateFilterValues(initialFilters, query.filters || []));\n    }\n  }, [initialFilters]);\n  useEffect(() => {\n    const queryParams = {\n      filters: internalFilters,\n      pageIndex };\n\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n    const method = typeof query.pageIndex !== 'undefined' &&\n    queryParams.pageIndex !== query.pageIndex ?\n    'push' :\n    'replace';\n    setQuery(queryParams, method);\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n  useEffect(() => {\n    if (!_isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n  const filtersApplied = _everyInstanceProperty(internalFilters).call(internalFilters, ({ id, value, operator }, index) => {var _filters$index, _filters$index2, _filters$index3;return id &&\n    ((_filters$index = filters[index]) === null || _filters$index === void 0 ? void 0 : _filters$index.id) === id &&\n    ((_filters$index2 = filters[index]) === null || _filters$index2 === void 0 ? void 0 : _filters$index2.value) === value &&\n    // @ts-ignore\n    ((_filters$index3 = filters[index]) === null || _filters$index3 === void 0 ? void 0 : _filters$index3.operator) === operator;});\n  const updateInternalFilter = (index, update) => setInternalFilters(updateInList(internalFilters, index, update));\n  const applyFilterValue = (index, value) => {\n    // skip redunundant updates\n    if (internalFilters[index].value === value) {\n      return;\n    }\n    const update = _Object$assign({}, internalFilters[index], { value });\n    const updatedFilters = updateInList(internalFilters, index, update);\n    setInternalFilters(updatedFilters);\n    setAllFilters(convertFilters(updatedFilters));\n    gotoPage(0); // clear pagination on filter\n  };\n  const removeFilterAndApply = index => {\n    const updated = removeFromList(internalFilters, index);\n    setInternalFilters(updated);\n    setAllFilters(convertFilters(updated));\n  };\n  return {\n    applyFilters: () => setAllFilters(convertFilters(internalFilters)),\n    removeFilterAndApply,\n    canNextPage,\n    canPreviousPage,\n    filtersApplied,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setInternalFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters },\n    updateInternalFilter,\n    applyFilterValue };\n\n}__signature__(useListViewState, \"useQueryParams{[query, setQuery]}\\nuseMemo{initialSortBy}\\nuseMemo{columnsWithSelect}\\nuseTable{{ getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, state: { pageIndex, pageSize, sortBy, filters }, }}\\nuseState{[internalFilters, setInternalFilters](query.filters || [])}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useQueryParams, useTable]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ListViewError, \"ListViewError\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(removeFromList, \"removeFromList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(updateInList, \"updateInList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(mergeCreateFilterValues, \"mergeCreateFilterValues\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFilters, \"convertFilters\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(extractInputValue, \"extractInputValue\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(getDefaultFilterOperator, \"getDefaultFilterOperator\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(useListViewState, \"useListViewState\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts"],"names":[],"mappings":"m5BAAA;;;;;;;;;;;;;;;;;;AAkBA,SAAS,SAAT,EAAoB,OAApB,EAA6B,QAA7B,QAA6C,OAA7C;AACA,SACE,UADF,EAEE,aAFF,EAGE,YAHF,EAIE,WAJF,EAKE,SALF,EAME,QANF,QAOO,aAPP;AASA,SACE,SADF,EAEE,WAFF,EAGE,WAHF,EAIE,cAJF,QAKO,kBALP;;AAiBA,OAAM,MAAO,aAAP,SAA6B,KAA7B,CAAkC;AAAxC,EAAA,WAAA,GAAA;;AACE,SAAA,IAAA,GAAO,eAAP;AACD,GAFuC;AAAA;AAAA,6B,CAIxC;AACA,OAAM,SAAU,cAAV,CAAyB,IAAzB,EAAsC,KAAtC,EAAmD;AACvD,SAAO,wBAAA,IAAI,MAAJ,CAAA,IAAI,EAAQ,CAAC,CAAD,EAAI,CAAJ,KAAU,KAAK,KAAK,CAA5B,CAAX;AACD;AAED;AACA,SAAS,YAAT,CAAsB,IAAtB,EAAmC,KAAnC,EAAkD,MAAlD,EAA6D;AAC3D,QAAM,OAAO,GAAG,sBAAA,IAAI,MAAJ,CAAA,IAAI,EAAM,CAAC,CAAD,EAAI,CAAJ,KAAU,KAAK,KAAK,CAA1B,CAApB;AAEA,SAAO;AACL,KAAG,uBAAA,IAAI,MAAJ,CAAA,IAAI,EAAO,CAAP,EAAU,KAAV,CADF;AAEA,EAAA,OAFA,MAEY,MAFZ;AAGL,KAAG,uBAAA,IAAI,MAAJ,CAAA,IAAI,EAAO,KAAK,GAAG,CAAf,CAHF,CAAP;;AAKD;AAED,SAAS,uBAAT,CAAiC,IAAjC,EAAiD,UAAjD,EAA0E;AACxE,SAAO,qBAAA,IAAI,MAAJ,CAAA,IAAI,EAAK,CAAC,EAAE,EAAF,EAAM,QAAN,EAAD,KAAqB;AACnC,UAAM,MAAM,GAAG,sBAAA,UAAU,MAAV,CAAA,UAAU,EAAM,GAAG,IAAI,GAAG,CAAC,EAAJ,KAAW,EAAxB,CAAzB;AAEA,WAAO,EAAE,EAAF,EAAM,QAAN,EAAgB,KAAK,EAAE,MAAF,aAAE,MAAF,uBAAE,MAAM,CAAE,KAA/B,EAAP;AACD,GAJU,CAAX;AAKD;AAED;AACA,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAA8C;AAClD,SAAO,wDAAA,GAAG,MAAH,CAAA,GAAG;AACA,EAAA,CAAC,IAAI,OAAO,CAAC,CAAC,KAAT,KAAmB,WADxB,CAAH;AAEA,GAAC,EAAE,KAAF,EAAS,QAAT,EAAmB,EAAnB,EAAD,MAA8B,EAAE,KAAF,EAAS,QAAT,EAAmB,EAAnB,EAA9B,CAFA,CAAP;AAGD;AAED,OAAM,SAAU,iBAAV,CAA4B,SAA5B,EAAwD,KAAxD,EAAkE;AACtE,MAAI,CAAC,SAAD,IAAc,SAAS,KAAK,MAAhC,EAAwC;AACtC,WAAO,KAAK,CAAC,aAAN,CAAoB,KAA3B;AACD;AACD,MAAI,SAAS,KAAK,UAAlB,EAA8B;AAC5B,WAAO,KAAK,CAAC,aAAN,CAAoB,OAA3B;AACD;AAED,SAAO,IAAP;AACD;AAED,OAAM,SAAU,wBAAV,CAAmC,MAAnC,EAAiD;AACrD,MAAI,MAAJ,aAAI,MAAJ,uBAAI,MAAM,CAAE,QAAZ;AAAsB,SAAO,MAAM,CAAC,QAAd;AACtB,MAAI,MAAJ,aAAI,MAAJ,4CAAI,MAAM,CAAE,SAAZ,sDAAI,kBAAmB,MAAvB,EAA+B;AAC7B,WAAO,MAAM,CAAC,SAAP,CAAiB,CAAjB,EAAoB,KAA3B;AACD;AACD,SAAO,EAAP;AACD;AAiBD,OAAM,SAAU,gBAAV,CAA2B,EAC/B,SAD+B,EAE/B,OAF+B,EAG/B,IAH+B,EAI/B,KAJ+B,EAK/B,eAL+B,EAM/B,cAAc,GAAG,EANc,EAO/B,WAAW,GAAG,EAPiB,EAQ/B,cAAc,GAAG,KARc,EAS/B,sBAT+B,EAA3B,EAUc;AAClB,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,cAAc,CAAC;AACvC,IAAA,OAAO,EAAE,SAD8B;AAEvC,IAAA,SAAS,EAAE,WAF4B;AAGvC,IAAA,UAAU,EAAE,WAH2B;AAIvC,IAAA,SAAS,EAAE,WAJ4B,EAAD,CAAxC;;AAOA,QAAM,aAAa,GAAG,OAAO,CAC3B,MACE,KAAK,CAAC,UAAN,IAAoB,KAAK,CAAC,SAA1B;AACI,GAAC,EAAE,EAAE,EAAE,KAAK,CAAC,UAAZ,EAAwB,IAAI,EAAE,KAAK,CAAC,SAAN,KAAoB,MAAlD,EAAD,CADJ;AAEI,EAAA,WAJqB,EAK3B,CAAC,KAAK,CAAC,UAAP,EAAmB,KAAK,CAAC,SAAzB,CAL2B,CAA7B;AAQA,QAAM,YAAY,GAAG;AACnB,IAAA,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,OAAN,IAAiB,EAAlB,CADJ;AAEnB,IAAA,SAAS,EAAE,KAAK,CAAC,SAAN,IAAmB,CAFX;AAGnB,IAAA,QAAQ,EAAE,eAHS;AAInB,IAAA,MAAM,EAAE,aAJW,EAArB;;AAOA,QAAM,iBAAiB,GAAG,OAAO,CAAC,MAAK;AACrC;AACA,UAAM,iBAAiB,GAAG,qBAAA,OAAO,MAAP,CAAA,OAAO,EAAK,CAAC,uBAAU,CAAV,IAAa,MAAM,EAAE,OAArB,GAAN,CAAjC;AACA,WAAO,cAAc;AACjB,KAAC,sBAAD,EAAyB,GAAG,iBAA5B,CADiB;AAEjB,IAAA,iBAFJ;AAGD,GANgC,EAM9B,CAAC,cAAD,EAAiB,OAAjB,CAN8B,CAAjC;AAQA,QAAM,EACJ,aADI,EAEJ,iBAFI,EAGJ,YAHI,EAIJ,IAJI,EAKJ,UALI,EAMJ,eANI,EAOJ,WAPI,EAQJ,SARI,EASJ,QATI,EAUJ,aAVI,EAWJ,gBAXI,EAYJ,KAAK,EAAE,EAAE,SAAF,EAAa,QAAb,EAAuB,MAAvB,EAA+B,OAA/B,EAZH,KAaF,QAAQ,CACV;AACE,IAAA,OAAO,EAAE,iBADX;AAEE,IAAA,KAFF;AAGE,IAAA,IAHF;AAIE,IAAA,cAAc,EAAE,IAJlB;AAKE,IAAA,iBAAiB,EAAE,IALrB;AAME,IAAA,YANF;AAOE,IAAA,aAAa,EAAE,IAPjB;AAQE,IAAA,gBAAgB,EAAE,IARpB;AASE,IAAA,YAAY,EAAE,IAThB;AAUE,IAAA,SAAS,EAAE,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,eAAlB,CAVb,EADU;AAaV,EAAA,UAbU,EAcV,SAdU,EAeV,aAfU,EAgBV,WAhBU,EAiBV,YAjBU,CAbZ;AAiCA,QAAM,CAAC,eAAD,EAAkB,kBAAlB,IAAwC,QAAQ,CACpD,KAAK,CAAC,OAAN,IAAiB,EADmC,CAAtD;AAIA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,cAAc,CAAC,MAAnB,EAA2B;AACzB,MAAA,kBAAkB,CAChB,uBAAuB,CAAC,cAAD,EAAiB,KAAK,CAAC,OAAN,IAAiB,EAAlC,CADP,CAAlB;AAGD;AACF,GANQ,EAMN,CAAC,cAAD,CANM,CAAT;AAQA,EAAA,SAAS,CAAC,MAAK;AACb,UAAM,WAAW,GAAQ;AACvB,MAAA,OAAO,EAAE,eADc;AAEvB,MAAA,SAFuB,EAAzB;;AAIA,QAAI,MAAM,CAAC,CAAD,CAAV,EAAe;AACb,MAAA,WAAW,CAAC,UAAZ,GAAyB,MAAM,CAAC,CAAD,CAAN,CAAU,EAAnC;AACA,MAAA,WAAW,CAAC,SAAZ,GAAwB,MAAM,CAAC,CAAD,CAAN,CAAU,IAAV,GAAiB,MAAjB,GAA0B,KAAlD;AACD;AAED,UAAM,MAAM,GACV,OAAO,KAAK,CAAC,SAAb,KAA2B,WAA3B;AACA,IAAA,WAAW,CAAC,SAAZ,KAA0B,KAAK,CAAC,SADhC;AAEI,UAFJ;AAGI,aAJN;AAMA,IAAA,QAAQ,CAAC,WAAD,EAAc,MAAd,CAAR;AACA,IAAA,SAAS,CAAC,EAAE,SAAF,EAAa,QAAb,EAAuB,MAAvB,EAA+B,OAA/B,EAAD,CAAT;AACD,GAlBQ,EAkBN,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,OAAzC,CAlBM,CAAT;AAoBA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,CAAC,SAAQ,YAAY,CAAC,SAArB,EAAgC,SAAhC,CAAL,EAAiD;AAC/C,MAAA,QAAQ,CAAC,YAAY,CAAC,SAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAAC,KAAD,CAJM,CAAT;AAMA,QAAM,cAAc,GAAG,uBAAA,eAAe,MAAf,CAAA,eAAe,EACpC,CAAC,EAAE,EAAF,EAAM,KAAN,EAAa,QAAb,EAAD,EAA0B,KAA1B,kEACE,EAAE;AACF,uBAAA,OAAO,CAAC,KAAD,CAAP,kEAAgB,EAAhB,MAAuB,EADvB;AAEA,wBAAA,OAAO,CAAC,KAAD,CAAP,oEAAgB,KAAhB,MAA0B,KAF1B;AAGA;AACA,wBAAA,OAAO,CAAC,KAAD,CAAP,oEAAgB,QAAhB,MAA6B,QAL/B,EADoC,CAAtC;AASA,QAAM,oBAAoB,GAAG,CAAC,KAAD,EAAgB,MAAhB,KAC3B,kBAAkB,CAAC,YAAY,CAAC,eAAD,EAAkB,KAAlB,EAAyB,MAAzB,CAAb,CADpB;AAGA,QAAM,gBAAgB,GAAG,CAAC,KAAD,EAAgB,KAAhB,KAA8B;AACrD;AACA,QAAI,eAAe,CAAC,KAAD,CAAf,CAAuB,KAAvB,KAAiC,KAArC,EAA4C;AAC1C;AACD;AACD,UAAM,MAAM,sBAAQ,eAAe,CAAC,KAAD,CAAvB,IAAgC,KAAhC,GAAZ;AACA,UAAM,cAAc,GAAG,YAAY,CAAC,eAAD,EAAkB,KAAlB,EAAyB,MAAzB,CAAnC;AACA,IAAA,kBAAkB,CAAC,cAAD,CAAlB;AACA,IAAA,aAAa,CAAC,cAAc,CAAC,cAAD,CAAf,CAAb;AACA,IAAA,QAAQ,CAAC,CAAD,CAAR,CATqD,CASxC;AACd,GAVD;AAYA,QAAM,oBAAoB,GAAI,KAAD,IAAkB;AAC7C,UAAM,OAAO,GAAG,cAAc,CAAC,eAAD,EAAkB,KAAlB,CAA9B;AACA,IAAA,kBAAkB,CAAC,OAAD,CAAlB;AACA,IAAA,aAAa,CAAC,cAAc,CAAC,OAAD,CAAf,CAAb;AACD,GAJD;AAMA,SAAO;AACL,IAAA,YAAY,EAAE,MAAM,aAAa,CAAC,cAAc,CAAC,eAAD,CAAf,CAD5B;AAEL,IAAA,oBAFK;AAGL,IAAA,WAHK;AAIL,IAAA,eAJK;AAKL,IAAA,cALK;AAML,IAAA,iBANK;AAOL,IAAA,aAPK;AAQL,IAAA,QARK;AASL,IAAA,YATK;AAUL,IAAA,SAVK;AAWL,IAAA,UAXK;AAYL,IAAA,IAZK;AAaL,IAAA,gBAbK;AAcL,IAAA,aAdK;AAeL,IAAA,kBAfK;AAgBL,IAAA,KAAK,EAAE,EAAE,SAAF,EAAa,QAAb,EAAuB,MAAvB,EAA+B,OAA/B,EAAwC,eAAxC,EAhBF;AAiBL,IAAA,oBAjBK;AAkBL,IAAA,gBAlBK,EAAP;;AAoBD,C,cAlKe,gB,qaAWY,c,EA2CtB,Q,oLA3HO,a,4IAKG,c,6IAKP,Y,2IAUA,uB,sJASO,c,6IAMA,iB,gJAWA,wB,uJAuBA,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  useFilters,\n  usePagination,\n  useRowSelect,\n  useRowState,\n  useSortBy,\n  useTable,\n} from 'react-table';\n\nimport {\n  JsonParam,\n  NumberParam,\n  StringParam,\n  useQueryParams,\n} from 'use-query-params';\n\nimport { isEqual } from 'lodash';\n\nimport {\n  FetchDataConfig,\n  Filter,\n  FilterValue,\n  InternalFilter,\n  SortColumn,\n} from './types';\n\nexport class ListViewError extends Error {\n  name = 'ListViewError';\n}\n\n// removes element from a list, returns new list\nexport function removeFromList(list: any[], index: number): any[] {\n  return list.filter((_, i) => index !== i);\n}\n\n// apply update to elements of object list, returns new list\nfunction updateInList(list: any[], index: number, update: any): any[] {\n  const element = list.find((_, i) => index === i);\n\n  return [\n    ...list.slice(0, index),\n    { ...element, ...update },\n    ...list.slice(index + 1),\n  ];\n}\n\nfunction mergeCreateFilterValues(list: Filter[], updateList: FilterValue[]) {\n  return list.map(({ id, operator }) => {\n    const update = updateList.find(obj => obj.id === id);\n\n    return { id, operator, value: update?.value };\n  });\n}\n\n// convert filters from UI objects to data objects\nexport function convertFilters(fts: InternalFilter[]): FilterValue[] {\n  return fts\n    .filter(f => typeof f.value !== 'undefined')\n    .map(({ value, operator, id }) => ({ value, operator, id }));\n}\n\nexport function extractInputValue(inputType: Filter['input'], event: any) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n\n  return null;\n}\n\nexport function getDefaultFilterOperator(filter: Filter): string {\n  if (filter?.operator) return filter.operator;\n  if (filter?.operators?.length) {\n    return filter.operators[0].value;\n  }\n  return '';\n}\ninterface UseListViewConfig {\n  fetchData: (conf: FetchDataConfig) => any;\n  columns: any[];\n  data: any[];\n  count: number;\n  initialPageSize: number;\n  initialSort?: SortColumn[];\n  bulkSelectMode?: boolean;\n  initialFilters?: Filter[];\n  bulkSelectColumnConfig?: {\n    id: string;\n    Header: (conf: any) => React.ReactNode;\n    Cell: (conf: any) => React.ReactNode;\n  };\n}\n\nexport function useListViewState({\n  fetchData,\n  columns,\n  data,\n  count,\n  initialPageSize,\n  initialFilters = [],\n  initialSort = [],\n  bulkSelectMode = false,\n  bulkSelectColumnConfig,\n}: UseListViewConfig) {\n  const [query, setQuery] = useQueryParams({\n    filters: JsonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam,\n  });\n\n  const initialSortBy = useMemo(\n    () =>\n      query.sortColumn && query.sortOrder\n        ? [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }]\n        : initialSort,\n    [query.sortColumn, query.sortOrder],\n  );\n\n  const initialState = {\n    filters: convertFilters(query.filters || []),\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy,\n  };\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = columns.map(f => ({ ...f, filter: 'exact' }));\n    return bulkSelectMode\n      ? [bulkSelectColumnConfig, ...columnsWithFilter]\n      : columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setAllFilters,\n    selectedFlatRows,\n    state: { pageIndex, pageSize, sortBy, filters },\n  } = useTable(\n    {\n      columns: columnsWithSelect,\n      count,\n      data,\n      disableFilters: true,\n      disableSortRemove: true,\n      initialState,\n      manualFilters: true,\n      manualPagination: true,\n      manualSortBy: true,\n      pageCount: Math.ceil(count / initialPageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useRowState,\n    useRowSelect,\n  );\n\n  const [internalFilters, setInternalFilters] = useState<InternalFilter[]>(\n    query.filters || [],\n  );\n\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(\n        mergeCreateFilterValues(initialFilters, query.filters || []),\n      );\n    }\n  }, [initialFilters]);\n\n  useEffect(() => {\n    const queryParams: any = {\n      filters: internalFilters,\n      pageIndex,\n    };\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n\n    const method =\n      typeof query.pageIndex !== 'undefined' &&\n      queryParams.pageIndex !== query.pageIndex\n        ? 'push'\n        : 'replace';\n\n    setQuery(queryParams, method);\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n\n  useEffect(() => {\n    if (!isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n\n  const filtersApplied = internalFilters.every(\n    ({ id, value, operator }, index) =>\n      id &&\n      filters[index]?.id === id &&\n      filters[index]?.value === value &&\n      // @ts-ignore\n      filters[index]?.operator === operator,\n  );\n\n  const updateInternalFilter = (index: number, update: object) =>\n    setInternalFilters(updateInList(internalFilters, index, update));\n\n  const applyFilterValue = (index: number, value: any) => {\n    // skip redunundant updates\n    if (internalFilters[index].value === value) {\n      return;\n    }\n    const update = { ...internalFilters[index], value };\n    const updatedFilters = updateInList(internalFilters, index, update);\n    setInternalFilters(updatedFilters);\n    setAllFilters(convertFilters(updatedFilters));\n    gotoPage(0); // clear pagination on filter\n  };\n\n  const removeFilterAndApply = (index: number) => {\n    const updated = removeFromList(internalFilters, index);\n    setInternalFilters(updated);\n    setAllFilters(convertFilters(updated));\n  };\n\n  return {\n    applyFilters: () => setAllFilters(convertFilters(internalFilters)),\n    removeFilterAndApply,\n    canNextPage,\n    canPreviousPage,\n    filtersApplied,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setInternalFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters },\n    updateInternalFilter,\n    applyFilterValue,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * regarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, Alert, Button, Radio } from 'react-bootstrap';\nimport Select from 'src/components/Select';\nimport { t } from '@superset-ui/translation';\n\nimport { supersetURL } from '../../utils/common';\nimport { EXPLORE_ONLY_VIZ_TYPE } from '../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  can_overwrite: PropTypes.bool,\n  onHide: PropTypes.func.isRequired,\n  actions: PropTypes.object.isRequired,\n  form_data: PropTypes.object,\n  userId: PropTypes.string.isRequired,\n  dashboards: PropTypes.array.isRequired,\n  alert: PropTypes.string,\n  slice: PropTypes.object,\n  datasource: PropTypes.object };\n\n\nclass SaveModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saveToDashboardId: null,\n      newDashboardName: '',\n      newSliceName: props.sliceName,\n      dashboards: [],\n      alert: null,\n      action: props.can_overwrite ? 'overwrite' : 'saveas',\n      addToDash: 'noSave',\n      vizType: props.form_data.viz_type };\n\n  }\n  componentDidMount() {\n    this.props.actions.fetchDashboards(this.props.userId).then(() => {var _context;\n      const dashboardIds = _mapInstanceProperty(_context = this.props.dashboards).call(_context,\n      dashboard => dashboard.value);\n\n      let recentDashboard = sessionStorage.getItem(\n      'save_chart_recent_dashboard');\n\n      recentDashboard = recentDashboard && _parseInt(recentDashboard, 10);\n      if (\n      recentDashboard !== null &&\n      _indexOfInstanceProperty(dashboardIds).call(dashboardIds, recentDashboard) !== -1)\n      {\n        this.setState({\n          saveToDashboardId: recentDashboard,\n          addToDash: 'existing' });\n\n      }\n    });\n  }\n  onChange(name, event) {\n    switch (name) {\n      case 'newSliceName':\n        this.setState({ newSliceName: event.target.value });\n        break;\n      case 'saveToDashboardId':\n        this.setState({ saveToDashboardId: event.value });\n        this.changeDash('existing');\n        break;\n      case 'newDashboardName':\n        this.setState({ newDashboardName: event.target.value });\n        break;\n      default:\n        break;}\n\n  }\n  changeAction(action) {\n    this.setState({ action });\n  }\n  changeDash(dash) {\n    this.setState({ addToDash: dash });\n  }\n  saveOrOverwrite(gotodash) {\n    this.setState({ alert: null });\n    this.props.actions.removeSaveModalAlert();\n    const sliceParams = {};\n\n    if (_sliceInstanceProperty(this.props) && _sliceInstanceProperty(this.props).slice_id) {\n      sliceParams.slice_id = _sliceInstanceProperty(this.props).slice_id;\n    }\n    if (sliceParams.action === 'saveas') {\n      if (this.state.newSliceName === '') {\n        this.setState({ alert: t('Please enter a chart name') });\n        return;\n      }\n    }\n    sliceParams.action = this.state.action;\n    sliceParams.slice_name = this.state.newSliceName;\n\n    const addToDash = this.state.addToDash;\n    sliceParams.add_to_dash = addToDash;\n    let dashboard = null;\n    switch (addToDash) {\n      case 'existing':\n        dashboard = this.state.saveToDashboardId;\n        if (!dashboard) {\n          this.setState({ alert: t('Please select a dashboard') });\n          return;\n        }\n        sliceParams.save_to_dashboard_id = dashboard;\n        break;\n      case 'new':\n        dashboard = this.state.newDashboardName;\n        if (dashboard === '') {\n          this.setState({ alert: t('Please enter a dashboard name') });\n          return;\n        }\n        sliceParams.new_dashboard_name = dashboard;\n        break;\n      default:\n        dashboard = null;}\n\n    sliceParams.goto_dash = gotodash;\n\n    this.props.actions.\n    saveSlice(this.props.form_data, sliceParams).\n    then(({ data }) => {\n      if (data.dashboard_id === null) {\n        sessionStorage.removeItem('save_chart_recent_dashboard');\n      } else {\n        sessionStorage.setItem(\n        'save_chart_recent_dashboard',\n        data.dashboard_id);\n\n      }\n      // Go to new slice url or dashboard url\n      if (gotodash) {\n        window.location.assign(supersetURL(data.dashboard));\n      } else {\n        window.location.assign(_sliceInstanceProperty(data).slice_url);\n      }\n    });\n    this.props.onHide();\n  }\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n  render() {var _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13, _context14;\n    const canNotSaveToDash =\n    _indexOfInstanceProperty(EXPLORE_ONLY_VIZ_TYPE).call(EXPLORE_ONLY_VIZ_TYPE, this.state.vizType) > -1;\n    return (\n      ___EmotionJSX(Modal, { show: true, onHide: this.props.onHide, bsStyle: \"large\" },\n      ___EmotionJSX(Modal.Header, { closeButton: true },\n      ___EmotionJSX(Modal.Title, null, t('Save A Chart'))),\n\n      ___EmotionJSX(Modal.Body, null,\n      (this.state.alert || this.props.alert) &&\n      ___EmotionJSX(Alert, null,\n      this.state.alert ? this.state.alert : this.props.alert,\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-close pull-right\",\n        onClick: _bindInstanceProperty(_context2 = this.removeAlert).call(_context2, this),\n        style: { cursor: 'pointer' } })),\n\n\n\n      _sliceInstanceProperty(this.props) &&\n      ___EmotionJSX(Radio, {\n        id: \"overwrite-radio\",\n        disabled: !this.props.can_overwrite,\n        checked: this.state.action === 'overwrite',\n        onChange: _bindInstanceProperty(_context3 = this.changeAction).call(_context3, this, 'overwrite') },\n\n      t('Overwrite chart %s', _sliceInstanceProperty(this.props).slice_name)),\n\n\n\n      ___EmotionJSX(Radio, {\n        id: \"saveas-radio\",\n        inline: true,\n        checked: this.state.action === 'saveas',\n        onChange: _bindInstanceProperty(_context4 = this.changeAction).call(_context4, this, 'saveas') },\n\n      ' ',\n      t('Save as'), \" \\xA0\"),\n\n      ___EmotionJSX(\"input\", {\n        name: \"new_slice_name\",\n        placeholder: this.state.newSliceName || t('[chart name]'),\n        onChange: _bindInstanceProperty(_context5 = this.onChange).call(_context5, this, 'newSliceName'),\n        onFocus: _bindInstanceProperty(_context6 = this.changeAction).call(_context6, this, 'saveas') }),\n\n\n      ___EmotionJSX(\"br\", null),\n      ___EmotionJSX(\"hr\", null),\n\n      ___EmotionJSX(Radio, {\n        checked: this.state.addToDash === 'noSave',\n        onChange: _bindInstanceProperty(_context7 = this.changeDash).call(_context7, this, 'noSave') },\n\n      t('Do not add to a dashboard')),\n\n\n      ___EmotionJSX(Radio, {\n        inline: true,\n        disabled: canNotSaveToDash,\n        checked: this.state.addToDash === 'existing',\n        onChange: _bindInstanceProperty(_context8 = this.changeDash).call(_context8, this, 'existing'),\n        \"data-test\": \"add-to-existing-dashboard\" },\n\n      t('Add chart to existing dashboard')),\n\n      ___EmotionJSX(Select, {\n        className: \"save-modal-selector\",\n        disabled: canNotSaveToDash,\n        options: this.props.dashboards,\n        onChange: _bindInstanceProperty(_context9 = this.onChange).call(_context9, this, 'saveToDashboardId'),\n        autoSize: false,\n        value: this.state.saveToDashboardId,\n        placeholder: \"Select Dashboard\" }),\n\n\n      ___EmotionJSX(Radio, {\n        inline: true,\n        checked: this.state.addToDash === 'new',\n        onChange: _bindInstanceProperty(_context10 = this.changeDash).call(_context10, this, 'new'),\n        disabled: canNotSaveToDash,\n        \"data-test\": \"add-to-new-dashboard\" },\n\n      t('Add to new dashboard'), \" \\xA0\"),\n\n      ___EmotionJSX(\"input\", {\n        onChange: _bindInstanceProperty(_context11 = this.onChange).call(_context11, this, 'newDashboardName'),\n        disabled: canNotSaveToDash,\n        onFocus: _bindInstanceProperty(_context12 = this.changeDash).call(_context12, this, 'new'),\n        placeholder: t('[dashboard name]') })),\n\n\n\n      ___EmotionJSX(Modal.Footer, null,\n      ___EmotionJSX(Button, {\n        type: \"button\",\n        id: \"btn_modal_save\",\n        className: \"btn pull-left\",\n        onClick: _bindInstanceProperty(_context13 = this.saveOrOverwrite).call(_context13, this, false) },\n\n      t('Save')),\n\n      ___EmotionJSX(Button, {\n        type: \"button\",\n        id: \"btn_modal_save_goto_dash\",\n        className: \"btn btn-primary pull-left gotodash\",\n        disabled: this.state.addToDash === 'noSave' || canNotSaveToDash,\n        onClick: _bindInstanceProperty(_context14 = this.saveOrOverwrite).call(_context14, this, true) },\n\n      t('Save & go to dashboard')))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSaveModal.propTypes = propTypes;\n\nfunction mapStateToProps({ explore, saveModal }) {\n  return {\n    datasource: explore.datasource,\n    slice: _sliceInstanceProperty(explore),\n    can_overwrite: explore.can_overwrite,\n    userId: explore.user_id,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert };\n\n}\n\nexport { SaveModal };const _default =\nconnect(mapStateToProps, () => ({}))(SaveModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(SaveModal, \"SaveModal\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/SaveModal.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.string.search\";import \"core-js/modules/web.dom-collections.iterator\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, SplitButton, Tab, Tabs } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { t } from '@superset-ui/translation';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport * as Actions from '../actions/sqlLab';\nimport SqlEditor from './SqlEditor';\nimport { areArraysShallowEqual } from '../../reduxUtils';\nimport TabStatusIcon from './TabStatusIcon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null };\n\n\nlet queryCount = 1;\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [],\n      hideLeftBar: false };\n\n    this.removeQueryEditor = _bindInstanceProperty(_context = this.removeQueryEditor).call(_context, this);\n    this.renameTab = _bindInstanceProperty(_context2 = this.renameTab).call(_context2, this);\n    this.toggleLeftBar = _bindInstanceProperty(_context3 = this.toggleLeftBar).call(_context3, this);\n    this.removeAllOtherQueryEditors = _bindInstanceProperty(_context4 = this.removeAllOtherQueryEditors).call(_context4,\n    this);\n\n    this.duplicateQueryEditor = _bindInstanceProperty(_context5 = this.duplicateQueryEditor).call(_context5, this);\n  }\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {var _context6, _context7, _context8, _context9;\n      const localStorageTables = _filterInstanceProperty(_context6 = this.props.tables).call(_context6,\n      table => table.inLocalStorage);\n\n      const localStorageQueries = _filterInstanceProperty(_context7 = _Object$values(this.props.queries)).call(_context7,\n      query => query.inLocalStorage);\n\n      _forEachInstanceProperty(_context8 = _filterInstanceProperty(_context9 = this.props.queryEditors).call(_context9,\n      qe => qe.inLocalStorage)).call(_context8,\n      qe => {\n        // get all queries associated with the query editor\n        const queries = _filterInstanceProperty(localStorageQueries).call(localStorageQueries,\n        query => query.sqlEditorId === qe.id);\n\n        const tables = _filterInstanceProperty(localStorageTables).call(localStorageTables,\n        table => table.queryEditorId === qe.id);\n\n        this.props.actions.migrateQueryEditorFromLocalStorage(\n        qe,\n        tables,\n        queries);\n\n      });\n    }\n\n    // merge post form data with GET search params\n    const query = _Object$assign({},\n    this.props.requestedQuery, {},\n    URI(window.location).search(true));\n\n\n    // Popping a new tab based on the querystring\n    if (query.id || query.sql || query.savedQueryId || query.datasourceKey) {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = _parseInt(dbId, 10);\n        } else {\n          const databases = this.props.databases;\n          const dbName = query.dbname;\n          if (dbName) {var _context10;\n            _forEachInstanceProperty(_context10 = _Object$keys(databases)).call(_context10, db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql };\n\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n      isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery &&\n      latestQuery.resultsKey)\n      {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n        latestQuery,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {var _context11;\n    const nextActiveQeId =\n    nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = [];\n    for (const id in nextProps.queries) {\n      if (nextProps.queries[id].sqlEditorId === nextActiveQeId) {\n        queriesArray.push(nextProps.queries[id]);\n      }\n    }\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    _forEachInstanceProperty(_context11 = nextProps.tables).call(_context11, table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n      queryId &&\n      nextProps.queries[queryId] &&\n      table.queryEditorId === nextActiveQeId)\n      {\n        dataPreviewQueries.push(_Object$assign({},\n        nextProps.queries[queryId], {\n          tableName: table.name }));\n\n      }\n    });\n    if (\n    !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries))\n    {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n  popNewTab() {\n    queryCount++;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n  activeQueryEditor() {var _context12;\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return _findInstanceProperty(_context12 = this.props.queryEditors).call(_context12, qe => qe.id === qeid) || null;\n  }\n  newQueryEditor() {var _context13;\n    queryCount++;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n    ..._mapInstanceProperty(_context13 = _Object$values(this.props.databases)).call(_context13, database => database.id));\n\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) ?\n    '' :\n    t(\n    '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.') + \"\\n\\n\";\n\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n      activeQueryEditor && activeQueryEditor.dbId ?\n      activeQueryEditor.dbId :\n      this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: warning + \"SELECT ...\",\n      queryLimit: this.props.defaultQueryLimit };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n  handleSelect(key) {\n    if (key === 'add_tab') {\n      this.newQueryEditor();\n    } else {\n      const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n      if (key !== qeid) {var _context14;\n        const queryEditor = _findInstanceProperty(_context14 = this.props.queryEditors).call(_context14, qe => qe.id === key);\n        this.props.actions.switchQueryEditor(\n        queryEditor,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n  removeAllOtherQueryEditors(cqe) {var _context15;\n    _forEachInstanceProperty(_context15 = this.props.queryEditors).call(_context15,\n    qe => qe !== cqe && this.removeQueryEditor(qe));\n\n  }\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n  toggleLeftBar() {\n    this.setState({ hideLeftBar: !this.state.hideLeftBar });\n  }\n  render() {var _context16, _context18;\n    const editors = _mapInstanceProperty(_context16 = this.props.queryEditors).call(_context16, (qe, i) => {var _context17;\n      const isSelected =\n      this.activeQueryEditor() && this.activeQueryEditor().id === qe.id;\n\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const title =\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(TabStatusIcon, {\n        onClose: () => this.removeQueryEditor(qe),\n        tabState: state, __source: { fileName: _jsxFileName, lineNumber: 283 }, __self: this }),\n      ' ',\n      qe.title, ' ');\n\n\n      const tabTitle =\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"span\", { className: \"ddbtn-tab\", __source: { fileName: _jsxFileName, lineNumber: 292 }, __self: this }, title),\n      isSelected &&\n      ___EmotionJSX(SplitButton, {\n        bsSize: \"small\",\n        id: 'ddbtn-tab-' + i,\n        className: \"ddbtn-tab\",\n        title: \"\\xA0\", __source: { fileName: _jsxFileName, lineNumber: 294 }, __self: this },\n\n      ___EmotionJSX(MenuItem, {\n        className: \"close-btn\",\n        eventKey: \"1\",\n        onClick: () => this.removeQueryEditor(qe), __source: { fileName: _jsxFileName, lineNumber: 300 }, __self: this },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __source: { fileName: _jsxFileName, lineNumber: 305 }, __self: this },\n      ___EmotionJSX(\"i\", { className: \"fa fa-close\", __source: { fileName: _jsxFileName, lineNumber: 306 }, __self: this })),\n\n      t('Close tab')),\n\n      ___EmotionJSX(MenuItem, { eventKey: \"2\", onClick: () => this.renameTab(qe), __source: { fileName: _jsxFileName, lineNumber: 310 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __source: { fileName: _jsxFileName, lineNumber: 311 }, __self: this },\n      ___EmotionJSX(\"i\", { className: \"fa fa-i-cursor\", __source: { fileName: _jsxFileName, lineNumber: 312 }, __self: this })),\n\n      t('Rename tab')),\n\n      ___EmotionJSX(MenuItem, { eventKey: \"3\", onClick: this.toggleLeftBar, __source: { fileName: _jsxFileName, lineNumber: 316 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __source: { fileName: _jsxFileName, lineNumber: 317 }, __self: this },\n      ___EmotionJSX(\"i\", { className: \"fa fa-cogs\", __source: { fileName: _jsxFileName, lineNumber: 318 }, __self: this })),\n\n      this.state.hideLeftBar ?\n      t('Expand tool bar') :\n      t('Hide tool bar')),\n\n      ___EmotionJSX(MenuItem, {\n        eventKey: \"4\",\n        onClick: () => this.removeAllOtherQueryEditors(qe), __source: { fileName: _jsxFileName, lineNumber: 324 }, __self: this },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __source: { fileName: _jsxFileName, lineNumber: 328 }, __self: this },\n      ___EmotionJSX(\"i\", { className: \"fa fa-times-circle-o\", __source: { fileName: _jsxFileName, lineNumber: 329 }, __self: this })),\n\n      t('Close all other tabs')),\n\n      ___EmotionJSX(MenuItem, {\n        eventKey: \"5\",\n        onClick: () => this.duplicateQueryEditor(qe), __source: { fileName: _jsxFileName, lineNumber: 333 }, __self: this },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\", __source: { fileName: _jsxFileName, lineNumber: 337 }, __self: this },\n      ___EmotionJSX(\"i\", { className: \"fa fa-files-o\", __source: { fileName: _jsxFileName, lineNumber: 338 }, __self: this })),\n\n      t('Duplicate tab'))));\n\n\n\n\n\n      return (\n        ___EmotionJSX(Tab, { key: qe.id, title: tabTitle, eventKey: qe.id, __source: { fileName: _jsxFileName, lineNumber: 347 }, __self: this },\n        isSelected &&\n        ___EmotionJSX(SqlEditor, {\n          tables: _filterInstanceProperty(_context17 = this.props.tables).call(_context17,\n          xt => xt.queryEditorId === qe.id),\n\n          queryEditor: qe,\n          editorQueries: this.state.queriesArray,\n          dataPreviewQueries: this.state.dataPreviewQueries,\n          latestQuery: latestQuery,\n          database: database,\n          actions: this.props.actions,\n          hideLeftBar: this.state.hideLeftBar,\n          defaultQueryLimit: this.props.defaultQueryLimit,\n          maxRow: this.props.maxRow,\n          displayLimit: this.props.displayLimit,\n          saveQueryWarning: this.props.saveQueryWarning,\n          scheduleQueryWarning: this.props.scheduleQueryWarning, __source: { fileName: _jsxFileName, lineNumber: 349 }, __self: this })));\n\n\n\n\n    });\n    return (\n      ___EmotionJSX(Tabs, {\n        bsStyle: \"tabs\",\n        animation: false,\n        activeKey: this.props.tabHistory[this.props.tabHistory.length - 1],\n        onSelect: _bindInstanceProperty(_context18 = this.handleSelect).call(_context18, this),\n        id: \"a11y-query-editor-tabs\",\n        className: \"SqlEditorTabs\", __source: { fileName: _jsxFileName, lineNumber: 371 }, __self: this },\n\n      editors,\n      ___EmotionJSX(Tab, {\n        title:\n        ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 382 }, __self: this },\n        ___EmotionJSX(\"i\", { className: \"fa fa-plus-circle\", __source: { fileName: _jsxFileName, lineNumber: 383 }, __self: this }), \"\\xA0\"),\n\n\n\n        className: \"addEditorTab\",\n        eventKey: \"add_tab\",\n        disabled: this.props.offline, __source: { fileName: _jsxFileName, lineNumber: 380 }, __self: this })));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery };\n\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch) };\n\n}\n\nexport { TabbedSqlEditors };const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(queryCount, \"queryCount\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx"],"names":["React","PropTypes","MenuItem","SplitButton","Tab","Tabs","connect","bindActionCreators","URI","t","isFeatureEnabled","FeatureFlag","Actions","SqlEditor","areArraysShallowEqual","TabStatusIcon","propTypes","actions","object","isRequired","defaultDbId","number","displayLimit","defaultQueryLimit","maxRow","databases","queries","queryEditors","array","requestedQuery","tabHistory","tables","offline","bool","saveQueryWarning","string","scheduleQueryWarning","defaultProps","queryCount","TabbedSqlEditors","PureComponent","constructor","props","sqlLabUrl","state","queriesArray","dataPreviewQueries","hideLeftBar","removeQueryEditor","renameTab","toggleLeftBar","removeAllOtherQueryEditors","duplicateQueryEditor","componentDidMount","SQLLAB_BACKEND_PERSISTENCE","localStorageTables","table","inLocalStorage","localStorageQueries","query","qe","sqlEditorId","id","queryEditorId","migrateQueryEditorFromLocalStorage","window","location","search","sql","savedQueryId","datasourceKey","popStoredQuery","popSavedQuery","popDatasourceQuery","dbId","dbid","dbName","dbname","db","database_name","newQueryEditor","title","schema","autorun","addQueryEditor","popNewTab","length","activeQueryEditor","latestQuery","latestQueryId","resultsKey","fetchQueryResults","UNSAFE_componentWillReceiveProps","nextProps","nextActiveQeId","push","setState","queryId","dataPreviewQueryId","tableName","name","history","replaceState","document","newTitle","prompt","queryEditorSetTitle","qeid","firstDbId","Math","min","database","warning","queryLimit","handleSelect","key","queryEditor","switchQueryEditor","cqe","cloneQueryToNewTab","render","editors","i","isSelected","tabTitle","xt","mapStateToProps","sqlLab","common","conf","DISPLAY_MAX_ROW","DEFAULT_SQLLAB_LIMIT","SQL_MAX_ROW","SQLLAB_SAVE_WARNING_MESSAGE","SQLLAB_SCHEDULE_WARNING_MESSAGE","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, SplitButton, Tab, Tabs } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { t } from '@superset-ui/translation';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport * as Actions from '../actions/sqlLab';\nimport SqlEditor from './SqlEditor';\nimport { areArraysShallowEqual } from '../../reduxUtils';\nimport TabStatusIcon from './TabStatusIcon';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string,\n};\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null,\n};\n\nlet queryCount = 1;\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [],\n      hideLeftBar: false,\n    };\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.renameTab = this.renameTab.bind(this);\n    this.toggleLeftBar = this.toggleLeftBar.bind(this);\n    this.removeAllOtherQueryEditors = this.removeAllOtherQueryEditors.bind(\n      this,\n    );\n    this.duplicateQueryEditor = this.duplicateQueryEditor.bind(this);\n  }\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {\n      const localStorageTables = this.props.tables.filter(\n        table => table.inLocalStorage,\n      );\n      const localStorageQueries = Object.values(this.props.queries).filter(\n        query => query.inLocalStorage,\n      );\n      this.props.queryEditors\n        .filter(qe => qe.inLocalStorage)\n        .forEach(qe => {\n          // get all queries associated with the query editor\n          const queries = localStorageQueries.filter(\n            query => query.sqlEditorId === qe.id,\n          );\n          const tables = localStorageTables.filter(\n            table => table.queryEditorId === qe.id,\n          );\n          this.props.actions.migrateQueryEditorFromLocalStorage(\n            qe,\n            tables,\n            queries,\n          );\n        });\n    }\n\n    // merge post form data with GET search params\n    const query = {\n      ...this.props.requestedQuery,\n      ...URI(window.location).search(true),\n    };\n\n    // Popping a new tab based on the querystring\n    if (query.id || query.sql || query.savedQueryId || query.datasourceKey) {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = parseInt(dbId, 10);\n        } else {\n          const databases = this.props.databases;\n          const dbName = query.dbname;\n          if (dbName) {\n            Object.keys(databases).forEach(db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql,\n        };\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n        isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n        latestQuery &&\n        latestQuery.resultsKey\n      ) {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n          latestQuery,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextActiveQeId =\n      nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = [];\n    for (const id in nextProps.queries) {\n      if (nextProps.queries[id].sqlEditorId === nextActiveQeId) {\n        queriesArray.push(nextProps.queries[id]);\n      }\n    }\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    nextProps.tables.forEach(table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n        queryId &&\n        nextProps.queries[queryId] &&\n        table.queryEditorId === nextActiveQeId\n      ) {\n        dataPreviewQueries.push({\n          ...nextProps.queries[queryId],\n          tableName: table.name,\n        });\n      }\n    });\n    if (\n      !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries)\n    ) {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n  popNewTab() {\n    queryCount++;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find(qe => qe.id === qeid) || null;\n  }\n  newQueryEditor() {\n    queryCount++;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n      ...Object.values(this.props.databases).map(database => database.id),\n    );\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)\n      ? ''\n      : `${t(\n          '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.',\n        )}\\n\\n`;\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n        activeQueryEditor && activeQueryEditor.dbId\n          ? activeQueryEditor.dbId\n          : this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: `${warning}SELECT ...`,\n      queryLimit: this.props.defaultQueryLimit,\n    };\n    this.props.actions.addQueryEditor(qe);\n  }\n  handleSelect(key) {\n    if (key === 'add_tab') {\n      this.newQueryEditor();\n    } else {\n      const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n      if (key !== qeid) {\n        const queryEditor = this.props.queryEditors.find(qe => qe.id === key);\n        this.props.actions.switchQueryEditor(\n          queryEditor,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n  removeAllOtherQueryEditors(cqe) {\n    this.props.queryEditors.forEach(\n      qe => qe !== cqe && this.removeQueryEditor(qe),\n    );\n  }\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n  toggleLeftBar() {\n    this.setState({ hideLeftBar: !this.state.hideLeftBar });\n  }\n  render() {\n    const editors = this.props.queryEditors.map((qe, i) => {\n      const isSelected =\n        this.activeQueryEditor() && this.activeQueryEditor().id === qe.id;\n\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const title = (\n        <>\n          <TabStatusIcon\n            onClose={() => this.removeQueryEditor(qe)}\n            tabState={state}\n          />{' '}\n          {qe.title}{' '}\n        </>\n      );\n      const tabTitle = (\n        <>\n          <span className=\"ddbtn-tab\">{title}</span>\n          {isSelected && (\n            <SplitButton\n              bsSize=\"small\"\n              id={'ddbtn-tab-' + i}\n              className=\"ddbtn-tab\"\n              title=\"&nbsp;\"\n            >\n              <MenuItem\n                className=\"close-btn\"\n                eventKey=\"1\"\n                onClick={() => this.removeQueryEditor(qe)}\n              >\n                <div className=\"icon-container\">\n                  <i className=\"fa fa-close\" />\n                </div>\n                {t('Close tab')}\n              </MenuItem>\n              <MenuItem eventKey=\"2\" onClick={() => this.renameTab(qe)}>\n                <div className=\"icon-container\">\n                  <i className=\"fa fa-i-cursor\" />\n                </div>\n                {t('Rename tab')}\n              </MenuItem>\n              <MenuItem eventKey=\"3\" onClick={this.toggleLeftBar}>\n                <div className=\"icon-container\">\n                  <i className=\"fa fa-cogs\" />\n                </div>\n                {this.state.hideLeftBar\n                  ? t('Expand tool bar')\n                  : t('Hide tool bar')}\n              </MenuItem>\n              <MenuItem\n                eventKey=\"4\"\n                onClick={() => this.removeAllOtherQueryEditors(qe)}\n              >\n                <div className=\"icon-container\">\n                  <i className=\"fa fa-times-circle-o\" />\n                </div>\n                {t('Close all other tabs')}\n              </MenuItem>\n              <MenuItem\n                eventKey=\"5\"\n                onClick={() => this.duplicateQueryEditor(qe)}\n              >\n                <div className=\"icon-container\">\n                  <i className=\"fa fa-files-o\" />\n                </div>\n                {t('Duplicate tab')}\n              </MenuItem>\n            </SplitButton>\n          )}\n        </>\n      );\n      return (\n        <Tab key={qe.id} title={tabTitle} eventKey={qe.id}>\n          {isSelected && (\n            <SqlEditor\n              tables={this.props.tables.filter(\n                xt => xt.queryEditorId === qe.id,\n              )}\n              queryEditor={qe}\n              editorQueries={this.state.queriesArray}\n              dataPreviewQueries={this.state.dataPreviewQueries}\n              latestQuery={latestQuery}\n              database={database}\n              actions={this.props.actions}\n              hideLeftBar={this.state.hideLeftBar}\n              defaultQueryLimit={this.props.defaultQueryLimit}\n              maxRow={this.props.maxRow}\n              displayLimit={this.props.displayLimit}\n              saveQueryWarning={this.props.saveQueryWarning}\n              scheduleQueryWarning={this.props.scheduleQueryWarning}\n            />\n          )}\n        </Tab>\n      );\n    });\n    return (\n      <Tabs\n        bsStyle=\"tabs\"\n        animation={false}\n        activeKey={this.props.tabHistory[this.props.tabHistory.length - 1]}\n        onSelect={this.handleSelect.bind(this)}\n        id=\"a11y-query-editor-tabs\"\n        className=\"SqlEditorTabs\"\n      >\n        {editors}\n        <Tab\n          title={\n            <div>\n              <i className=\"fa fa-plus-circle\" />\n              &nbsp;\n            </div>\n          }\n          className=\"addEditorTab\"\n          eventKey=\"add_tab\"\n          disabled={this.props.offline}\n        />\n      </Tabs>\n    );\n  }\n}\nTabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nexport { TabbedSqlEditors };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);\n"]},"metadata":{},"sourceType":"module"}
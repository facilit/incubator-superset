{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                 * Licensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                 * or more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                 * distributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                 * regarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                 * to you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"License\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                 * with the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                 * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                 * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                 * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                 * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                 */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, FormGroup, Radio } from 'react-bootstrap';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport ModalTrigger from '../../components/ModalTrigger';\nimport Checkbox from '../../components/Checkbox';\nimport { SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD } from '../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  saveType: PropTypes.oneOf([SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD]),\n  triggerNode: PropTypes.node.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  isMenuItem: PropTypes.bool,\n  canOverwrite: PropTypes.bool.isRequired,\n  refreshFrequency: PropTypes.number.isRequired };\n\n\nconst defaultProps = {\n  isMenuItem: false,\n  saveType: SAVE_TYPE_OVERWRITE,\n  colorNamespace: undefined,\n  colorScheme: undefined };\n\n\nclass SaveModal extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6;\n    super(props);\n    this.state = {\n      saveType: props.saveType,\n      newDashName: props.dashboardTitle + \" [copy]\",\n      duplicateSlices: false };\n\n    this.modal = null;\n    this.handleSaveTypeChange = _bindInstanceProperty(_context = this.handleSaveTypeChange).call(_context, this);\n    this.handleNameChange = _bindInstanceProperty(_context2 = this.handleNameChange).call(_context2, this);\n    this.saveDashboard = _bindInstanceProperty(_context3 = this.saveDashboard).call(_context3, this);\n    this.setModalRef = _bindInstanceProperty(_context4 = this.setModalRef).call(_context4, this);\n    this.toggleDuplicateSlices = _bindInstanceProperty(_context5 = this.toggleDuplicateSlices).call(_context5, this);\n    this.onSave = _bindInstanceProperty(_context6 = this.props.onSave).call(_context6, this);\n  }\n\n  setModalRef(ref) {\n    this.modal = ref;\n  }\n\n  toggleDuplicateSlices() {\n    this.setState({ duplicateSlices: !this.state.duplicateSlices });\n  }\n\n  handleSaveTypeChange(event) {\n    this.setState({\n      saveType: event.target.value });\n\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newDashName: event.target.value,\n      saveType: SAVE_TYPE_NEWDASHBOARD });\n\n  }\n\n  saveDashboard() {\n    const { saveType, newDashName } = this.state;\n    const {\n      dashboardTitle,\n      dashboardInfo,\n      layout: positions,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      expandedSlices,\n      dashboardId,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency } =\n    this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n    colorScheme,\n    colorNamespace);\n\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency ?\n    currentRefreshFrequency :\n    dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      css: customCss,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      expanded_slices: expandedSlices,\n      dashboard_title:\n      saveType === SAVE_TYPE_NEWDASHBOARD ? newDashName : dashboardTitle,\n      duplicate_slices: this.state.duplicateSlices,\n      refresh_frequency: refreshFrequency };\n\n\n    if (saveType === SAVE_TYPE_NEWDASHBOARD && !newDashName) {\n      this.props.addDangerToast(\n      t('You must pick a name for the new dashboard'));\n\n    } else {\n      this.onSave(data, dashboardId, saveType).then(resp => {\n        if (\n        saveType === SAVE_TYPE_NEWDASHBOARD &&\n        resp &&\n        resp.json &&\n        resp.json.id)\n        {\n          window.location = \"/superset/dashboard/\" + resp.json.id + \"/\";\n        }\n      });\n      this.modal.close();\n    }\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(ModalTrigger, {\n        ref: this.setModalRef,\n        isMenuItem: this.props.isMenuItem,\n        triggerNode: this.props.triggerNode,\n        modalTitle: t('Save Dashboard'),\n        modalBody:\n        ___EmotionJSX(FormGroup, null,\n        ___EmotionJSX(Radio, {\n          value: SAVE_TYPE_OVERWRITE,\n          onChange: this.handleSaveTypeChange,\n          checked: this.state.saveType === SAVE_TYPE_OVERWRITE,\n          disabled: !this.props.canOverwrite },\n\n        t('Overwrite Dashboard [%s]', this.props.dashboardTitle)),\n\n        ___EmotionJSX(\"hr\", null),\n        ___EmotionJSX(Radio, {\n          value: SAVE_TYPE_NEWDASHBOARD,\n          onChange: this.handleSaveTypeChange,\n          checked: this.state.saveType === SAVE_TYPE_NEWDASHBOARD },\n\n        t('Save as:')),\n\n        ___EmotionJSX(FormControl, {\n          type: \"text\",\n          placeholder: t('[dashboard name]'),\n          value: this.state.newDashName,\n          onFocus: this.handleNameChange,\n          onChange: this.handleNameChange }),\n\n        ___EmotionJSX(\"div\", { className: \"m-l-25 m-t-5\" },\n        ___EmotionJSX(Checkbox, {\n          checked: this.state.duplicateSlices,\n          onChange: this.toggleDuplicateSlices }),\n\n        ___EmotionJSX(\"span\", { className: \"m-l-5\" }, t('also copy (duplicate) charts')))),\n\n\n\n        modalFooter:\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(Button, { bsStyle: \"primary\", onClick: this.saveDashboard },\n        t('Save'))) }));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSaveModal.propTypes = propTypes;\nSaveModal.defaultProps = defaultProps;const _default =\n\nSaveModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(SaveModal, \"SaveModal\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/SaveModal.jsx"],"names":["React","PropTypes","Button","FormControl","FormGroup","Radio","CategoricalColorNamespace","t","ModalTrigger","Checkbox","SAVE_TYPE_OVERWRITE","SAVE_TYPE_NEWDASHBOARD","propTypes","addSuccessToast","func","isRequired","addDangerToast","dashboardId","number","dashboardTitle","string","dashboardInfo","object","expandedSlices","layout","saveType","oneOf","triggerNode","node","customCss","colorNamespace","colorScheme","onSave","isMenuItem","bool","canOverwrite","refreshFrequency","defaultProps","undefined","SaveModal","PureComponent","constructor","props","state","newDashName","duplicateSlices","modal","handleSaveTypeChange","handleNameChange","saveDashboard","setModalRef","toggleDuplicateSlices","ref","setState","event","target","value","positions","currentRefreshFrequency","shouldPersistRefreshFrequency","scale","getScale","labelColors","getColorMap","metadata","refresh_frequency","data","css","color_namespace","color_scheme","label_colors","expanded_slices","dashboard_title","duplicate_slices","then","resp","json","id","window","location","close","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, FormGroup, Radio } from 'react-bootstrap';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport ModalTrigger from '../../components/ModalTrigger';\nimport Checkbox from '../../components/Checkbox';\nimport { SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD } from '../util/constants';\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  saveType: PropTypes.oneOf([SAVE_TYPE_OVERWRITE, SAVE_TYPE_NEWDASHBOARD]),\n  triggerNode: PropTypes.node.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  onSave: PropTypes.func.isRequired,\n  isMenuItem: PropTypes.bool,\n  canOverwrite: PropTypes.bool.isRequired,\n  refreshFrequency: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  isMenuItem: false,\n  saveType: SAVE_TYPE_OVERWRITE,\n  colorNamespace: undefined,\n  colorScheme: undefined,\n};\n\nclass SaveModal extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saveType: props.saveType,\n      newDashName: `${props.dashboardTitle} [copy]`,\n      duplicateSlices: false,\n    };\n    this.modal = null;\n    this.handleSaveTypeChange = this.handleSaveTypeChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.saveDashboard = this.saveDashboard.bind(this);\n    this.setModalRef = this.setModalRef.bind(this);\n    this.toggleDuplicateSlices = this.toggleDuplicateSlices.bind(this);\n    this.onSave = this.props.onSave.bind(this);\n  }\n\n  setModalRef(ref) {\n    this.modal = ref;\n  }\n\n  toggleDuplicateSlices() {\n    this.setState({ duplicateSlices: !this.state.duplicateSlices });\n  }\n\n  handleSaveTypeChange(event) {\n    this.setState({\n      saveType: event.target.value,\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newDashName: event.target.value,\n      saveType: SAVE_TYPE_NEWDASHBOARD,\n    });\n  }\n\n  saveDashboard() {\n    const { saveType, newDashName } = this.state;\n    const {\n      dashboardTitle,\n      dashboardInfo,\n      layout: positions,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      expandedSlices,\n      dashboardId,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency,\n    } = this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n      colorScheme,\n      colorNamespace,\n    );\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency\n      ? currentRefreshFrequency\n      : dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      css: customCss,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      expanded_slices: expandedSlices,\n      dashboard_title:\n        saveType === SAVE_TYPE_NEWDASHBOARD ? newDashName : dashboardTitle,\n      duplicate_slices: this.state.duplicateSlices,\n      refresh_frequency: refreshFrequency,\n    };\n\n    if (saveType === SAVE_TYPE_NEWDASHBOARD && !newDashName) {\n      this.props.addDangerToast(\n        t('You must pick a name for the new dashboard'),\n      );\n    } else {\n      this.onSave(data, dashboardId, saveType).then(resp => {\n        if (\n          saveType === SAVE_TYPE_NEWDASHBOARD &&\n          resp &&\n          resp.json &&\n          resp.json.id\n        ) {\n          window.location = `/superset/dashboard/${resp.json.id}/`;\n        }\n      });\n      this.modal.close();\n    }\n  }\n\n  render() {\n    return (\n      <ModalTrigger\n        ref={this.setModalRef}\n        isMenuItem={this.props.isMenuItem}\n        triggerNode={this.props.triggerNode}\n        modalTitle={t('Save Dashboard')}\n        modalBody={\n          <FormGroup>\n            <Radio\n              value={SAVE_TYPE_OVERWRITE}\n              onChange={this.handleSaveTypeChange}\n              checked={this.state.saveType === SAVE_TYPE_OVERWRITE}\n              disabled={!this.props.canOverwrite}\n            >\n              {t('Overwrite Dashboard [%s]', this.props.dashboardTitle)}\n            </Radio>\n            <hr />\n            <Radio\n              value={SAVE_TYPE_NEWDASHBOARD}\n              onChange={this.handleSaveTypeChange}\n              checked={this.state.saveType === SAVE_TYPE_NEWDASHBOARD}\n            >\n              {t('Save as:')}\n            </Radio>\n            <FormControl\n              type=\"text\"\n              placeholder={t('[dashboard name]')}\n              value={this.state.newDashName}\n              onFocus={this.handleNameChange}\n              onChange={this.handleNameChange}\n            />\n            <div className=\"m-l-25 m-t-5\">\n              <Checkbox\n                checked={this.state.duplicateSlices}\n                onChange={this.toggleDuplicateSlices}\n              />\n              <span className=\"m-l-5\">{t('also copy (duplicate) charts')}</span>\n            </div>\n          </FormGroup>\n        }\n        modalFooter={\n          <div>\n            <Button bsStyle=\"primary\" onClick={this.saveDashboard}>\n              {t('Save')}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nSaveModal.propTypes = propTypes;\nSaveModal.defaultProps = defaultProps;\n\nexport default SaveModal;\n"]},"metadata":{},"sourceType":"module"}
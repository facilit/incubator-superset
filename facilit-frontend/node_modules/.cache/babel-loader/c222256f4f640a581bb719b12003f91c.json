{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _entriesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/entries\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * \"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CompactPicker } from 'react-color';\nimport { Button } from 'react-bootstrap';\nimport mathjs from 'mathjs';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport { getCategoricalSchemeRegistry } from '@superset-ui/color';\nimport { getChartMetadataRegistry } from '@superset-ui/chart';\nimport { validateNonEmpty } from '@superset-ui/validator';\n\nimport SelectControl from './SelectControl';\nimport TextControl from './TextControl';\nimport CheckboxControl from './CheckboxControl';\n\nimport ANNOTATION_TYPES, {\nANNOTATION_SOURCE_TYPES,\nANNOTATION_TYPES_METADATA,\nDEFAULT_ANNOTATION_TYPE,\nrequiresQuery,\nANNOTATION_SOURCE_TYPES_METADATA } from\n'../../../modules/AnnotationTypes';\n\nimport PopoverSection from '../../../components/PopoverSection';\nimport ControlHeader from '../ControlHeader';\nimport './AnnotationLayer.less';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: PropTypes.string,\n  annotationType: PropTypes.string,\n  sourceType: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  style: PropTypes.string,\n  width: PropTypes.number,\n  showMarkers: PropTypes.bool,\n  hideLine: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overrides: PropTypes.object,\n  show: PropTypes.bool,\n  titleColumn: PropTypes.string,\n  descriptionColumns: PropTypes.arrayOf(PropTypes.string),\n  timeColumn: PropTypes.string,\n  intervalEndColumn: PropTypes.string,\n  vizType: PropTypes.string,\n\n  error: PropTypes.string,\n  colorScheme: PropTypes.string,\n\n  addAnnotationLayer: PropTypes.func,\n  removeAnnotationLayer: PropTypes.func,\n  close: PropTypes.func };\n\n\nconst defaultProps = {\n  name: '',\n  annotationType: DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {} };\n\n\nexport default class AnnotationLayer extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8;\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn } =\n    props;\n\n    const overridesKeys = _Object$keys(overrides);\n    if (_includesInstanceProperty(overridesKeys).call(overridesKeys, 'since') || _includesInstanceProperty(overridesKeys).call(overridesKeys, 'until')) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    this.state = {\n      // base\n      name,\n      oldName: !this.props.name ? null : name,\n      annotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !this.props.name,\n      isLoadingOptions: true,\n      valueOptions: [],\n      validationErrors: {} };\n\n    this.submitAnnotation = _bindInstanceProperty(_context = this.submitAnnotation).call(_context, this);\n    this.deleteAnnotation = _bindInstanceProperty(_context2 = this.deleteAnnotation).call(_context2, this);\n    this.applyAnnotation = _bindInstanceProperty(_context3 = this.applyAnnotation).call(_context3, this);\n    this.fetchOptions = _bindInstanceProperty(_context4 = this.fetchOptions).call(_context4, this);\n    this.handleAnnotationType = _bindInstanceProperty(_context5 = this.handleAnnotationType).call(_context5, this);\n    this.handleAnnotationSourceType = _bindInstanceProperty(_context6 = this.handleAnnotationSourceType).call(_context6,\n    this);\n\n    this.handleValue = _bindInstanceProperty(_context7 = this.handleValue).call(_context7, this);\n    this.isValidForm = _bindInstanceProperty(_context8 = this.isValidForm).call(_context8, this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {var _context9, _context10, _context11;\n    // Get vis types that can be source.\n    const sources = _mapInstanceProperty(_context9 = _filterInstanceProperty(_context10 = _entriesInstanceProperty(_context11 = getChartMetadataRegistry()).call(_context11)).call(_context10,\n\n    ({ value: chartMetadata }) =>\n    chartMetadata.canBeAnnotationType(annotationType))).call(_context9,\n\n    ({ key, value: chartMetadata }) => ({\n      value: key,\n      label: chartMetadata.name }));\n\n    // Prepend native source if applicable\n    if (ANNOTATION_TYPES_METADATA[annotationType].supportNativeSource) {\n      sources.unshift(ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormula(value, annotationType) {\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      try {\n        mathjs.parse(value).compile().eval({ x: 0 });\n      } catch (err) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn } =\n    this.state;\n    const errors = [\n    validateNonEmpty(name),\n    validateNonEmpty(annotationType),\n    validateNonEmpty(value)];\n\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === ANNOTATION_TYPES.EVENT) {\n        errors.push(validateNonEmpty(timeColumn));\n      }\n      if (annotationType === ANNOTATION_TYPES.INTERVAL) {\n        errors.push(validateNonEmpty(timeColumn));\n        errors.push(validateNonEmpty(intervalEndColumn));\n      }\n    }\n    errors.push(this.isValidFormula(value, annotationType));\n    return !_filterInstanceProperty(errors).call(errors, x => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      validationErrors: {},\n      value: null });\n\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({\n        sourceType,\n        isLoadingOptions: true,\n        validationErrors: {},\n        value: null });\n\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: null,\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null } });\n\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions === true) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        SupersetClient.get({\n          endpoint: '/annotationlayermodelview/api/read?' }).\n        then(({ json }) => {var _context12;\n          const layers = json ?\n          _mapInstanceProperty(_context12 = json.result).call(_context12, layer => ({\n            value: layer.id,\n            label: layer.name })) :\n\n          [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers });\n\n        });\n      } else if (requiresQuery(sourceType)) {\n        SupersetClient.get({ endpoint: '/superset/user_slices' }).then(\n        ({ json }) => {var _context13;\n          const registry = getChartMetadataRegistry();\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: _mapInstanceProperty(_context13 = _filterInstanceProperty(json).call(json,\n            x => {\n              const metadata = registry.get(x.viz_type);\n              return (\n                metadata && metadata.canBeAnnotationType(annotationType));\n\n            })).call(_context13,\n            x => ({ value: x.id, label: x.title, slice: x })) });\n\n        });\n\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: [] });\n\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.close();\n    if (!this.state.isNew) {\n      this.props.removeAnnotationLayer(this.state);\n    }\n  }\n\n  applyAnnotation() {\n    if (this.state.name.length) {var _context14;\n      const annotation = {};\n      _forEachInstanceProperty(_context14 = _Object$keys(this.state)).call(_context14, k => {\n        if (this.state[k] !== null) {\n          annotation[k] = this.state[k];\n        }\n      });\n      delete annotation.isNew;\n      delete annotation.valueOptions;\n      delete annotation.isLoadingOptions;\n      delete annotation.validationErrors;\n      annotation.color =\n      annotation.color === AUTOMATIC_COLOR ? null : annotation.color;\n      this.props.addAnnotationLayer(annotation);\n      this.setState({ isNew: false, oldName: this.state.name });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      ___EmotionJSX(\"span\", { className: \"optionWrapper\", title: option.label, __source: { fileName: _jsxFileName, lineNumber: 342 }, __self: this },\n      option.label));\n\n\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions } =\n    this.state;\n    let label = '';\n    let description = '';\n    if (requiresQuery(sourceType)) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = 'Annotation Layer';\n        description = 'Select the Annotation Layer you would like to use.';\n      } else {var _context15;\n        label = label = t('Chart');\n        description = \"Use a pre defined Superset Chart as a source for annotations and overlays.\\n        your chart must be one of these visualization types:\\n        [\" +\n\n        _mapInstanceProperty(_context15 = this.getSupportedSourceTypes(annotationType)).call(_context15,\n        x => x.label).\n        join(', ') + \"]\";\n      }\n    } else if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      label = 'Formula';\n      description = \"Expects a formula with depending time parameter 'x'\\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\\n        Example: '2x+5'\";\n\n\n    }\n    if (requiresQuery(sourceType)) {\n      return (\n        ___EmotionJSX(SelectControl, {\n          name: \"annotation-layer-value\",\n          showHeader: true,\n          hovered: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          options: valueOptions,\n          isLoading: isLoadingOptions,\n          value: value,\n          onChange: this.handleValue,\n          validationErrors: !value ? ['Mandatory'] : [],\n          optionRenderer: this.renderOption, __source: { fileName: _jsxFileName, lineNumber: 378 }, __self: this }));\n\n\n    }\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return (\n        ___EmotionJSX(TextControl, {\n          name: \"annotation-layer-value\",\n          hovered: true,\n          showHeader: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          value: value,\n          onChange: this.handleValue,\n          validationErrors:\n          this.isValidFormula(value, annotationType) ? ['Bad formula.'] : [], __source: { fileName: _jsxFileName, lineNumber: 396 }, __self: this }));\n\n\n\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns } =\n    this.state;\n    const slice = _sliceInstanceProperty(_findInstanceProperty(valueOptions).call(valueOptions, x => x.value === value) || {});\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE && slice) {var _context16, _context17, _context18, _context19, _context20, _context21;\n      const columns = _mapInstanceProperty(_context16 = _concatInstanceProperty(_context17 = slice.data.groupby || []).call(_context17,\n      slice.data.all_columns || [])).call(_context16,\n      x => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time ?\n      _concatInstanceProperty(_context18 = [{ value: '__timestamp', label: '__timestamp' }]).call(_context18, columns) :\n      columns;\n      return (\n        ___EmotionJSX(\"div\", { style: { marginRight: '2rem' }, __source: { fileName: _jsxFileName, lineNumber: 435 }, __self: this },\n        ___EmotionJSX(PopoverSection, {\n          isSelected: true,\n          onSelect: () => {},\n          title: \"Annotation Slice Configuration\",\n          info: \"This section allows you to configure how to use the slice\\n               to generate annotations.\", __source: { fileName: _jsxFileName, lineNumber: 436 }, __self: this },\n\n\n        (annotationType === ANNOTATION_TYPES.EVENT ||\n        annotationType === ANNOTATION_TYPES.INTERVAL) &&\n        ___EmotionJSX(SelectControl, {\n          hovered: true,\n          name: \"annotation-layer-time-column\",\n          label:\n          annotationType === ANNOTATION_TYPES.INTERVAL ?\n          'Interval Start column' :\n          'Event Time Column',\n\n          description: 'This column must contain date/time information.',\n          validationErrors: !timeColumn ? ['Mandatory'] : [],\n          clearable: false,\n          options: timeColumnOptions,\n          value: timeColumn,\n          onChange: v => this.setState({ timeColumn: v }), __source: { fileName: _jsxFileName, lineNumber: 445 }, __self: this }),\n\n\n        annotationType === ANNOTATION_TYPES.INTERVAL &&\n        ___EmotionJSX(SelectControl, {\n          hovered: true,\n          name: \"annotation-layer-intervalEnd\",\n          label: \"Interval End column\",\n          description: 'This column must contain date/time information.',\n          validationErrors: !intervalEndColumn ? ['Mandatory'] : [],\n          options: columns,\n          value: intervalEndColumn,\n          onChange: v => this.setState({ intervalEndColumn: v }), __source: { fileName: _jsxFileName, lineNumber: 462 }, __self: this }),\n\n\n        ___EmotionJSX(SelectControl, {\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: \"Title Column\",\n          description: 'Pick a title for you annotation.',\n          options: _concatInstanceProperty(_context19 = [{ value: '', label: 'None' }]).call(_context19, columns),\n          value: titleColumn,\n          onChange: v => this.setState({ titleColumn: v }), __source: { fileName: _jsxFileName, lineNumber: 473 }, __self: this }),\n\n        annotationType !== ANNOTATION_TYPES.TIME_SERIES &&\n        ___EmotionJSX(SelectControl, {\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: \"Description Columns\",\n          description: \"Pick one or more columns that should be shown in the\\n                  annotation. If you don't select a column all of them will be shown.\",\n\n          multi: true,\n          options: columns,\n          value: descriptionColumns,\n          onChange: v => this.setState({ descriptionColumns: v }), __source: { fileName: _jsxFileName, lineNumber: 483 }, __self: this }),\n\n\n        ___EmotionJSX(\"div\", { style: { marginTop: '1rem' }, __source: { fileName: _jsxFileName, lineNumber: 495 }, __self: this },\n        ___EmotionJSX(CheckboxControl, {\n          hovered: true,\n          name: \"annotation-override-time_range\",\n          label: \"Override time range\",\n          description: \"This controls whether the \\\"time_range\\\" field from the current\\n                  view should be passed down to the chart containing the annotation data.\",\n\n          value: !!_findInstanceProperty(_context20 = _Object$keys(overrides)).call(_context20, x => x === 'time_range'),\n          onChange: v => {\n            delete overrides.time_range;\n            if (v) {\n              this.setState({\n                overrides: _Object$assign({}, overrides, { time_range: null }) });\n\n            } else {\n              this.setState({ overrides: _Object$assign({}, overrides) });\n            }\n          }, __source: { fileName: _jsxFileName, lineNumber: 496 }, __self: this }),\n\n        ___EmotionJSX(CheckboxControl, {\n          hovered: true,\n          name: \"annotation-override-timegrain\",\n          label: \"Override time grain\",\n          description: \"This controls whether the time grain field from the current\\n                  view should be passed down to the chart containing the annotation data.\",\n\n          value:\n          !!_findInstanceProperty(_context21 = _Object$keys(overrides)).call(_context21, x => x === 'time_grain_sqla'),\n\n          onChange: v => {\n            delete overrides.time_grain_sqla;\n            delete overrides.granularity;\n            if (v) {\n              this.setState({\n                overrides: _Object$assign({},\n                overrides, {\n                  time_grain_sqla: null,\n                  granularity: null }) });\n\n\n            } else {\n              this.setState({ overrides: _Object$assign({}, overrides) });\n            }\n          }, __source: { fileName: _jsxFileName, lineNumber: 514 }, __self: this }),\n\n        ___EmotionJSX(TextControl, {\n          hovered: true,\n          name: \"annotation-layer-timeshift\",\n          label: \"Time Shift\",\n          description: \"Time delta in natural language\\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)\",\n\n          placeholder: \"\",\n          value: overrides.time_shift,\n          onChange: (v) =>\n          this.setState({ overrides: _Object$assign({}, overrides, { time_shift: v }) }), __source: { fileName: _jsxFileName, lineNumber: 539 }, __self: this })))));\n\n\n\n\n\n\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {var _context22;\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType } =\n    this.state;\n    const colorScheme = _concatInstanceProperty(_context22 = getCategoricalSchemeRegistry().\n    get(this.props.colorScheme).\n    colors).call(_context22);\n    if (\n    color &&\n    color !== AUTOMATIC_COLOR &&\n    !_findInstanceProperty(colorScheme).call(colorScheme, x => x.toLowerCase() === color.toLowerCase()))\n    {\n      colorScheme.push(color);\n    }\n    return (\n      ___EmotionJSX(PopoverSection, {\n        isSelected: true,\n        onSelect: () => {},\n        title: t('Display configuration'),\n        info: t('Configure your how you overlay is displayed here.'), __source: { fileName: _jsxFileName, lineNumber: 580 }, __self: this },\n\n      ___EmotionJSX(SelectControl, {\n        name: \"annotation-layer-stroke\",\n        label: t('Style')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: 'solid', label: 'Solid' },\n        { value: 'dashed', label: 'Dashed' },\n        { value: 'longDashed', label: 'Long Dashed' },\n        { value: 'dotted', label: 'Dotted' }],\n\n        value: style,\n        onChange: v => this.setState({ style: v }), __source: { fileName: _jsxFileName, lineNumber: 586 }, __self: this }),\n\n      ___EmotionJSX(SelectControl, {\n        name: \"annotation-layer-opacity\",\n        label: t('Opacity')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: '', label: 'Solid' },\n        { value: 'opacityLow', label: '0.2' },\n        { value: 'opacityMedium', label: '0.5' },\n        { value: 'opacityHigh', label: '0.8' }],\n\n        value: opacity,\n        onChange: v => this.setState({ opacity: v }), __source: { fileName: _jsxFileName, lineNumber: 599 }, __self: this }),\n\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 612 }, __self: this },\n      ___EmotionJSX(ControlHeader, { label: t('Color'), __source: { fileName: _jsxFileName, lineNumber: 613 }, __self: this }),\n      ___EmotionJSX(\"div\", { style: { display: 'flex', flexDirection: 'column' }, __source: { fileName: _jsxFileName, lineNumber: 614 }, __self: this },\n      ___EmotionJSX(CompactPicker, {\n        color: color,\n        colors: colorScheme,\n        onChangeComplete: v => this.setState({ color: v.hex }), __source: { fileName: _jsxFileName, lineNumber: 615 }, __self: this }),\n\n      ___EmotionJSX(Button, {\n        style: { marginTop: '0.5rem', marginBottom: '0.5rem' },\n        bsStyle: color === AUTOMATIC_COLOR ? 'success' : 'default',\n        bsSize: \"xsmall\",\n        onClick: () => this.setState({ color: AUTOMATIC_COLOR }), __source: { fileName: _jsxFileName, lineNumber: 620 }, __self: this }, \"Automatic Color\"))),\n\n\n\n\n\n      ___EmotionJSX(TextControl, {\n        name: \"annotation-layer-stroke-width\",\n        label: t('Line Width'),\n        isInt: true,\n        value: width,\n        onChange: v => this.setState({ width: v }), __source: { fileName: _jsxFileName, lineNumber: 630 }, __self: this }),\n\n      annotationType === ANNOTATION_TYPES.TIME_SERIES &&\n      ___EmotionJSX(CheckboxControl, {\n        hovered: true,\n        name: \"annotation-layer-show-markers\",\n        label: \"Show Markers\",\n        description: 'Shows or hides markers for the time series',\n        value: showMarkers,\n        onChange: v => this.setState({ showMarkers: v }), __source: { fileName: _jsxFileName, lineNumber: 638 }, __self: this }),\n\n\n      annotationType === ANNOTATION_TYPES.TIME_SERIES &&\n      ___EmotionJSX(CheckboxControl, {\n        hovered: true,\n        name: \"annotation-layer-hide-line\",\n        label: \"Hide Line\",\n        description: 'Hides the Line for the time series',\n        value: hideLine,\n        onChange: v => this.setState({ hideLine: v }), __source: { fileName: _jsxFileName, lineNumber: 648 }, __self: this })));\n\n\n\n\n  }\n\n  render() {var _context23;\n    const { isNew, name, annotationType, sourceType, show } = this.state;\n    const isValid = this.isValidForm();\n\n    const metadata = getChartMetadataRegistry().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata ?\n    _mapInstanceProperty(_context23 = metadata.supportedAnnotationTypes).call(_context23,\n    type => ANNOTATION_TYPES_METADATA[type]) :\n\n    [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 674 }, __self: this },\n      this.props.error &&\n      ___EmotionJSX(\"span\", { style: { color: 'red' }, __source: { fileName: _jsxFileName, lineNumber: 676 }, __self: this }, \"ERROR: \", this.props.error),\n\n      ___EmotionJSX(\"div\", { style: { display: 'flex', flexDirection: 'row' }, __source: { fileName: _jsxFileName, lineNumber: 678 }, __self: this },\n      ___EmotionJSX(\"div\", { style: { marginRight: '2rem' }, __source: { fileName: _jsxFileName, lineNumber: 679 }, __self: this },\n      ___EmotionJSX(PopoverSection, {\n        isSelected: true,\n        onSelect: () => {},\n        title: t('Layer Configuration'),\n        info: t('Configure the basics of your Annotation Layer.'), __source: { fileName: _jsxFileName, lineNumber: 680 }, __self: this },\n\n      ___EmotionJSX(TextControl, {\n        name: \"annotation-layer-name\",\n        label: t('Name'),\n        placeholder: \"\",\n        value: name,\n        onChange: v => this.setState({ name: v }),\n        validationErrors: !name ? [t('Mandatory')] : [], __source: { fileName: _jsxFileName, lineNumber: 686 }, __self: this }),\n\n      ___EmotionJSX(CheckboxControl, {\n        name: \"annotation-layer-hide\",\n        label: t('Hide Layer'),\n        value: !show,\n        onChange: v => this.setState({ show: !v }), __source: { fileName: _jsxFileName, lineNumber: 694 }, __self: this }),\n\n      ___EmotionJSX(SelectControl, {\n        hovered: true,\n        description: t('Choose the Annotation Layer Type'),\n        label: t('Annotation Layer Type'),\n        name: \"annotation-layer-type\",\n        options: supportedAnnotationTypes,\n        value: annotationType,\n        onChange: this.handleAnnotationType, __source: { fileName: _jsxFileName, lineNumber: 700 }, __self: this }),\n\n      !!supportedSourceTypes.length &&\n      ___EmotionJSX(SelectControl, {\n        hovered: true,\n        description: \"Choose the source of your annotations\",\n        label: \"Annotation Source\",\n        name: \"annotation-source-type\",\n        options: supportedSourceTypes,\n        value: sourceType,\n        onChange: this.handleAnnotationSourceType, __source: { fileName: _jsxFileName, lineNumber: 710 }, __self: this }),\n\n\n      this.renderValueConfiguration())),\n\n\n      this.renderSliceConfiguration(),\n      this.renderDisplayConfiguration()),\n\n      ___EmotionJSX(\"div\", { style: { display: 'flex', justifyContent: 'space-between' }, __source: { fileName: _jsxFileName, lineNumber: 726 }, __self: this },\n      ___EmotionJSX(Button, { bsSize: \"sm\", onClick: this.deleteAnnotation, __source: { fileName: _jsxFileName, lineNumber: 727 }, __self: this },\n      !isNew ? t('Remove') : t('Cancel')),\n\n      ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 730 }, __self: this },\n      ___EmotionJSX(Button, {\n        bsSize: \"sm\",\n        disabled: !isValid,\n        onClick: this.applyAnnotation, __source: { fileName: _jsxFileName, lineNumber: 731 }, __self: this },\n\n      t('Apply')),\n\n\n      ___EmotionJSX(Button, {\n        bsSize: \"sm\",\n        disabled: !isValid,\n        onClick: this.submitAnnotation, __source: { fileName: _jsxFileName, lineNumber: 739 }, __self: this },\n\n      t('OK'))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AUTOMATIC_COLOR, \"AUTOMATIC_COLOR\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx\");reactHotLoader.register(AnnotationLayer, \"AnnotationLayer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/AnnotationLayer.jsx"],"names":["React","PropTypes","CompactPicker","Button","mathjs","t","SupersetClient","getCategoricalSchemeRegistry","getChartMetadataRegistry","validateNonEmpty","SelectControl","TextControl","CheckboxControl","ANNOTATION_TYPES","ANNOTATION_SOURCE_TYPES","ANNOTATION_TYPES_METADATA","DEFAULT_ANNOTATION_TYPE","requiresQuery","ANNOTATION_SOURCE_TYPES_METADATA","PopoverSection","ControlHeader","AUTOMATIC_COLOR","propTypes","name","string","annotationType","sourceType","color","opacity","style","width","number","showMarkers","bool","hideLine","value","oneOfType","overrides","object","show","titleColumn","descriptionColumns","arrayOf","timeColumn","intervalEndColumn","vizType","error","colorScheme","addAnnotationLayer","func","removeAnnotationLayer","close","defaultProps","AnnotationLayer","PureComponent","constructor","props","overridesKeys","time_range","since","until","state","oldName","isNew","isLoadingOptions","valueOptions","validationErrors","submitAnnotation","deleteAnnotation","applyAnnotation","fetchOptions","handleAnnotationType","handleAnnotationSourceType","handleValue","isValidForm","componentDidMount","componentDidUpdate","prevProps","prevState","getSupportedSourceTypes","sources","chartMetadata","canBeAnnotationType","key","label","supportNativeSource","unshift","NATIVE","isValidFormula","FORMULA","parse","compile","eval","x","err","errors","EVENT","push","INTERVAL","length","setState","prevSourceType","get","endpoint","then","json","layers","result","layer","id","registry","metadata","viz_type","title","slice","annotation","k","renderOption","option","renderValueConfiguration","description","join","renderSliceConfiguration","columns","data","groupby","all_columns","timeColumnOptions","include_time","marginRight","v","TIME_SERIES","marginTop","time_grain_sqla","granularity","time_shift","renderDisplayConfiguration","colors","toLowerCase","display","flexDirection","hex","marginBottom","render","isValid","supportedAnnotationTypes","type","supportedSourceTypes","justifyContent"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CompactPicker } from 'react-color';\nimport { Button } from 'react-bootstrap';\nimport mathjs from 'mathjs';\nimport { t } from '@superset-ui/translation';\nimport { SupersetClient } from '@superset-ui/connection';\nimport { getCategoricalSchemeRegistry } from '@superset-ui/color';\nimport { getChartMetadataRegistry } from '@superset-ui/chart';\nimport { validateNonEmpty } from '@superset-ui/validator';\n\nimport SelectControl from './SelectControl';\nimport TextControl from './TextControl';\nimport CheckboxControl from './CheckboxControl';\n\nimport ANNOTATION_TYPES, {\n  ANNOTATION_SOURCE_TYPES,\n  ANNOTATION_TYPES_METADATA,\n  DEFAULT_ANNOTATION_TYPE,\n  requiresQuery,\n  ANNOTATION_SOURCE_TYPES_METADATA,\n} from '../../../modules/AnnotationTypes';\n\nimport PopoverSection from '../../../components/PopoverSection';\nimport ControlHeader from '../ControlHeader';\nimport './AnnotationLayer.less';\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: PropTypes.string,\n  annotationType: PropTypes.string,\n  sourceType: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.string,\n  style: PropTypes.string,\n  width: PropTypes.number,\n  showMarkers: PropTypes.bool,\n  hideLine: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overrides: PropTypes.object,\n  show: PropTypes.bool,\n  titleColumn: PropTypes.string,\n  descriptionColumns: PropTypes.arrayOf(PropTypes.string),\n  timeColumn: PropTypes.string,\n  intervalEndColumn: PropTypes.string,\n  vizType: PropTypes.string,\n\n  error: PropTypes.string,\n  colorScheme: PropTypes.string,\n\n  addAnnotationLayer: PropTypes.func,\n  removeAnnotationLayer: PropTypes.func,\n  close: PropTypes.func,\n};\n\nconst defaultProps = {\n  name: '',\n  annotationType: DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {},\n};\n\nexport default class AnnotationLayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n    } = props;\n\n    const overridesKeys = Object.keys(overrides);\n    if (overridesKeys.includes('since') || overridesKeys.includes('until')) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    this.state = {\n      // base\n      name,\n      oldName: !this.props.name ? null : name,\n      annotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !this.props.name,\n      isLoadingOptions: true,\n      valueOptions: [],\n      validationErrors: {},\n    };\n    this.submitAnnotation = this.submitAnnotation.bind(this);\n    this.deleteAnnotation = this.deleteAnnotation.bind(this);\n    this.applyAnnotation = this.applyAnnotation.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.handleAnnotationType = this.handleAnnotationType.bind(this);\n    this.handleAnnotationSourceType = this.handleAnnotationSourceType.bind(\n      this,\n    );\n    this.handleValue = this.handleValue.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {\n    // Get vis types that can be source.\n    const sources = getChartMetadataRegistry()\n      .entries()\n      .filter(({ value: chartMetadata }) =>\n        chartMetadata.canBeAnnotationType(annotationType),\n      )\n      .map(({ key, value: chartMetadata }) => ({\n        value: key,\n        label: chartMetadata.name,\n      }));\n    // Prepend native source if applicable\n    if (ANNOTATION_TYPES_METADATA[annotationType].supportNativeSource) {\n      sources.unshift(ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormula(value, annotationType) {\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      try {\n        mathjs.parse(value).compile().eval({ x: 0 });\n      } catch (err) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn,\n    } = this.state;\n    const errors = [\n      validateNonEmpty(name),\n      validateNonEmpty(annotationType),\n      validateNonEmpty(value),\n    ];\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === ANNOTATION_TYPES.EVENT) {\n        errors.push(validateNonEmpty(timeColumn));\n      }\n      if (annotationType === ANNOTATION_TYPES.INTERVAL) {\n        errors.push(validateNonEmpty(timeColumn));\n        errors.push(validateNonEmpty(intervalEndColumn));\n      }\n    }\n    errors.push(this.isValidFormula(value, annotationType));\n    return !errors.filter(x => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      validationErrors: {},\n      value: null,\n    });\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({\n        sourceType,\n        isLoadingOptions: true,\n        validationErrors: {},\n        value: null,\n      });\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: null,\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null },\n    });\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions === true) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        SupersetClient.get({\n          endpoint: '/annotationlayermodelview/api/read?',\n        }).then(({ json }) => {\n          const layers = json\n            ? json.result.map(layer => ({\n                value: layer.id,\n                label: layer.name,\n              }))\n            : [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers,\n          });\n        });\n      } else if (requiresQuery(sourceType)) {\n        SupersetClient.get({ endpoint: '/superset/user_slices' }).then(\n          ({ json }) => {\n            const registry = getChartMetadataRegistry();\n            this.setState({\n              isLoadingOptions: false,\n              valueOptions: json\n                .filter(x => {\n                  const metadata = registry.get(x.viz_type);\n                  return (\n                    metadata && metadata.canBeAnnotationType(annotationType)\n                  );\n                })\n                .map(x => ({ value: x.id, label: x.title, slice: x })),\n            });\n          },\n        );\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: [],\n        });\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.close();\n    if (!this.state.isNew) {\n      this.props.removeAnnotationLayer(this.state);\n    }\n  }\n\n  applyAnnotation() {\n    if (this.state.name.length) {\n      const annotation = {};\n      Object.keys(this.state).forEach(k => {\n        if (this.state[k] !== null) {\n          annotation[k] = this.state[k];\n        }\n      });\n      delete annotation.isNew;\n      delete annotation.valueOptions;\n      delete annotation.isLoadingOptions;\n      delete annotation.validationErrors;\n      annotation.color =\n        annotation.color === AUTOMATIC_COLOR ? null : annotation.color;\n      this.props.addAnnotationLayer(annotation);\n      this.setState({ isNew: false, oldName: this.state.name });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      <span className=\"optionWrapper\" title={option.label}>\n        {option.label}\n      </span>\n    );\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions,\n    } = this.state;\n    let label = '';\n    let description = '';\n    if (requiresQuery(sourceType)) {\n      if (sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = 'Annotation Layer';\n        description = 'Select the Annotation Layer you would like to use.';\n      } else {\n        label = label = t('Chart');\n        description = `Use a pre defined Superset Chart as a source for annotations and overlays.\n        your chart must be one of these visualization types:\n        [${this.getSupportedSourceTypes(annotationType)\n          .map(x => x.label)\n          .join(', ')}]`;\n      }\n    } else if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      label = 'Formula';\n      description = `Expects a formula with depending time parameter 'x'\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\n        Example: '2x+5'`;\n    }\n    if (requiresQuery(sourceType)) {\n      return (\n        <SelectControl\n          name=\"annotation-layer-value\"\n          showHeader\n          hovered\n          description={description}\n          label={label}\n          placeholder=\"\"\n          options={valueOptions}\n          isLoading={isLoadingOptions}\n          value={value}\n          onChange={this.handleValue}\n          validationErrors={!value ? ['Mandatory'] : []}\n          optionRenderer={this.renderOption}\n        />\n      );\n    }\n    if (annotationType === ANNOTATION_TYPES.FORMULA) {\n      return (\n        <TextControl\n          name=\"annotation-layer-value\"\n          hovered\n          showHeader\n          description={description}\n          label={label}\n          placeholder=\"\"\n          value={value}\n          onChange={this.handleValue}\n          validationErrors={\n            this.isValidFormula(value, annotationType) ? ['Bad formula.'] : []\n          }\n        />\n      );\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns,\n    } = this.state;\n    const slice = (valueOptions.find(x => x.value === value) || {}).slice;\n    if (sourceType !== ANNOTATION_SOURCE_TYPES.NATIVE && slice) {\n      const columns = (slice.data.groupby || [])\n        .concat(slice.data.all_columns || [])\n        .map(x => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time\n        ? [{ value: '__timestamp', label: '__timestamp' }].concat(columns)\n        : columns;\n      return (\n        <div style={{ marginRight: '2rem' }}>\n          <PopoverSection\n            isSelected\n            onSelect={() => {}}\n            title=\"Annotation Slice Configuration\"\n            info={`This section allows you to configure how to use the slice\n               to generate annotations.`}\n          >\n            {(annotationType === ANNOTATION_TYPES.EVENT ||\n              annotationType === ANNOTATION_TYPES.INTERVAL) && (\n              <SelectControl\n                hovered\n                name=\"annotation-layer-time-column\"\n                label={\n                  annotationType === ANNOTATION_TYPES.INTERVAL\n                    ? 'Interval Start column'\n                    : 'Event Time Column'\n                }\n                description={'This column must contain date/time information.'}\n                validationErrors={!timeColumn ? ['Mandatory'] : []}\n                clearable={false}\n                options={timeColumnOptions}\n                value={timeColumn}\n                onChange={v => this.setState({ timeColumn: v })}\n              />\n            )}\n            {annotationType === ANNOTATION_TYPES.INTERVAL && (\n              <SelectControl\n                hovered\n                name=\"annotation-layer-intervalEnd\"\n                label=\"Interval End column\"\n                description={'This column must contain date/time information.'}\n                validationErrors={!intervalEndColumn ? ['Mandatory'] : []}\n                options={columns}\n                value={intervalEndColumn}\n                onChange={v => this.setState({ intervalEndColumn: v })}\n              />\n            )}\n            <SelectControl\n              hovered\n              name=\"annotation-layer-title\"\n              label=\"Title Column\"\n              description={'Pick a title for you annotation.'}\n              options={[{ value: '', label: 'None' }].concat(columns)}\n              value={titleColumn}\n              onChange={v => this.setState({ titleColumn: v })}\n            />\n            {annotationType !== ANNOTATION_TYPES.TIME_SERIES && (\n              <SelectControl\n                hovered\n                name=\"annotation-layer-title\"\n                label=\"Description Columns\"\n                description={`Pick one or more columns that should be shown in the\n                  annotation. If you don't select a column all of them will be shown.`}\n                multi\n                options={columns}\n                value={descriptionColumns}\n                onChange={v => this.setState({ descriptionColumns: v })}\n              />\n            )}\n            <div style={{ marginTop: '1rem' }}>\n              <CheckboxControl\n                hovered\n                name=\"annotation-override-time_range\"\n                label=\"Override time range\"\n                description={`This controls whether the \"time_range\" field from the current\n                  view should be passed down to the chart containing the annotation data.`}\n                value={!!Object.keys(overrides).find(x => x === 'time_range')}\n                onChange={v => {\n                  delete overrides.time_range;\n                  if (v) {\n                    this.setState({\n                      overrides: { ...overrides, time_range: null },\n                    });\n                  } else {\n                    this.setState({ overrides: { ...overrides } });\n                  }\n                }}\n              />\n              <CheckboxControl\n                hovered\n                name=\"annotation-override-timegrain\"\n                label=\"Override time grain\"\n                description={`This controls whether the time grain field from the current\n                  view should be passed down to the chart containing the annotation data.`}\n                value={\n                  !!Object.keys(overrides).find(x => x === 'time_grain_sqla')\n                }\n                onChange={v => {\n                  delete overrides.time_grain_sqla;\n                  delete overrides.granularity;\n                  if (v) {\n                    this.setState({\n                      overrides: {\n                        ...overrides,\n                        time_grain_sqla: null,\n                        granularity: null,\n                      },\n                    });\n                  } else {\n                    this.setState({ overrides: { ...overrides } });\n                  }\n                }}\n              />\n              <TextControl\n                hovered\n                name=\"annotation-layer-timeshift\"\n                label=\"Time Shift\"\n                description={`Time delta in natural language\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)`}\n                placeholder=\"\"\n                value={overrides.time_shift}\n                onChange={v =>\n                  this.setState({ overrides: { ...overrides, time_shift: v } })\n                }\n              />\n            </div>\n          </PopoverSection>\n        </div>\n      );\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType,\n    } = this.state;\n    const colorScheme = getCategoricalSchemeRegistry()\n      .get(this.props.colorScheme)\n      .colors.concat();\n    if (\n      color &&\n      color !== AUTOMATIC_COLOR &&\n      !colorScheme.find(x => x.toLowerCase() === color.toLowerCase())\n    ) {\n      colorScheme.push(color);\n    }\n    return (\n      <PopoverSection\n        isSelected\n        onSelect={() => {}}\n        title={t('Display configuration')}\n        info={t('Configure your how you overlay is displayed here.')}\n      >\n        <SelectControl\n          name=\"annotation-layer-stroke\"\n          label={t('Style')}\n          // see '../../../visualizations/nvd3_vis.css'\n          options={[\n            { value: 'solid', label: 'Solid' },\n            { value: 'dashed', label: 'Dashed' },\n            { value: 'longDashed', label: 'Long Dashed' },\n            { value: 'dotted', label: 'Dotted' },\n          ]}\n          value={style}\n          onChange={v => this.setState({ style: v })}\n        />\n        <SelectControl\n          name=\"annotation-layer-opacity\"\n          label={t('Opacity')}\n          // see '../../../visualizations/nvd3_vis.css'\n          options={[\n            { value: '', label: 'Solid' },\n            { value: 'opacityLow', label: '0.2' },\n            { value: 'opacityMedium', label: '0.5' },\n            { value: 'opacityHigh', label: '0.8' },\n          ]}\n          value={opacity}\n          onChange={v => this.setState({ opacity: v })}\n        />\n        <div>\n          <ControlHeader label={t('Color')} />\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <CompactPicker\n              color={color}\n              colors={colorScheme}\n              onChangeComplete={v => this.setState({ color: v.hex })}\n            />\n            <Button\n              style={{ marginTop: '0.5rem', marginBottom: '0.5rem' }}\n              bsStyle={color === AUTOMATIC_COLOR ? 'success' : 'default'}\n              bsSize=\"xsmall\"\n              onClick={() => this.setState({ color: AUTOMATIC_COLOR })}\n            >\n              Automatic Color\n            </Button>\n          </div>\n        </div>\n        <TextControl\n          name=\"annotation-layer-stroke-width\"\n          label={t('Line Width')}\n          isInt\n          value={width}\n          onChange={v => this.setState({ width: v })}\n        />\n        {annotationType === ANNOTATION_TYPES.TIME_SERIES && (\n          <CheckboxControl\n            hovered\n            name=\"annotation-layer-show-markers\"\n            label=\"Show Markers\"\n            description={'Shows or hides markers for the time series'}\n            value={showMarkers}\n            onChange={v => this.setState({ showMarkers: v })}\n          />\n        )}\n        {annotationType === ANNOTATION_TYPES.TIME_SERIES && (\n          <CheckboxControl\n            hovered\n            name=\"annotation-layer-hide-line\"\n            label=\"Hide Line\"\n            description={'Hides the Line for the time series'}\n            value={hideLine}\n            onChange={v => this.setState({ hideLine: v })}\n          />\n        )}\n      </PopoverSection>\n    );\n  }\n\n  render() {\n    const { isNew, name, annotationType, sourceType, show } = this.state;\n    const isValid = this.isValidForm();\n\n    const metadata = getChartMetadataRegistry().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata\n      ? metadata.supportedAnnotationTypes.map(\n          type => ANNOTATION_TYPES_METADATA[type],\n        )\n      : [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      <div>\n        {this.props.error && (\n          <span style={{ color: 'red' }}>ERROR: {this.props.error}</span>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          <div style={{ marginRight: '2rem' }}>\n            <PopoverSection\n              isSelected\n              onSelect={() => {}}\n              title={t('Layer Configuration')}\n              info={t('Configure the basics of your Annotation Layer.')}\n            >\n              <TextControl\n                name=\"annotation-layer-name\"\n                label={t('Name')}\n                placeholder=\"\"\n                value={name}\n                onChange={v => this.setState({ name: v })}\n                validationErrors={!name ? [t('Mandatory')] : []}\n              />\n              <CheckboxControl\n                name=\"annotation-layer-hide\"\n                label={t('Hide Layer')}\n                value={!show}\n                onChange={v => this.setState({ show: !v })}\n              />\n              <SelectControl\n                hovered\n                description={t('Choose the Annotation Layer Type')}\n                label={t('Annotation Layer Type')}\n                name=\"annotation-layer-type\"\n                options={supportedAnnotationTypes}\n                value={annotationType}\n                onChange={this.handleAnnotationType}\n              />\n              {!!supportedSourceTypes.length && (\n                <SelectControl\n                  hovered\n                  description=\"Choose the source of your annotations\"\n                  label=\"Annotation Source\"\n                  name=\"annotation-source-type\"\n                  options={supportedSourceTypes}\n                  value={sourceType}\n                  onChange={this.handleAnnotationSourceType}\n                />\n              )}\n              {this.renderValueConfiguration()}\n            </PopoverSection>\n          </div>\n          {this.renderSliceConfiguration()}\n          {this.renderDisplayConfiguration()}\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Button bsSize=\"sm\" onClick={this.deleteAnnotation}>\n            {!isNew ? t('Remove') : t('Cancel')}\n          </Button>\n          <div>\n            <Button\n              bsSize=\"sm\"\n              disabled={!isValid}\n              onClick={this.applyAnnotation}\n            >\n              {t('Apply')}\n            </Button>\n\n            <Button\n              bsSize=\"sm\"\n              disabled={!isValid}\n              onClick={this.submitAnnotation}\n            >\n              {t('OK')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}
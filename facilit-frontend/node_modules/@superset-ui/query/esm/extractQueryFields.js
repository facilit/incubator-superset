"use strict";

exports.__esModule = true;
exports.default = extractQueryFields;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function extractQueryFields(residualFormData, queryFields) {
  const queryFieldAliases = _extends({
    /** These are predefined for backward compatibility */
    metric: 'metrics',
    percent_metrics: 'metrics',
    metric_2: 'metrics',
    secondary_metric: 'metrics',
    x: 'metrics',
    y: 'metrics',
    size: 'metrics'
  }, queryFields);

  const finalQueryFields = {
    columns: [],
    groupby: [],
    metrics: []
  };
  Object.entries(residualFormData).forEach(entry => {
    const [key, residualValue] = entry;
    const normalizedKey = queryFieldAliases[key] || key;
    finalQueryFields[normalizedKey] = (finalQueryFields[normalizedKey] || []).concat(residualValue);
  });
  return finalQueryFields;
}
/// <reference types="react" />
declare const _default: {
    requiresTime: boolean;
    controlPanelSections: ({
        label: string;
        tabOverride: string;
        expanded: boolean;
        controlSetRows: {
            name: string;
            config: {
                type: string;
                label: string;
                default: never[];
                description: string;
                renderTrigger: boolean;
                tabOverride: string;
            };
        }[][];
    } | {
        label: string;
        expanded: boolean;
        controlSetRows: ((string | null)[] | {
            name: string;
            config: {
                type: string;
                label: string;
                default: boolean;
                description: string;
            };
        }[])[];
        tabOverride?: undefined;
        description?: undefined;
    } | {
        label: string;
        tabOverride: string;
        description: string;
        controlSetRows: (JSX.Element[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                default: string;
                choices: import("@superset-ui/chart-controls/lib/utils/selectOptions").Formatted[];
                description: string;
                isInt?: undefined;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                isInt: boolean;
                description: string;
                default?: undefined;
                choices?: undefined;
            };
        })[] | ({
            name: string;
            config: {
                type: string;
                multi: boolean;
                freeForm: boolean;
                label: string;
                choices: import("@superset-ui/chart-controls/lib/utils/selectOptions").Formatted[];
                description: string;
                default?: undefined;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                default: string;
                choices: string[][];
                description: string;
                multi?: undefined;
                freeForm?: undefined;
            };
        })[] | {
            name: string;
            config: {
                type: string;
                freeForm: boolean;
                label: string;
                default: null;
                choices: import("@superset-ui/chart-controls/lib/utils/selectOptions").Formatted[];
                description: string;
            };
        }[])[];
        expanded?: undefined;
    } | {
        label: string;
        expanded: boolean;
        controlSetRows: (string[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                clearable: boolean;
                default: string;
                choices: string[][];
                description: string;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        })[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: null;
            };
        })[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                choices: import("@superset-ui/chart-controls/lib/utils/selectOptions").Formatted[];
                default: string;
                description: string;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        })[])[];
    } | {
        label: string;
        expanded: boolean;
        controlSetRows: ((string | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: null[];
                description: string;
            };
        })[] | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: string;
            };
        }[] | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        }[])[];
    })[];
    sectionOverrides: {
        druidTimeSeries: {
            controlSetRows: string[][];
        };
        sqlaTimeSeries: {
            controlSetRows: string[][];
        };
    };
};
export default _default;
//# sourceMappingURL=controlPanel.d.ts.map
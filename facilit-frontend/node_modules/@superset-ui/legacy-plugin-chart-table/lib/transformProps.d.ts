/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { ChartProps, DataRecord, DataRecordFilters } from '@superset-ui/chart';
import { QueryFormDataMetric } from '@superset-ui/query';
interface DataColumnMeta {
    key: string;
    label: string;
    format?: string;
}
interface TableChartData {
    records: DataRecord[];
    columns: string[];
}
interface TableChartFormData {
    alignPn?: boolean;
    colorPn?: boolean;
    includeSearch?: boolean;
    orderDesc?: boolean;
    pageLength?: string | number;
    metrics?: QueryFormDataMetric[] | null;
    percentMetrics?: QueryFormDataMetric[] | null;
    showCellBars?: boolean;
    tableTimestampFormat?: string;
    tableFilter?: boolean;
}
export interface DataTableProps {
    alignPositiveNegative: boolean;
    colorPositiveNegative: boolean;
    columns: DataColumnMeta[];
    data: DataRecord[];
    height: number;
    includeSearch: boolean;
    metrics: string[];
    orderDesc: boolean;
    pageLength: number;
    percentMetrics: string[];
    showCellBars: boolean;
    tableTimestampFormat?: string;
    filters: DataRecordFilters;
    emitFilter: boolean;
    onChangeFilter: ChartProps['hooks']['onAddFilter'];
}
export declare type TableChartProps = ChartProps & {
    formData: TableChartFormData;
    queryData: ChartProps['queryData'] & {
        data?: TableChartData;
    };
};
export default function transformProps(chartProps: TableChartProps): DataTableProps;
export {};
//# sourceMappingURL=transformProps.d.ts.map
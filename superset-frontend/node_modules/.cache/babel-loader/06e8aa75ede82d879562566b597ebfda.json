{"ast":null,"code":"import \"core-js/modules/es.string.split\";import \"core-js/modules/web.dom-collections.iterator\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\nnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * under the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CreatableSelect } from 'src/components/Select';\nimport { Button } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport DateFilterControl from '../../explore/components/controls/DateFilterControl';\nimport ControlRow from '../../explore/components/ControlRow';\nimport Control from '../../explore/components/Control';\nimport controls from '../../explore/controls';\nimport OnPasteSelect from '../../components/Select/OnPasteSelect';\nimport { getDashboardFilterKey } from '../../dashboard/util/getDashboardFilterKey';\nimport { getFilterColorMap } from '../../dashboard/util/dashboardFiltersColorMap';\nimport {\nFILTER_CONFIG_ATTRIBUTES,\nTIME_FILTER_LABELS } from\n'../../explore/constants';\nimport FilterBadgeIcon from '../../components/FilterBadgeIcon';\n\nimport './FilterBox.less';\n\n// maps control names to their key in extra_filters\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";export const TIME_FILTER_MAP = {\n  time_range: '__time_range',\n  granularity_sqla: '__time_col',\n  time_grain_sqla: '__time_grain',\n  druid_time_origin: '__time_origin',\n  granularity: '__granularity' };\n\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n  PropTypes.shape({\n    field: PropTypes.string,\n    label: PropTypes.string })),\n\n\n  filtersChoices: PropTypes.objectOf(\n  PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    filter: PropTypes.string,\n    metric: PropTypes.number }))),\n\n\n\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool };\n\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false };\n\n\nclass FilterBox extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false };\n\n    this.changeFilter = _bindInstanceProperty(_context = this.changeFilter).call(_context, this);\n    this.onFilterMenuOpen = _bindInstanceProperty(_context2 = this.onFilterMenuOpen).call(_context2, this);\n    this.onOpenDateFilterControl = _bindInstanceProperty(_context3 = this.onOpenDateFilterControl).call(_context3, this);\n    this.onFilterMenuClose = _bindInstanceProperty(_context4 = this.onFilterMenuClose).call(_context4, this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onFilterMenuClose() {\n    return this.props.onFilterMenuClose(this.props.chartId);\n  }\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = _Object$assign({},\n    controls[controlName], { // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: \"control-\" + controlName,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter } });\n\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? _Object$assign({}, control, {}, mapFunc(this.props)) : control;\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (_Array$isArray(options)) {\n        vals = _mapInstanceProperty(options).call(options, opt => opt.value);\n      } else if (options.value) {\n        vals = options.value;\n      } else {\n        vals = options;\n      }\n    }\n    const selectedValues = _Object$assign({},\n    this.state.selectedValues, {\n      [fltr]: vals });\n\n\n    this.setState({ selectedValues, hasChanged: true }, () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n  }\n\n  renderDateFilter() {\n    const { showDateFilter, chartId } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        ___EmotionJSX(\"div\", { className: \"row space-1\", __source: { fileName: _jsxFileName, lineNumber: 170 }, __self: this },\n        ___EmotionJSX(\"div\", { className: \"col-lg-12 col-xs-12 filter-container\", __source: { fileName: _jsxFileName, lineNumber: 171 }, __self: this },\n        this.renderFilterBadge(chartId, TIME_RANGE, label),\n        ___EmotionJSX(DateFilterControl, {\n          name: TIME_RANGE,\n          label: label,\n          description: t('Select start and end date'),\n          onChange: newValue => {\n            this.changeFilter(TIME_RANGE, newValue);\n          },\n          onOpenDateFilterControl: this.onOpenDateFilterControl,\n          onCloseDateFilterControl: this.onFilterMenuClose,\n          value: this.state.selectedValues[TIME_RANGE] || 'No filter', __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }))));\n\n\n\n\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin } =\n    this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"sqla-filters\",\n        className: \"control-row\",\n        controls: _mapInstanceProperty(sqlaFilters).call(sqlaFilters, (control) =>\n        ___EmotionJSX(Control, _extends({}, this.getControlData(control), { __source: { fileName: _jsxFileName, lineNumber: 211 }, __self: this }))), __source: { fileName: _jsxFileName, lineNumber: 207 }, __self: this }));\n\n\n\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n      ___EmotionJSX(ControlRow, {\n        key: \"druid-filters\",\n        className: \"control-row\",\n        controls: _mapInstanceProperty(druidFilters).call(druidFilters, (control) =>\n        ___EmotionJSX(Control, _extends({}, this.getControlData(control), { __source: { fileName: _jsxFileName, lineNumber: 222 }, __self: this }))), __source: { fileName: _jsxFileName, lineNumber: 218 }, __self: this }));\n\n\n\n    }\n    return datasourceFilters;\n  }\n  renderSelect(filterConfig) {var _context5, _context6, _context8;\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    _forEachInstanceProperty(_context5 = _filterInstanceProperty(_context6 = _Object$keys(selectedValues)).call(_context6,\n\n    key => selectedValues.hasOwnProperty(key) && key in filtersChoices)).call(_context5,\n\n    key => {var _context7;\n      const choices = filtersChoices[key] || [];\n      const choiceIds = new _Set(_mapInstanceProperty(choices).call(choices, f => f.id));\n      const selectedValuesForKey = _Array$isArray(selectedValues[key]) ?\n      selectedValues[key] :\n      [selectedValues[key]];\n      _forEachInstanceProperty(_context7 = _filterInstanceProperty(selectedValuesForKey).call(selectedValuesForKey,\n      value => !choiceIds.has(value))).call(_context7,\n      value => {\n        choices.unshift({\n          filter: key,\n          id: value,\n          text: value,\n          metric: 0 });\n\n      });\n    });\n    const { key, label } = filterConfig;\n    const data = this.props.filtersChoices[key];\n    const max = Math.max(..._mapInstanceProperty(data).call(data, d => d.metric));\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (\n    value === undefined &&\n    filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE])\n    {\n      if (filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE]) {\n        // Support for semicolon-delimited multiple values\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE].split(';');\n      } else {\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE];\n      }\n    }\n\n    return (\n      ___EmotionJSX(OnPasteSelect, {\n        key: key,\n        placeholder: t('Select [%s]', label),\n        isMulti: filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE],\n        isClearable: filterConfig.clearable,\n        value: value,\n        options: _mapInstanceProperty(_context8 = _filterInstanceProperty(data).call(data,\n        opt => opt.id !== null)).call(_context8,\n        opt => {\n          const perc = Math.round(opt.metric / max * 100);\n          const color = 'lightgrey';\n          const backgroundImage = \"linear-gradient(to right, \" + color + \", \" + color + \" \" + perc + \"%, rgba(0,0,0,0) \" + perc + \"%\";\n          const style = { backgroundImage };\n          return { value: opt.id, label: opt.id, style };\n        }),\n        onChange: newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        },\n        onFocus: () => this.onFilterMenuOpen(key),\n        onMenuOpen: () => this.onFilterMenuOpen(key),\n        onBlur: this.onFilterMenuClose,\n        onMenuClose: this.onFilterMenuClose,\n        selectWrap: CreatableSelect,\n        noResultsText: t('No results found'), __source: { fileName: _jsxFileName, lineNumber: 275 }, __self: this }));\n\n\n  }\n\n  renderFilters() {\n    const { filtersFields, chartId } = this.props;\n    return _mapInstanceProperty(filtersFields).call(filtersFields, filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        ___EmotionJSX(\"div\", { key: key, className: \"m-b-5 filter-container\", __source: { fileName: _jsxFileName, lineNumber: 311 }, __self: this },\n        this.renderFilterBadge(chartId, key, label),\n        ___EmotionJSX(\"div\", { __source: { fileName: _jsxFileName, lineNumber: 313 }, __self: this },\n        ___EmotionJSX(\"label\", { htmlFor: \"LABEL-\" + key, __source: { fileName: _jsxFileName, lineNumber: 314 }, __self: this }, label),\n        this.renderSelect(filterConfig))));\n\n\n\n    });\n  }\n\n  renderFilterBadge(chartId, column) {\n    const colorKey = getDashboardFilterKey({ chartId, column });\n    const filterColorMap = getFilterColorMap();\n    const colorCode = filterColorMap[colorKey];\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"filter-badge-container\", __source: { fileName: _jsxFileName, lineNumber: 328 }, __self: this },\n      ___EmotionJSX(FilterBadgeIcon, { colorCode: colorCode, __source: { fileName: _jsxFileName, lineNumber: 329 }, __self: this })));\n\n\n  }\n\n  render() {var _context9;\n    const { instantFiltering } = this.props;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"scrollbar-container\", __source: { fileName: _jsxFileName, lineNumber: 338 }, __self: this },\n      ___EmotionJSX(\"div\", { className: \"scrollbar-content\", __source: { fileName: _jsxFileName, lineNumber: 339 }, __self: this },\n      this.renderDateFilter(),\n      this.renderDatasourceFilters(),\n      this.renderFilters(),\n      !instantFiltering &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        bsStyle: \"primary\",\n        onClick: _bindInstanceProperty(_context9 = this.clickApply).call(_context9, this),\n        disabled: !this.state.hasChanged, __source: { fileName: _jsxFileName, lineNumber: 344 }, __self: this },\n\n      t('Apply')))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;const _default =\n\nFilterBox;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TIME_FILTER_MAP, \"TIME_FILTER_MAP\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(TIME_RANGE, \"TIME_RANGE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(FilterBox, \"FilterBox\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/visualizations/FilterBox/FilterBox.jsx"],"names":["React","PropTypes","CreatableSelect","Button","t","DateFilterControl","ControlRow","Control","controls","OnPasteSelect","getDashboardFilterKey","getFilterColorMap","FILTER_CONFIG_ATTRIBUTES","TIME_FILTER_LABELS","FilterBadgeIcon","TIME_FILTER_MAP","time_range","granularity_sqla","time_grain_sqla","druid_time_origin","granularity","TIME_RANGE","propTypes","chartId","number","isRequired","origSelectedValues","object","datasource","instantFiltering","bool","filtersFields","arrayOf","shape","field","string","label","filtersChoices","objectOf","id","text","filter","metric","onChange","func","onFilterMenuOpen","onFilterMenuClose","showDateFilter","showSqlaTimeGrain","showSqlaTimeColumn","showDruidTimeGrain","showDruidTimeOrigin","defaultProps","FilterBox","Component","constructor","props","state","selectedValues","hasChanged","changeFilter","onOpenDateFilterControl","column","getControlData","controlName","control","name","key","value","actions","setControlValue","mapFunc","mapStateToProps","clickApply","setState","options","fltr","vals","opt","renderDateFilter","renderFilterBadge","newValue","renderDatasourceFilters","datasourceFilters","sqlaFilters","druidFilters","push","length","renderSelect","filterConfig","hasOwnProperty","choices","choiceIds","f","selectedValuesForKey","has","unshift","data","max","Math","d","undefined","DEFAULT_VALUE","MULTIPLE","split","clearable","perc","round","color","backgroundImage","style","renderFilters","colorKey","filterColorMap","colorCode","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CreatableSelect } from 'src/components/Select';\nimport { Button } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport DateFilterControl from '../../explore/components/controls/DateFilterControl';\nimport ControlRow from '../../explore/components/ControlRow';\nimport Control from '../../explore/components/Control';\nimport controls from '../../explore/controls';\nimport OnPasteSelect from '../../components/Select/OnPasteSelect';\nimport { getDashboardFilterKey } from '../../dashboard/util/getDashboardFilterKey';\nimport { getFilterColorMap } from '../../dashboard/util/dashboardFiltersColorMap';\nimport {\n  FILTER_CONFIG_ATTRIBUTES,\n  TIME_FILTER_LABELS,\n} from '../../explore/constants';\nimport FilterBadgeIcon from '../../components/FilterBadgeIcon';\n\nimport './FilterBox.less';\n\n// maps control names to their key in extra_filters\nexport const TIME_FILTER_MAP = {\n  time_range: '__time_range',\n  granularity_sqla: '__time_col',\n  time_grain_sqla: '__time_grain',\n  druid_time_origin: '__time_origin',\n  granularity: '__granularity',\n};\n\n// a shortcut to a map key, used by many components\nexport const TIME_RANGE = TIME_FILTER_MAP.time_range;\n\nconst propTypes = {\n  chartId: PropTypes.number.isRequired,\n  origSelectedValues: PropTypes.object,\n  datasource: PropTypes.object.isRequired,\n  instantFiltering: PropTypes.bool,\n  filtersFields: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ),\n  filtersChoices: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        text: PropTypes.string,\n        filter: PropTypes.string,\n        metric: PropTypes.number,\n      }),\n    ),\n  ),\n  onChange: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  showDateFilter: PropTypes.bool,\n  showSqlaTimeGrain: PropTypes.bool,\n  showSqlaTimeColumn: PropTypes.bool,\n  showDruidTimeGrain: PropTypes.bool,\n  showDruidTimeOrigin: PropTypes.bool,\n};\nconst defaultProps = {\n  origSelectedValues: {},\n  onChange: () => {},\n  onFilterMenuOpen: () => {},\n  onFilterMenuClose: () => {},\n  showDateFilter: false,\n  showSqlaTimeGrain: false,\n  showSqlaTimeColumn: false,\n  showDruidTimeGrain: false,\n  showDruidTimeOrigin: false,\n  instantFiltering: false,\n};\n\nclass FilterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedValues: props.origSelectedValues,\n      // this flag is used by non-instant filter, to make the apply button enabled/disabled\n      hasChanged: false,\n    };\n    this.changeFilter = this.changeFilter.bind(this);\n    this.onFilterMenuOpen = this.onFilterMenuOpen.bind(this);\n    this.onOpenDateFilterControl = this.onOpenDateFilterControl.bind(this);\n    this.onFilterMenuClose = this.onFilterMenuClose.bind(this);\n  }\n\n  onFilterMenuOpen(column) {\n    return this.props.onFilterMenuOpen(this.props.chartId, column);\n  }\n\n  onOpenDateFilterControl() {\n    return this.onFilterMenuOpen(TIME_RANGE);\n  }\n\n  onFilterMenuClose() {\n    return this.props.onFilterMenuClose(this.props.chartId);\n  }\n\n  getControlData(controlName) {\n    const { selectedValues } = this.state;\n    const control = {\n      ...controls[controlName], // TODO: make these controls ('druid_time_origin', 'granularity', 'granularity_sqla', 'time_grain_sqla') accessible from getControlsForVizType.\n      name: controlName,\n      key: `control-${controlName}`,\n      value: selectedValues[TIME_FILTER_MAP[controlName]],\n      actions: { setControlValue: this.changeFilter },\n    };\n    const mapFunc = control.mapStateToProps;\n    return mapFunc ? { ...control, ...mapFunc(this.props) } : control;\n  }\n\n  clickApply() {\n    const { selectedValues } = this.state;\n    this.setState({ hasChanged: false }, () => {\n      this.props.onChange(selectedValues, false);\n    });\n  }\n\n  changeFilter(filter, options) {\n    const fltr = TIME_FILTER_MAP[filter] || filter;\n    let vals = null;\n    if (options !== null) {\n      if (Array.isArray(options)) {\n        vals = options.map(opt => opt.value);\n      } else if (options.value) {\n        vals = options.value;\n      } else {\n        vals = options;\n      }\n    }\n    const selectedValues = {\n      ...this.state.selectedValues,\n      [fltr]: vals,\n    };\n\n    this.setState({ selectedValues, hasChanged: true }, () => {\n      if (this.props.instantFiltering) {\n        this.props.onChange({ [fltr]: vals }, false);\n      }\n    });\n  }\n\n  renderDateFilter() {\n    const { showDateFilter, chartId } = this.props;\n    const label = TIME_FILTER_LABELS.time_range;\n    if (showDateFilter) {\n      return (\n        <div className=\"row space-1\">\n          <div className=\"col-lg-12 col-xs-12 filter-container\">\n            {this.renderFilterBadge(chartId, TIME_RANGE, label)}\n            <DateFilterControl\n              name={TIME_RANGE}\n              label={label}\n              description={t('Select start and end date')}\n              onChange={newValue => {\n                this.changeFilter(TIME_RANGE, newValue);\n              }}\n              onOpenDateFilterControl={this.onOpenDateFilterControl}\n              onCloseDateFilterControl={this.onFilterMenuClose}\n              value={this.state.selectedValues[TIME_RANGE] || 'No filter'}\n            />\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDatasourceFilters() {\n    const {\n      showSqlaTimeGrain,\n      showSqlaTimeColumn,\n      showDruidTimeGrain,\n      showDruidTimeOrigin,\n    } = this.props;\n    const datasourceFilters = [];\n    const sqlaFilters = [];\n    const druidFilters = [];\n    if (showSqlaTimeGrain) sqlaFilters.push('time_grain_sqla');\n    if (showSqlaTimeColumn) sqlaFilters.push('granularity_sqla');\n    if (showDruidTimeGrain) druidFilters.push('granularity');\n    if (showDruidTimeOrigin) druidFilters.push('druid_time_origin');\n    if (sqlaFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"sqla-filters\"\n          className=\"control-row\"\n          controls={sqlaFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    if (druidFilters.length) {\n      datasourceFilters.push(\n        <ControlRow\n          key=\"druid-filters\"\n          className=\"control-row\"\n          controls={druidFilters.map(control => (\n            <Control {...this.getControlData(control)} />\n          ))}\n        />,\n      );\n    }\n    return datasourceFilters;\n  }\n  renderSelect(filterConfig) {\n    const { filtersChoices } = this.props;\n    const { selectedValues } = this.state;\n\n    // Add created options to filtersChoices, even though it doesn't exist,\n    // or these options will exist in query sql but invisible to end user.\n    Object.keys(selectedValues)\n      .filter(\n        key => selectedValues.hasOwnProperty(key) && key in filtersChoices,\n      )\n      .forEach(key => {\n        const choices = filtersChoices[key] || [];\n        const choiceIds = new Set(choices.map(f => f.id));\n        const selectedValuesForKey = Array.isArray(selectedValues[key])\n          ? selectedValues[key]\n          : [selectedValues[key]];\n        selectedValuesForKey\n          .filter(value => !choiceIds.has(value))\n          .forEach(value => {\n            choices.unshift({\n              filter: key,\n              id: value,\n              text: value,\n              metric: 0,\n            });\n          });\n      });\n    const { key, label } = filterConfig;\n    const data = this.props.filtersChoices[key];\n    const max = Math.max(...data.map(d => d.metric));\n    let value = selectedValues[key] || null;\n\n    // Assign default value if required\n    if (\n      value === undefined &&\n      filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE]\n    ) {\n      if (filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE]) {\n        // Support for semicolon-delimited multiple values\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE].split(';');\n      } else {\n        value = filterConfig[FILTER_CONFIG_ATTRIBUTES.DEFAULT_VALUE];\n      }\n    }\n\n    return (\n      <OnPasteSelect\n        key={key}\n        placeholder={t('Select [%s]', label)}\n        isMulti={filterConfig[FILTER_CONFIG_ATTRIBUTES.MULTIPLE]}\n        isClearable={filterConfig.clearable}\n        value={value}\n        options={data\n          .filter(opt => opt.id !== null)\n          .map(opt => {\n            const perc = Math.round((opt.metric / max) * 100);\n            const color = 'lightgrey';\n            const backgroundImage = `linear-gradient(to right, ${color}, ${color} ${perc}%, rgba(0,0,0,0) ${perc}%`;\n            const style = { backgroundImage };\n            return { value: opt.id, label: opt.id, style };\n          })}\n        onChange={newValue => {\n          // avoid excessive re-renders\n          if (newValue !== value) {\n            this.changeFilter(key, newValue);\n          }\n        }}\n        onFocus={() => this.onFilterMenuOpen(key)}\n        onMenuOpen={() => this.onFilterMenuOpen(key)}\n        onBlur={this.onFilterMenuClose}\n        onMenuClose={this.onFilterMenuClose}\n        selectWrap={CreatableSelect}\n        noResultsText={t('No results found')}\n      />\n    );\n  }\n\n  renderFilters() {\n    const { filtersFields, chartId } = this.props;\n    return filtersFields.map(filterConfig => {\n      const { label, key } = filterConfig;\n      return (\n        <div key={key} className=\"m-b-5 filter-container\">\n          {this.renderFilterBadge(chartId, key, label)}\n          <div>\n            <label htmlFor={`LABEL-${key}`}>{label}</label>\n            {this.renderSelect(filterConfig)}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderFilterBadge(chartId, column) {\n    const colorKey = getDashboardFilterKey({ chartId, column });\n    const filterColorMap = getFilterColorMap();\n    const colorCode = filterColorMap[colorKey];\n\n    return (\n      <div className=\"filter-badge-container\">\n        <FilterBadgeIcon colorCode={colorCode} />\n      </div>\n    );\n  }\n\n  render() {\n    const { instantFiltering } = this.props;\n\n    return (\n      <div className=\"scrollbar-container\">\n        <div className=\"scrollbar-content\">\n          {this.renderDateFilter()}\n          {this.renderDatasourceFilters()}\n          {this.renderFilters()}\n          {!instantFiltering && (\n            <Button\n              bsSize=\"small\"\n              bsStyle=\"primary\"\n              onClick={this.clickApply.bind(this)}\n              disabled={!this.state.hasChanged}\n            >\n              {t('Apply')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nFilterBox.propTypes = propTypes;\nFilterBox.defaultProps = defaultProps;\n\nexport default FilterBox;\n"]},"metadata":{},"sourceType":"module"}
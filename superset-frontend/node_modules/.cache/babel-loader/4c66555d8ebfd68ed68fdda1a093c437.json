{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/es.promise.finally\";import \"core-js/modules/web.dom-collections.iterator\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";var _jsxFileName = \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   * distributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   * with the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   */\nimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport AvatarIcon from 'src/components/AvatarIcon';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport TooltipWrapper from 'src/components/TooltipWrapper';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst PAGE_SIZE = 25;\nclass DatasetList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      datasetCount: 0,\n      datasets: [],\n      filterOperators: {},\n      filters: [],\n      lastFetchDataConfig: null,\n      loading: false,\n      owners: [],\n      databases: [],\n      permissions: [] };\n\n    this.initialSort = [{ id: 'changed_on', desc: true }];\n    this.columns = [\n    {\n      Cell: ({ row: { original: { kind } } }) => {\n        if (kind === 'physical')\n        return ___EmotionJSX(TooltipWrapper, { label: \"physical-dataset\", tooltip: t('Physical Dataset'), __source: { fileName: _jsxFileName, lineNumber: 54 }, __self: this },\n        ___EmotionJSX(Icon, { name: \"dataset-physical\", __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this }));\n\n        return ___EmotionJSX(TooltipWrapper, { label: \"virtual-dataset\", tooltip: t('Virtual Dataset'), __source: { fileName: _jsxFileName, lineNumber: 57 }, __self: this },\n        ___EmotionJSX(Icon, { name: \"dataset-virtual\", __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: this }));\n\n      },\n      accessor: 'kind_icon' },\n\n    {\n      Cell: ({ row: { original: { table_name: datasetTitle } } }) => datasetTitle,\n      Header: t('Name'),\n      accessor: 'table_name' },\n\n    {\n      Cell: ({ row: { original: { kind } } }) => {var _kind$;return ((_kind$ = kind[0]) === null || _kind$ === void 0 ? void 0 : _kind$.toUpperCase()) + _sliceInstanceProperty(kind).call(kind, 1);},\n      Header: t('Type'),\n      accessor: 'kind' },\n\n    {\n      Header: t('Source'),\n      accessor: 'database_name' },\n\n    {\n      Header: t('Schema'),\n      accessor: 'schema' },\n\n    {\n      Cell: ({ row: { original: { changed_on: changedOn } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\", __source: { fileName: _jsxFileName, lineNumber: 82 }, __self: this }, moment(changedOn).fromNow()),\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_by_name: changedByName, changed_by_url: changedByUrl } } }) => ___EmotionJSX(\"a\", { href: changedByUrl, __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this }, changedByName),\n      Header: t('Modified By'),\n      accessor: 'changed_by_fk' },\n\n    {\n      accessor: 'database',\n      hidden: true },\n\n    {\n      Cell: ({ row: { original: { owners, table_name: tableName } } }) => {var _context;\n        if (!owners) {\n          return null;\n        }\n        return _mapInstanceProperty(_context = _sliceInstanceProperty(owners).call(owners,\n        0, 5)).call(_context,\n        owner => ___EmotionJSX(AvatarIcon, { tableName: tableName, firstName: owner.first_name, lastName: owner.last_name, userName: owner.username, iconSize: \"20\", __source: { fileName: _jsxFileName, lineNumber: 103 }, __self: this }));\n      },\n      Header: t('Owners'),\n      id: 'owners' },\n\n    {\n      accessor: 'is_sqllab_view',\n      hidden: true },\n\n    {\n      Cell: ({ row: { state, original } }) => {\n        const handleDelete = () => this.handleDatasetDelete(original);\n        const handleEdit = () => this.handleDatasetEdit(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n        return ___EmotionJSX(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible'), __source: { fileName: _jsxFileName, lineNumber: 119 }, __self: this },\n        ___EmotionJSX(\"a\", { role: \"button\", tabIndex: 0, className: \"action-button\", href: original.explore_url, __source: { fileName: _jsxFileName, lineNumber: 120 }, __self: this },\n        ___EmotionJSX(Icon, { name: \"compass\", __source: { fileName: _jsxFileName, lineNumber: 121 }, __self: this })),\n\n        this.canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please Confirm'), description: ___EmotionJSX(React.Fragment, null,\n          t('Are you sure you want to delete '), ' ',\n          ___EmotionJSX(\"b\", { __source: { fileName: _jsxFileName, lineNumber: 125 }, __self: this }, original.table_name), \"?\"),\n          onConfirm: handleDelete, __source: { fileName: _jsxFileName, lineNumber: 123 }, __self: this },\n        confirmDelete => ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete, __source: { fileName: _jsxFileName, lineNumber: 127 }, __self: this },\n        ___EmotionJSX(Icon, { name: \"trash\", __source: { fileName: _jsxFileName, lineNumber: 128 }, __self: this }))),\n\n\n        this.canEdit && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleEdit, __source: { fileName: _jsxFileName, lineNumber: 131 }, __self: this },\n        ___EmotionJSX(Icon, { name: \"pencil\", __source: { fileName: _jsxFileName, lineNumber: 132 }, __self: this })));\n\n\n      },\n      Header: t('Actions'),\n      id: 'actions' }];\n\n\n    this.menu = {\n      label: 'Data',\n      name: 'Data',\n      createButton: {\n        name: t('Dataset'),\n        url: '/tablemodelview/add' },\n\n      childs: [\n      {\n        name: 'Datasets',\n        label: t('Datasets'),\n        url: '/tablemodelview/list/?_flt_1_is_sqllab_view=y' },\n\n      { name: 'Databases', label: t('Databases'), url: '/databaseview/list/' },\n      {\n        name: 'Saved Queries',\n        label: t('Saved Queries'),\n        url: '/sqllab/my_queries/' }] };\n\n\n\n    this.hasPerm = perm => {var _context2;\n      if (!this.state.permissions.length) {\n        return false;\n      }\n      return Boolean(_findInstanceProperty(_context2 = this.state.permissions).call(_context2, p => p === perm));\n    };\n    this.handleDatasetEdit = ({ id }) => {\n      window.location.assign(\"/tablemodelview/edit/\" + id);\n    };\n    this.handleDatasetDelete = ({ id, table_name: tableName }) => SupersetClient.delete({\n      endpoint: \"/api/v1/dataset/\" + id }).\n    then(() => {\n      const { lastFetchDataConfig } = this.state;\n      if (lastFetchDataConfig) {\n        this.fetchData(lastFetchDataConfig);\n      }\n      this.props.addSuccessToast(t('Deleted: %s', tableName));\n    }, err => {\n      console.error(err);\n      this.props.addDangerToast(t('There was an issue deleting %s', tableName));\n    });\n    this.handleBulkDatasetDelete = datasets => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/dataset/?q=\" + rison.encode(_mapInstanceProperty(datasets).call(datasets, ({ id }) => id)) }).\n      then(({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      }, err => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected datasets'));\n      });\n    };\n    this.fetchData = ({ pageIndex, pageSize, sortBy, filters }) => {\n      // set loading state, cache the last config for fetching data in this component.\n      this.setState({\n        lastFetchDataConfig: {\n          filters,\n          pageIndex,\n          pageSize,\n          sortBy },\n\n        loading: true });\n\n      const filterExps = _mapInstanceProperty(filters).call(filters, ({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value }));\n\n      const queryParams = rison.encode(_Object$assign({\n        order_column: sortBy[0].id,\n        order_direction: sortBy[0].desc ? 'desc' : 'asc',\n        page: pageIndex,\n        page_size: pageSize },\n      filterExps.length ? { filters: filterExps } : {}));\n\n      return SupersetClient.get({\n        endpoint: \"/api/v1/dataset/?q=\" + queryParams }).\n\n      then(({ json = {} }) => {\n        this.setState({ datasets: json.result, datasetCount: json.count });\n      }).\n      catch(() => {\n        this.props.addDangerToast(t('An error occurred while fetching datasets'));\n      }).\n      finally(() => {\n        this.setState({ loading: false });\n      });\n    };\n    this.updateFilters = () => {var _context3, _context4, _context5, _context6, _context7;\n      const { filterOperators, owners, databases } = this.state;\n      const convertFilter = ({ name: label, operator }) => ({ label, value: operator });\n      this.setState({\n        filters: [\n        {\n          Header: 'Database',\n          id: 'database',\n          input: 'select',\n          operators: _mapInstanceProperty(_context3 = filterOperators.database).call(_context3, convertFilter),\n          selects: _mapInstanceProperty(databases).call(databases, ({ text: label, value }) => ({\n            label,\n            value })) },\n\n\n        {\n          Header: 'Schema',\n          id: 'schema',\n          operators: _mapInstanceProperty(_context4 = filterOperators.schema).call(_context4, convertFilter) },\n\n        {\n          Header: 'Table Name',\n          id: 'table_name',\n          operators: _mapInstanceProperty(_context5 = filterOperators.table_name).call(_context5, convertFilter) },\n\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: _mapInstanceProperty(_context6 = filterOperators.owners).call(_context6, convertFilter),\n          selects: _mapInstanceProperty(owners).call(owners, ({ text: label, value }) => ({ label, value })) },\n\n        {\n          Header: 'SQL Lab View',\n          id: 'is_sqllab_view',\n          input: 'checkbox',\n          operators: _mapInstanceProperty(_context7 = filterOperators.is_sqllab_view).call(_context7, convertFilter) }] });\n\n\n\n    };\n  }\n  componentDidMount() {\n    _Promise.all([\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/_info\" }),\n\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/related/owners\" }),\n\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/related/database\" })]).\n\n    then(([{ json: infoJson = {} }, { json: ownersJson = {} }, { json: databasesJson = {} }]) => {\n      this.setState({\n        filterOperators: infoJson.filters,\n        owners: ownersJson.result,\n        databases: databasesJson.result,\n        permissions: infoJson.permissions },\n      this.updateFilters);\n    }, ([e1, e2]) => {\n      this.props.addDangerToast(t('An error occurred while fetching datasets'));\n      if (e1) {\n        console.error(e1);\n      }\n      if (e2) {\n        console.error(e2);\n      }\n    });\n  }\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n  get canCreate() {\n    return this.hasPerm('can_add');\n  }\n  render() {\n    const { datasets, datasetCount, loading, filters } = this.state;\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(SubMenu, _extends({}, this.menu, { canCreate: this.canCreate, __source: { fileName: _jsxFileName, lineNumber: 314 }, __self: this })),\n    ___EmotionJSX(\"div\", { className: \"container welcome\", __source: { fileName: _jsxFileName, lineNumber: 315 }, __self: this },\n    ___EmotionJSX(Panel, { __source: { fileName: _jsxFileName, lineNumber: 316 }, __self: this },\n    ___EmotionJSX(Panel.Body, { __source: { fileName: _jsxFileName, lineNumber: 317 }, __self: this },\n    ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected datasets?'), onConfirm: this.handleBulkDatasetDelete, __source: { fileName: _jsxFileName, lineNumber: 318 }, __self: this },\n    confirmDelete => {\n      const bulkActions = [];\n      if (this.canDelete) {\n        bulkActions.push({\n          key: 'delete',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-trash\", __source: { fileName: _jsxFileName, lineNumber: 325 }, __self: this }), \" Delete\"),\n\n          onSelect: confirmDelete });\n\n      }\n      return ___EmotionJSX(ListView, { className: \"dataset-list-view\", title: 'Datasets', columns: this.columns, data: datasets, count: datasetCount, pageSize: PAGE_SIZE, fetchData: this.fetchData, loading: loading, initialSort: this.initialSort, filters: filters, bulkActions: bulkActions, __source: { fileName: _jsxFileName, lineNumber: 330 }, __self: this });\n    })))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}DatasetList.propTypes = {\n  addDangerToast: PropTypes.func.isRequired };const _default =\n\nwithToasts(DatasetList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");reactHotLoader.register(DatasetList, \"DatasetList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport AvatarIcon from 'src/components/AvatarIcon';\nimport {\n  FetchDataConfig,\n  FilterOperatorMap,\n  Filters,\n} from 'src/components/ListView/types';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport TooltipWrapper from 'src/components/TooltipWrapper';\nimport Icon from 'src/components/Icon';\n\nconst PAGE_SIZE = 25;\n\ntype Owner = {\n  id: string;\n  first_name: string;\n  last_name: string;\n  username: string;\n};\n\ninterface Props {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n}\n\ninterface State {\n  datasets: any[];\n  datasetCount: number;\n  loading: boolean;\n  filterOperators: FilterOperatorMap;\n  filters: Filters;\n  owners: Array<{ text: string; value: number }>;\n  databases: Array<{ text: string; value: number }>;\n  permissions: string[];\n  lastFetchDataConfig: FetchDataConfig | null;\n}\n\ninterface Dataset {\n  changed_by: string;\n  changed_by_name: string;\n  changed_by_url: string;\n  changed_on: string;\n  databse_name: string;\n  explore_url: string;\n  id: number;\n  owners: Array<Owner>;\n  schema: string;\n  table_name: string;\n}\n\nclass DatasetList extends React.PureComponent<Props, State> {\n  static propTypes = {\n    addDangerToast: PropTypes.func.isRequired,\n  };\n\n  state: State = {\n    datasetCount: 0,\n    datasets: [],\n    filterOperators: {},\n    filters: [],\n    lastFetchDataConfig: null,\n    loading: false,\n    owners: [],\n    databases: [],\n    permissions: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/_info`,\n      }),\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/related/owners`,\n      }),\n      SupersetClient.get({\n        endpoint: `/api/v1/dataset/related/database`,\n      }),\n    ]).then(\n      ([\n        { json: infoJson = {} },\n        { json: ownersJson = {} },\n        { json: databasesJson = {} },\n      ]) => {\n        this.setState(\n          {\n            filterOperators: infoJson.filters,\n            owners: ownersJson.result,\n            databases: databasesJson.result,\n            permissions: infoJson.permissions,\n          },\n          this.updateFilters,\n        );\n      },\n      ([e1, e2]) => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching datasets'),\n        );\n        if (e1) {\n          console.error(e1);\n        }\n        if (e2) {\n          console.error(e2);\n        }\n      },\n    );\n  }\n\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n\n  get canCreate() {\n    return this.hasPerm('can_add');\n  }\n\n  initialSort = [{ id: 'changed_on', desc: true }];\n\n  columns = [\n    {\n      Cell: ({\n        row: {\n          original: { kind },\n        },\n      }: any) => {\n        if (kind === 'physical')\n          return (\n            <TooltipWrapper\n              label=\"physical-dataset\"\n              tooltip={t('Physical Dataset')}\n            >\n              <Icon name=\"dataset-physical\" />\n            </TooltipWrapper>\n          );\n\n        return (\n          <TooltipWrapper\n            label=\"virtual-dataset\"\n            tooltip={t('Virtual Dataset')}\n          >\n            <Icon name=\"dataset-virtual\" />\n          </TooltipWrapper>\n        );\n      },\n      accessor: 'kind_icon',\n    },\n    {\n      Cell: ({\n        row: {\n          original: { table_name: datasetTitle },\n        },\n      }: any) => datasetTitle,\n      Header: t('Name'),\n      accessor: 'table_name',\n    },\n    {\n      Cell: ({\n        row: {\n          original: { kind },\n        },\n      }: any) => kind[0]?.toUpperCase() + kind.slice(1),\n      Header: t('Type'),\n      accessor: 'kind',\n    },\n    {\n      Header: t('Source'),\n      accessor: 'database_name',\n    },\n    {\n      Header: t('Schema'),\n      accessor: 'schema',\n    },\n    {\n      Cell: ({\n        row: {\n          original: { changed_on: changedOn },\n        },\n      }: any) => <span className=\"no-wrap\">{moment(changedOn).fromNow()}</span>,\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: {\n            changed_by_name: changedByName,\n            changed_by_url: changedByUrl,\n          },\n        },\n      }: any) => <a href={changedByUrl}>{changedByName}</a>,\n      Header: t('Modified By'),\n      accessor: 'changed_by_fk',\n    },\n    {\n      accessor: 'database',\n      hidden: true,\n    },\n    {\n      Cell: ({\n        row: {\n          original: { owners, table_name: tableName },\n        },\n      }: any) => {\n        if (!owners) {\n          return null;\n        }\n        return owners\n          .slice(0, 5)\n          .map((owner: Owner) => (\n            <AvatarIcon\n              tableName={tableName}\n              firstName={owner.first_name}\n              lastName={owner.last_name}\n              userName={owner.username}\n              iconSize=\"20\"\n            />\n          ));\n      },\n      Header: t('Owners'),\n      id: 'owners',\n    },\n    {\n      accessor: 'is_sqllab_view',\n      hidden: true,\n    },\n    {\n      Cell: ({ row: { state, original } }: any) => {\n        const handleDelete = () => this.handleDatasetDelete(original);\n        const handleEdit = () => this.handleDatasetEdit(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n        return (\n          <span\n            className={`actions ${state && state.hover ? '' : 'invisible'}`}\n          >\n            <a\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              href={original.explore_url}\n            >\n              <Icon name=\"compass\" />\n            </a>\n            {this.canDelete && (\n              <ConfirmStatusChange\n                title={t('Please Confirm')}\n                description={\n                  <>\n                    {t('Are you sure you want to delete ')}{' '}\n                    <b>{original.table_name}</b>?\n                  </>\n                }\n                onConfirm={handleDelete}\n              >\n                {confirmDelete => (\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={confirmDelete}\n                  >\n                    <Icon name=\"trash\" />\n                  </span>\n                )}\n              </ConfirmStatusChange>\n            )}\n            {this.canEdit && (\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                onClick={handleEdit}\n              >\n                <Icon name=\"pencil\" />\n              </span>\n            )}\n          </span>\n        );\n      },\n      Header: t('Actions'),\n      id: 'actions',\n    },\n  ];\n\n  menu = {\n    label: 'Data',\n    name: 'Data',\n    createButton: {\n      name: t('Dataset'),\n      url: '/tablemodelview/add',\n    },\n    childs: [\n      {\n        name: 'Datasets',\n        label: t('Datasets'),\n        url: '/tablemodelview/list/?_flt_1_is_sqllab_view=y',\n      },\n      { name: 'Databases', label: t('Databases'), url: '/databaseview/list/' },\n      {\n        name: 'Saved Queries',\n        label: t('Saved Queries'),\n        url: '/sqllab/my_queries/',\n      },\n    ],\n  };\n\n  hasPerm = (perm: string) => {\n    if (!this.state.permissions.length) {\n      return false;\n    }\n\n    return Boolean(this.state.permissions.find(p => p === perm));\n  };\n\n  handleDatasetEdit = ({ id }: { id: number }) => {\n    window.location.assign(`/tablemodelview/edit/${id}`);\n  };\n\n  handleDatasetDelete = ({ id, table_name: tableName }: Dataset) =>\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/${id}`,\n    }).then(\n      () => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(t('Deleted: %s', tableName));\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(\n          t('There was an issue deleting %s', tableName),\n        );\n      },\n    );\n\n  handleBulkDatasetDelete = (datasets: Dataset[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/dataset/?q=${rison.encode(\n        datasets.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      },\n      (err: any) => {\n        console.error(err);\n        this.props.addDangerToast(\n          t('There was an issue deleting the selected datasets'),\n        );\n      },\n    );\n  };\n\n  fetchData = ({ pageIndex, pageSize, sortBy, filters }: FetchDataConfig) => {\n    // set loading state, cache the last config for fetching data in this component.\n    this.setState({\n      lastFetchDataConfig: {\n        filters,\n        pageIndex,\n        pageSize,\n        sortBy,\n      },\n      loading: true,\n    });\n    const filterExps = filters.map(({ id: col, operator: opr, value }) => ({\n      col,\n      opr,\n      value,\n    }));\n\n    const queryParams = rison.encode({\n      order_column: sortBy[0].id,\n      order_direction: sortBy[0].desc ? 'desc' : 'asc',\n      page: pageIndex,\n      page_size: pageSize,\n      ...(filterExps.length ? { filters: filterExps } : {}),\n    });\n\n    return SupersetClient.get({\n      endpoint: `/api/v1/dataset/?q=${queryParams}`,\n    })\n      .then(({ json = {} }) => {\n        this.setState({ datasets: json.result, datasetCount: json.count });\n      })\n      .catch(() => {\n        this.props.addDangerToast(\n          t('An error occurred while fetching datasets'),\n        );\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  updateFilters = () => {\n    const { filterOperators, owners, databases } = this.state;\n    const convertFilter = ({\n      name: label,\n      operator,\n    }: {\n      name: string;\n      operator: string;\n    }) => ({ label, value: operator });\n\n    this.setState({\n      filters: [\n        {\n          Header: 'Database',\n          id: 'database',\n          input: 'select',\n          operators: filterOperators.database.map(convertFilter),\n          selects: databases.map(({ text: label, value }) => ({\n            label,\n            value,\n          })),\n        },\n        {\n          Header: 'Schema',\n          id: 'schema',\n          operators: filterOperators.schema.map(convertFilter),\n        },\n        {\n          Header: 'Table Name',\n          id: 'table_name',\n          operators: filterOperators.table_name.map(convertFilter),\n        },\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: filterOperators.owners.map(convertFilter),\n          selects: owners.map(({ text: label, value }) => ({ label, value })),\n        },\n        {\n          Header: 'SQL Lab View',\n          id: 'is_sqllab_view',\n          input: 'checkbox',\n          operators: filterOperators.is_sqllab_view.map(convertFilter),\n        },\n      ],\n    });\n  };\n\n  render() {\n    const { datasets, datasetCount, loading, filters } = this.state;\n\n    return (\n      <>\n        <SubMenu {...this.menu} canCreate={this.canCreate} />\n        <div className=\"container welcome\">\n          <Panel>\n            <Panel.Body>\n              <ConfirmStatusChange\n                title={t('Please confirm')}\n                description={t(\n                  'Are you sure you want to delete the selected datasets?',\n                )}\n                onConfirm={this.handleBulkDatasetDelete}\n              >\n                {confirmDelete => {\n                  const bulkActions = [];\n                  if (this.canDelete) {\n                    bulkActions.push({\n                      key: 'delete',\n                      name: (\n                        <>\n                          <i className=\"fa fa-trash\" /> Delete\n                        </>\n                      ),\n                      onSelect: confirmDelete,\n                    });\n                  }\n                  return (\n                    <ListView\n                      className=\"dataset-list-view\"\n                      title={'Datasets'}\n                      columns={this.columns}\n                      data={datasets}\n                      count={datasetCount}\n                      pageSize={PAGE_SIZE}\n                      fetchData={this.fetchData}\n                      loading={loading}\n                      initialSort={this.initialSort}\n                      filters={filters}\n                      bulkActions={bulkActions}\n                    />\n                  );\n                }}\n              </ConfirmStatusChange>\n            </Panel.Body>\n          </Panel>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withToasts(DatasetList);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
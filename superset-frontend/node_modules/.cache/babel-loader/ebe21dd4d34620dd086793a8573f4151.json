{"ast":null,"code":"import \"core-js/modules/es.symbol.description\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _isPlainObject from \"lodash/isPlainObject\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * under the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert, Tab, Tabs } from 'react-bootstrap';\n\nimport { t } from '@superset-ui/translation';\nimport { getChartControlPanelRegistry } from '@superset-ui/chart';\n\nimport ControlPanelSection from './ControlPanelSection';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport controlConfigs from '../controls';\nimport { sectionsToRender } from '../controlUtils';\nimport * as exploreActions from '../actions/exploreActions';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  alert: PropTypes.string,\n  datasource_type: PropTypes.string.isRequired,\n  exploreState: PropTypes.object.isRequired,\n  controls: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired };\n\n\nclass ControlPanelsContainer extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n\n    this.getControlData = _bindInstanceProperty(_context = this.getControlData).call(_context, this);\n    this.removeAlert = _bindInstanceProperty(_context2 = this.removeAlert).call(_context2, this);\n    this.renderControl = _bindInstanceProperty(_context3 = this.renderControl).call(_context3, this);\n    this.renderControlPanelSection = _bindInstanceProperty(_context4 = this.renderControlPanelSection).call(_context4, this);\n  }\n\n  getControlData(controlName) {\n    if (React.isValidElement(controlName)) {\n      return controlName;\n    }\n\n    const control = this.props.controls[controlName];\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    let mapF = controlConfigs[controlName].mapStateToProps;\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n    getChartControlPanelRegistry().get(this.props.controls.viz_type.value) ||\n    {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    if (\n    controlOverrides[controlName] &&\n    controlOverrides[controlName].mapStateToProps)\n    {\n      mapF = controlOverrides[controlName].mapStateToProps;\n    }\n    // Applying mapStateToProps if needed\n    if (mapF) {\n      return _Object$assign({},\n      control, {},\n      mapF(this.props.exploreState, control, this.props.actions));\n\n    }\n    return control;\n  }\n\n  sectionsToRender() {\n    return sectionsToRender(\n    this.props.form_data.viz_type,\n    this.props.datasource_type);\n\n  }\n\n  removeAlert() {\n    this.props.actions.removeControlPanelAlert();\n  }\n\n  renderControl(name, config, lookupControlData) {\n    const { actions, controls, exploreState, form_data: formData } = this.props;\n    const { visibility } = config;\n\n    // if visibility check says the config is not visible, don't render it\n    if (visibility && !visibility.call(config, this.props)) {\n      return null;\n    }\n\n    // Looking to find mapStateToProps override for this viz type\n    const controlPanelConfig =\n    getChartControlPanelRegistry().get(controls.viz_type.value) || {};\n    const controlOverrides = controlPanelConfig.controlOverrides || {};\n    const overrides = controlOverrides[name];\n\n    // Identifying mapStateToProps function to apply (logic can't be in store)\n    const mapFn =\n    overrides && overrides.mapStateToProps ?\n    overrides.mapStateToProps :\n    config.mapStateToProps;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = lookupControlData ? controls[name] : config;\n\n    // Applying mapStateToProps if needed\n    const additionalProps = mapFn ? _Object$assign({},\n    controlData, {}, mapFn(exploreState, controlData, actions)) :\n    controlData;\n\n    const { validationErrors, provideFormDataToProps } = controlData;\n\n    return (\n      ___EmotionJSX(Control, _extends({\n        name: name,\n        key: \"control-\" + name,\n        value: formData[name],\n        validationErrors: validationErrors,\n        actions: actions,\n        formData: provideFormDataToProps ? formData : null },\n      additionalProps)));\n\n\n  }\n\n  renderControlPanelSection(section) {var _context5, _context6;\n    const { controls } = this.props;\n\n    const hasErrors = _someInstanceProperty(_context5 = section.controlSetRows).call(_context5, (rows) =>\n    _someInstanceProperty(rows).call(rows,\n    (s) =>\n    controls[s] &&\n    controls[s].validationErrors &&\n    controls[s].validationErrors.length > 0));\n\n\n\n    return (\n      ___EmotionJSX(ControlPanelSection, {\n        key: section.label,\n        label: section.label,\n        startExpanded: section.expanded,\n        hasErrors: hasErrors,\n        description: section.description },\n\n      _mapInstanceProperty(_context6 = section.controlSetRows).call(_context6, (controlSets, i) =>\n      ___EmotionJSX(ControlRow, {\n        key: \"controlsetrow-\" + i,\n        className: \"control-row\",\n        controls: _mapInstanceProperty(controlSets).call(controlSets, controlItem => {\n          if (!controlItem) {\n            // When the item is invalid\n            return null;\n          } else if (React.isValidElement(controlItem)) {\n            // When the item is a React element\n            return controlItem;\n          } else if (\n          _isPlainObject(controlItem) &&\n          controlItem.name &&\n          controlItem.config)\n          {\n            const { name, config } = controlItem;\n\n            return this.renderControl(name, config, false);\n          } else if (controls[controlItem]) {\n            // When the item is string name, meaning the control config\n            // is not specified directly. Have to look up the config from\n            // centralized configs.\n            const name = controlItem;\n            return this.renderControl(name, controlConfigs[name], true);\n          }\n          return null;\n        }) }))));\n\n\n\n\n  }\n  render() {\n    const allSectionsToRender = this.sectionsToRender();\n    const querySectionsToRender = [];\n    const displaySectionsToRender = [];\n    _forEachInstanceProperty(allSectionsToRender).call(allSectionsToRender, section => {var _context7;\n      // if at least one control in the secion is not `renderTrigger`\n      // or asks to be displayed at the Data tab\n      if (\n      section.tabOverride === 'data' ||\n      _someInstanceProperty(_context7 = section.controlSetRows).call(_context7, (rows) =>\n      _someInstanceProperty(rows).call(rows,\n      (control) =>\n      controlConfigs[control] && (\n      !controlConfigs[control].renderTrigger ||\n      controlConfigs[control].tabOverride === 'data'))))\n\n\n      {\n        querySectionsToRender.push(section);\n      } else {\n        displaySectionsToRender.push(section);\n      }\n    });\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"scrollbar-container\" },\n      ___EmotionJSX(\"div\", { className: \"scrollbar-content\" },\n      this.props.alert &&\n      ___EmotionJSX(Alert, { bsStyle: \"warning\" },\n      this.props.alert,\n      ___EmotionJSX(\"i\", {\n        className: \"fa fa-close pull-right\",\n        onClick: this.removeAlert,\n        style: { cursor: 'pointer' } })),\n\n\n\n      ___EmotionJSX(Tabs, { id: \"controlSections\" },\n      ___EmotionJSX(Tab, { eventKey: \"query\", title: t('Data') },\n      _mapInstanceProperty(querySectionsToRender).call(querySectionsToRender, this.renderControlPanelSection)),\n\n      displaySectionsToRender.length > 0 &&\n      ___EmotionJSX(Tab, { eventKey: \"display\", title: t('Customize') },\n      _mapInstanceProperty(displaySectionsToRender).call(displaySectionsToRender, this.renderControlPanelSection))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nControlPanelsContainer.propTypes = propTypes;\n\nfunction mapStateToProps({ explore }) {\n  return {\n    alert: explore.controlPanelAlert,\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    controls: explore.controls,\n    exploreState: explore };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(exploreActions, dispatch) };\n\n}\n\nexport { ControlPanelsContainer };const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nControlPanelsContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(ControlPanelsContainer, \"ControlPanelsContainer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
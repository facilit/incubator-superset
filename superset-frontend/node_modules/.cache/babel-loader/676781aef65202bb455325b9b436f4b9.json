{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * to you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * specific language governing permissions and limitations\nunder the License.\nn/* eslint-env browser */\nimport cx from 'classnames';\n// ParentSize uses resize observer so the dashboard will update size\n// when its container size changes, due to e.g., builder side panel opening\nimport { ParentSize } from '@vx/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport { TabContainer, TabContent, TabPane } from 'react-bootstrap';\n\nimport BuilderComponentPane from './BuilderComponentPane';\nimport DashboardHeader from '../containers/DashboardHeader';\nimport DashboardGrid from '../containers/DashboardGrid';\nimport IconButton from './IconButton';\nimport DragDroppable from './dnd/DragDroppable';\nimport DashboardComponent from '../containers/DashboardComponent';\nimport ToastPresenter from '../../messageToasts/containers/ToastPresenter';\nimport WithPopoverMenu from './menu/WithPopoverMenu';\n\nimport getDragDropManager from '../util/getDragDropManager';\nimport findTabIndexByComponentId from '../util/findTabIndexByComponentId';\n\nimport {\nBUILDER_PANE_TYPE,\nDASHBOARD_GRID_ID,\nDASHBOARD_ROOT_ID,\nDASHBOARD_ROOT_DEPTH } from\n'../util/constants';\nimport getDirectPathToTabIndex from '../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../util/getLeafComponentIdFromPath';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst TABS_HEIGHT = 47;\nconst HEADER_HEIGHT = 67;\n\nconst propTypes = {\n  // redux\n  dashboardLayout: PropTypes.object.isRequired,\n  deleteTopLevelTabs: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  colorScheme: PropTypes.string,\n  setColorSchemeAndUnsavedChanges: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  setDirectPathToChild: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  showBuilderPane: false,\n  directPathToChild: [],\n  colorScheme: undefined };\n\n\nclass DashboardBuilder extends React.Component {\n  static shouldFocusTabs(event, container) {\n    // don't focus the tabs when we click on a tab\n    return (\n      event.target.tagName === 'UL' ||\n      /icon-button/.test(event.target.className) &&\n      container.contains(event.target));\n\n  }\n\n  static getRootLevelTabIndex(dashboardLayout, directPathToChild) {\n    return Math.max(\n    0,\n    findTabIndexByComponentId({\n      currentComponent: DashboardBuilder.getRootLevelTabsComponent(\n      dashboardLayout),\n\n      directPathToChild }));\n\n\n  }\n\n  static getRootLevelTabsComponent(dashboardLayout) {\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    return rootChildId === DASHBOARD_GRID_ID ?\n    dashboardLayout[DASHBOARD_ROOT_ID] :\n    dashboardLayout[rootChildId];\n  }\n\n  constructor(props) {var _context, _context2;\n    super(props);\n\n    const { dashboardLayout, directPathToChild } = props;\n    const tabIndex = DashboardBuilder.getRootLevelTabIndex(\n    dashboardLayout,\n    directPathToChild);\n\n    this.state = {\n      tabIndex };\n\n\n    this.handleChangeTab = _bindInstanceProperty(_context = this.handleChangeTab).call(_context, this);\n    this.handleDeleteTopLevelTabs = _bindInstanceProperty(_context2 = this.handleDeleteTopLevelTabs).call(_context2, this);\n  }\n\n  getChildContext() {\n    return {\n      dragDropManager: this.context.dragDropManager || getDragDropManager() };\n\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextFocusComponent = getLeafComponentIdFromPath(\n    nextProps.directPathToChild);\n\n    const currentFocusComponent = getLeafComponentIdFromPath(\n    this.props.directPathToChild);\n\n    if (nextFocusComponent !== currentFocusComponent) {\n      const { dashboardLayout, directPathToChild } = nextProps;\n      const nextTabIndex = DashboardBuilder.getRootLevelTabIndex(\n      dashboardLayout,\n      directPathToChild);\n\n\n      this.setState(() => ({ tabIndex: nextTabIndex }));\n    }\n  }\n\n  handleDeleteTopLevelTabs() {\n    this.props.deleteTopLevelTabs();\n\n    const { dashboardLayout } = this.props;\n    const firstTab = getDirectPathToTabIndex(\n    DashboardBuilder.getRootLevelTabsComponent(dashboardLayout),\n    0);\n\n    this.props.setDirectPathToChild(firstTab);\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  render() {\n    const {\n      handleComponentDrop,\n      dashboardLayout,\n      editMode,\n      showBuilderPane,\n      builderPaneType,\n      setColorSchemeAndUnsavedChanges,\n      colorScheme } =\n    this.props;\n    const { tabIndex } = this.state;\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    const topLevelTabs =\n    rootChildId !== DASHBOARD_GRID_ID && dashboardLayout[rootChildId];\n\n    const childIds = topLevelTabs ? topLevelTabs.children : [DASHBOARD_GRID_ID];\n\n    return (\n      ___EmotionJSX(StickyContainer, {\n        className: cx('dashboard', editMode && 'dashboard--editing') },\n\n      ___EmotionJSX(Sticky, null,\n      ({ style }) =>\n      ___EmotionJSX(DragDroppable, {\n        component: dashboardRoot,\n        parentComponent: null,\n        depth: DASHBOARD_ROOT_DEPTH,\n        index: 0,\n        orientation: \"column\",\n        onDrop: handleComponentDrop,\n        editMode: editMode\n        // you cannot drop on/displace tabs if they already exist\n        , disableDragdrop: !!topLevelTabs,\n        style: _Object$assign({ zIndex: 100 }, style) },\n\n      ({ dropIndicatorProps }) =>\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(DashboardHeader, null),\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps),\n      topLevelTabs &&\n      ___EmotionJSX(WithPopoverMenu, {\n        shouldFocus: DashboardBuilder.shouldFocusTabs,\n        menuItems: [\n        ___EmotionJSX(IconButton, {\n          className: \"fa fa-level-down\",\n          label: \"Collapse tab content\",\n          onClick: this.handleDeleteTopLevelTabs })],\n\n\n        editMode: editMode },\n\n      ___EmotionJSX(DashboardComponent, {\n        id: topLevelTabs.id,\n        parentId: DASHBOARD_ROOT_ID,\n        depth: DASHBOARD_ROOT_DEPTH + 1,\n        index: 0,\n        renderTabContent: false,\n        renderHoverMenu: false,\n        onChangeTab: this.handleChangeTab }))))),\n\n\n\n\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"dashboard-content\" },\n      ___EmotionJSX(\"div\", { className: \"grid-container\" },\n      ___EmotionJSX(ParentSize, null,\n      ({ width }) =>\n      /*\n                       We use a TabContainer irrespective of whether top-level tabs exist to maintain\n                       a consistent React component tree. This avoids expensive mounts/unmounts of\n                       the entire dashboard upon adding/removing top-level tabs, which would otherwise\n                       happen because of React's diffing algorithm\n                     */\n      ___EmotionJSX(TabContainer, {\n        id: DASHBOARD_GRID_ID,\n        activeKey: Math.min(tabIndex, childIds.length - 1),\n        onSelect: this.handleChangeTab,\n        animation: true,\n        mountOnEnter: true,\n        unmountOnExit: false },\n\n      ___EmotionJSX(TabContent, null,\n      _mapInstanceProperty(childIds).call(childIds, (id, index) =>\n      // Matching the key of the first TabPane irrespective of topLevelTabs\n      // lets us keep the same React component tree when !!topLevelTabs changes.\n      // This avoids expensive mounts/unmounts of the entire dashboard.\n      ___EmotionJSX(TabPane, {\n        key: index === 0 ? DASHBOARD_GRID_ID : id,\n        eventKey: index },\n\n      ___EmotionJSX(DashboardGrid, {\n        gridComponent: dashboardLayout[id]\n        // see isValidChild for why tabs do not increment the depth of their children\n        , depth: DASHBOARD_ROOT_DEPTH + 1 // (topLevelTabs ? 0 : 1)}\n        , width: width,\n        isComponentVisible: index === tabIndex }))))))),\n\n\n\n\n\n\n\n\n      editMode && builderPaneType !== BUILDER_PANE_TYPE.NONE &&\n      ___EmotionJSX(BuilderComponentPane, {\n        topOffset: HEADER_HEIGHT + (topLevelTabs ? TABS_HEIGHT : 0),\n        showBuilderPane: showBuilderPane,\n        builderPaneType: builderPaneType,\n        setColorSchemeAndUnsavedChanges: setColorSchemeAndUnsavedChanges,\n        colorScheme: colorScheme })),\n\n\n\n      ___EmotionJSX(ToastPresenter, null)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardBuilder.propTypes = propTypes;\nDashboardBuilder.defaultProps = defaultProps;\nDashboardBuilder.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired };const _default =\n\n\nDashboardBuilder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TABS_HEIGHT, \"TABS_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(HEADER_HEIGHT, \"HEADER_HEIGHT\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(DashboardBuilder, \"DashboardBuilder\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
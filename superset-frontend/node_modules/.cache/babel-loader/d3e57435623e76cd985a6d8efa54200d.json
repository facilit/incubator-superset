{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Button } from 'react-bootstrap';\nimport { t } from '@superset-ui/translation';\n\nimport buildFilterScopeTreeEntry from '../../util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from '../../util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from '../../util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from '../../util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from '../../util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from '../../util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from '../../util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from '../../util/getRevertedFilterScope';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';\nimport { getChartIdsInFilterScope } from '../../util/activeDashboardFilters';\nimport {\ngetChartIdAndColumnFromFilterKey,\ngetDashboardFilterKey } from\n'../../util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from '../../util/constants';\nimport { dashboardFilterPropShape } from '../../util/propShapes';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired };\n\n\nexport default class FilterScopeSelector extends React.PureComponent {\n  constructor(props) {var _context5, _context6, _context7, _context8, _context9, _context10, _context11, _context12, _context13;\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (_Object$keys(dashboardFilters).length > 0) {var _context, _context4;\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters });\n\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      _forEachInstanceProperty(filtersNodes).call(filtersNodes, ({ children }) => {\n        _forEachInstanceProperty(children).call(children, child => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = _reduceInstanceProperty(_context = _Object$values(dashboardFilters)).call(_context,\n      (map, { chartId: filterId, columns }) => {var _context2;\n        const filterScopeByChartId = _reduceInstanceProperty(_context2 = _Object$keys(columns)).call(_context2,\n        (mapByChartId, columnName) => {var _context3;\n          const filterKey = getDashboardFilterKey({\n            chartId: filterId,\n            column: columnName });\n\n          const nodes = getFilterScopeNodesTree({\n            components: layout,\n            filterFields: [filterKey],\n            selectedChartId: filterId });\n\n          const expanded = getFilterScopeParentNodes(nodes, 1);\n          // force display filter_box chart as unchecked, but show checkbox as disabled\n          const chartIdsInFilterScope = _filterInstanceProperty(_context3 =\n          getChartIdsInFilterScope({\n            filterScope: dashboardFilters[filterId].scopes[columnName] }) ||\n          []).call(_context3,\n          id => id !== filterId);\n\n          return _Object$assign({},\n          mapByChartId, {\n            [filterKey]: {\n              // unfiltered nodes\n              nodes,\n              // filtered nodes in display if searchText is not empty\n              nodesFiltered: [...nodes],\n              checked: chartIdsInFilterScope,\n              expanded } });\n\n\n        },\n        {});\n\n\n        return _Object$assign({},\n        map, {},\n        filterScopeByChartId);\n\n      },\n      {});\n\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n      this.defaultFilterKey);\n\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = _concatInstanceProperty(_context4 = [ALL_FILTERS_ROOT]).call(_context4, chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout });\n\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: _Object$assign({},\n        filterScopeMap, {},\n        filterScopeTreeEntry),\n\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds };\n\n    } else {\n      this.state = {\n        showSelector: false };\n\n    }\n\n    this.filterNodes = _bindInstanceProperty(_context5 = this.filterNodes).call(_context5, this);\n    this.onChangeFilterField = _bindInstanceProperty(_context6 = this.onChangeFilterField).call(_context6, this);\n    this.onCheckFilterScope = _bindInstanceProperty(_context7 = this.onCheckFilterScope).call(_context7, this);\n    this.onExpandFilterScope = _bindInstanceProperty(_context8 = this.onExpandFilterScope).call(_context8, this);\n    this.onSearchInputChange = _bindInstanceProperty(_context9 = this.onSearchInputChange).call(_context9, this);\n    this.onCheckFilterField = _bindInstanceProperty(_context10 = this.onCheckFilterField).call(_context10, this);\n    this.onExpandFilterField = _bindInstanceProperty(_context11 = this.onExpandFilterField).call(_context11, this);\n    this.onClose = _bindInstanceProperty(_context12 = this.onClose).call(_context12, this);\n    this.onSave = _bindInstanceProperty(_context13 = this.onSave).call(_context13, this);\n  }\n\n  onCheckFilterScope(checked = []) {\n    const {\n      activeFilterField,\n      filterScopeMap,\n      checkedFilterFields } =\n    this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    const editingList = activeFilterField ?\n    [activeFilterField] :\n    checkedFilterFields;\n    const updatedEntry = _Object$assign({},\n    filterScopeMap[key], {\n      checked });\n\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap });\n\n\n    this.setState(() => ({\n      filterScopeMap: _Object$assign({},\n      filterScopeMap, {},\n      updatedFilterScopeMap, {\n        [key]: updatedEntry }) }));\n\n\n  }\n\n  onExpandFilterScope(expanded = []) {\n    const {\n      activeFilterField,\n      checkedFilterFields,\n      filterScopeMap } =\n    this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    const updatedEntry = _Object$assign({},\n    filterScopeMap[key], {\n      expanded });\n\n    this.setState(() => ({\n      filterScopeMap: _Object$assign({},\n      filterScopeMap, {\n        [key]: updatedEntry }) }));\n\n\n  }\n\n  onCheckFilterField(checkedFilterFields = []) {\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout });\n\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: _Object$assign({},\n      filterScopeMap, {},\n      filterScopeTreeEntry) }));\n\n\n  }\n\n  onExpandFilterField(expandedFilterIds = []) {\n    this.setState(() => ({\n      expandedFilterIds }));\n\n  }\n\n  onChangeFilterField(filterField = {}) {var _context14;\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap } =\n    this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout });\n\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: _Object$assign({},\n        filterScopeMap, {},\n        filterScopeTreeEntry) });\n\n\n    } else if (_includesInstanceProperty(_context14 = this.allfilterFields).call(_context14, nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout });\n\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: _Object$assign({},\n        filterScopeMap, {},\n        filterScopeTreeEntry) });\n\n\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {var _context15;\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = _reduceInstanceProperty(_context15 = this.allfilterFields).call(_context15,\n    (map, filterKey) => {\n      const nodes = filterScopeMap[filterKey].nodes;\n      const checkedChartIds = filterScopeMap[filterKey].checked;\n\n      return _Object$assign({},\n      map, {\n        [filterKey]: getFilterScopeFromNodesTree({\n          filterKey,\n          nodes,\n          checkedChartIds }) });\n\n\n    },\n    {});\n\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState(prevState => {\n        const {\n          activeFilterField,\n          checkedFilterFields,\n          filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields });\n\n\n        const updatedEntry = _Object$assign({},\n        filterScopeMap[key], {\n          nodesFiltered: filterScopeMap[key].nodes });\n\n        return {\n          filterScopeMap: _Object$assign({},\n          filterScopeMap, {\n            [key]: updatedEntry }) };\n\n\n      });\n    } else {\n      const updater = prevState => {var _context16;\n        const {\n          activeFilterField,\n          checkedFilterFields,\n          filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields });\n\n\n        const nodesFiltered = _reduceInstanceProperty(_context16 = filterScopeMap[key].nodes).call(_context16,\n        this.filterNodes,\n        []);\n\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = _Object$assign({},\n        filterScopeMap[key], {\n          nodesFiltered,\n          expanded });\n\n\n        return {\n          filterScopeMap: _Object$assign({},\n          filterScopeMap, {\n            [key]: updatedEntry }) };\n\n\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered = [], node = {}) {var _context17, _context18;\n    const { searchText } = this.state;\n    const children = _reduceInstanceProperty(_context17 = node.children || []).call(_context17, this.filterNodes, []);\n\n    if (\n    // Node's label matches the search string\n    _indexOfInstanceProperty(_context18 = node.label.toLocaleLowerCase()).call(_context18, searchText.toLocaleLowerCase()) >\n    -1 ||\n    // Or a children has a matching node\n    children.length)\n    {\n      filtered.push(_Object$assign({}, node, { children }));\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds } =\n    this.state;\n    return (\n      ___EmotionJSX(FilterFieldTree, {\n        activeKey: activeFilterField,\n        nodes: filterFieldNodes,\n        checked: checkedFilterFields,\n        expanded: expandedFilterIds,\n        onClick: this.onChangeFilterField,\n        onCheck: this.onCheckFilterField,\n        onExpand: this.onExpandFilterField }));\n\n\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText } =\n    this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields });\n\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"input\", {\n        className: \"filter-text scope-search multi-edit-mode\",\n        placeholder: t('Search...'),\n        type: \"text\",\n        value: searchText,\n        onChange: this.onSearchInputChange }),\n\n      ___EmotionJSX(FilterScopeTree, {\n        nodes: filterScopeMap[key].nodesFiltered,\n        checked: filterScopeMap[key].checked,\n        expanded: filterScopeMap[key].expanded,\n        onCheck: this.onCheckFilterScope,\n        onExpand: this.onExpandFilterScope\n        // pass selectedFilterId prop to FilterScopeTree component,\n        // to hide checkbox for selected filter field itself\n        , selectedChartId: selectedChartId })));\n\n\n\n  }\n\n  renderEditingFiltersName() {var _context19, _context20;\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = _mapInstanceProperty(_context19 = _concatInstanceProperty(_context20 = []).call(_context20,\n    activeFilterField || checkedFilterFields)).call(_context19,\n    key => {\n      const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n      return dashboardFilters[chartId].labels[column] || column;\n    });\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"selected-fields multi-edit-mode\" },\n      currentFilterLabels.length === 0 && t('No filter is selected.'),\n      currentFilterLabels.length === 1 && t('Editing 1 filter:'),\n      currentFilterLabels.length > 1 &&\n      t('Batch editing %d filters:', currentFilterLabels.length),\n      ___EmotionJSX(\"span\", { className: \"selected-scopes\" },\n      currentFilterLabels.join(', '))));\n\n\n\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"filter-scope-container\" },\n      ___EmotionJSX(\"div\", { className: \"filter-scope-header\" },\n      ___EmotionJSX(\"h4\", null, t('Configure filter scopes')),\n      showSelector && this.renderEditingFiltersName()),\n\n\n      ___EmotionJSX(\"div\", { className: \"filter-scope-body\" },\n      !showSelector ?\n      ___EmotionJSX(\"div\", { className: \"warning-message\" },\n      t('There are no filters in this dashboard.')) :\n\n\n      ___EmotionJSX(\"div\", { className: \"filters-scope-selector\" },\n      ___EmotionJSX(\"div\", { className: cx('filter-field-pane multi-edit-mode') },\n      this.renderFilterFieldList()),\n\n      ___EmotionJSX(\"div\", { className: \"filter-scope-pane multi-edit-mode\" },\n      this.renderFilterScopeTree()))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"dashboard-modal-actions-container\" },\n      ___EmotionJSX(Button, { onClick: this.onClose }, t('Close')),\n      showSelector &&\n      ___EmotionJSX(Button, { bsStyle: \"primary\", onClick: this.onSave },\n      t('Save')))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterScopeSelector.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(FilterScopeSelector, \"FilterScopeSelector\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.string.search\";import \"core-js/modules/web.dom-collections.iterator\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 * KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nnimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, SplitButton, Tab, Tabs } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport URI from 'urijs';\nimport { t } from '@superset-ui/translation';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport * as Actions from '../actions/sqlLab';\nimport SqlEditor from './SqlEditor';\nimport { areArraysShallowEqual } from '../../reduxUtils';\nimport TabStatusIcon from './TabStatusIcon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  defaultDbId: PropTypes.number,\n  displayLimit: PropTypes.number,\n  defaultQueryLimit: PropTypes.number.isRequired,\n  maxRow: PropTypes.number.isRequired,\n  databases: PropTypes.object.isRequired,\n  queries: PropTypes.object.isRequired,\n  queryEditors: PropTypes.array,\n  requestedQuery: PropTypes.object,\n  tabHistory: PropTypes.array.isRequired,\n  tables: PropTypes.array.isRequired,\n  offline: PropTypes.bool,\n  saveQueryWarning: PropTypes.string,\n  scheduleQueryWarning: PropTypes.string };\n\nconst defaultProps = {\n  queryEditors: [],\n  offline: false,\n  requestedQuery: null,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null };\n\n\nlet queryCount = 1;\n\nclass TabbedSqlEditors extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    const sqlLabUrl = '/superset/sqllab';\n    this.state = {\n      sqlLabUrl,\n      queriesArray: [],\n      dataPreviewQueries: [],\n      hideLeftBar: false };\n\n    this.removeQueryEditor = _bindInstanceProperty(_context = this.removeQueryEditor).call(_context, this);\n    this.renameTab = _bindInstanceProperty(_context2 = this.renameTab).call(_context2, this);\n    this.toggleLeftBar = _bindInstanceProperty(_context3 = this.toggleLeftBar).call(_context3, this);\n    this.removeAllOtherQueryEditors = _bindInstanceProperty(_context4 = this.removeAllOtherQueryEditors).call(_context4,\n    this);\n\n    this.duplicateQueryEditor = _bindInstanceProperty(_context5 = this.duplicateQueryEditor).call(_context5, this);\n  }\n  componentDidMount() {\n    // migrate query editor and associated tables state to server\n    if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {var _context6, _context7, _context8, _context9;\n      const localStorageTables = _filterInstanceProperty(_context6 = this.props.tables).call(_context6,\n      table => table.inLocalStorage);\n\n      const localStorageQueries = _filterInstanceProperty(_context7 = _Object$values(this.props.queries)).call(_context7,\n      query => query.inLocalStorage);\n\n      _forEachInstanceProperty(_context8 = _filterInstanceProperty(_context9 = this.props.queryEditors).call(_context9,\n      qe => qe.inLocalStorage)).call(_context8,\n      qe => {\n        // get all queries associated with the query editor\n        const queries = _filterInstanceProperty(localStorageQueries).call(localStorageQueries,\n        query => query.sqlEditorId === qe.id);\n\n        const tables = _filterInstanceProperty(localStorageTables).call(localStorageTables,\n        table => table.queryEditorId === qe.id);\n\n        this.props.actions.migrateQueryEditorFromLocalStorage(\n        qe,\n        tables,\n        queries);\n\n      });\n    }\n\n    // merge post form data with GET search params\n    const query = _Object$assign({},\n    this.props.requestedQuery, {},\n    URI(window.location).search(true));\n\n\n    // Popping a new tab based on the querystring\n    if (query.id || query.sql || query.savedQueryId || query.datasourceKey) {\n      if (query.id) {\n        this.props.actions.popStoredQuery(query.id);\n      } else if (query.savedQueryId) {\n        this.props.actions.popSavedQuery(query.savedQueryId);\n      } else if (query.datasourceKey) {\n        this.props.actions.popDatasourceQuery(query.datasourceKey, query.sql);\n      } else if (query.sql) {\n        let dbId = query.dbid;\n        if (dbId) {\n          dbId = _parseInt(dbId, 10);\n        } else {\n          const databases = this.props.databases;\n          const dbName = query.dbname;\n          if (dbName) {var _context10;\n            _forEachInstanceProperty(_context10 = _Object$keys(databases)).call(_context10, db => {\n              if (databases[db].database_name === dbName) {\n                dbId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          title: query.title,\n          dbId,\n          schema: query.schema,\n          autorun: query.autorun,\n          sql: query.sql };\n\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab();\n    } else if (this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe.latestQueryId];\n      if (\n      isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery &&\n      latestQuery.resultsKey)\n      {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n        latestQuery,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {var _context11;\n    const nextActiveQeId =\n    nextProps.tabHistory[nextProps.tabHistory.length - 1];\n    const queriesArray = [];\n    for (const id in nextProps.queries) {\n      if (nextProps.queries[id].sqlEditorId === nextActiveQeId) {\n        queriesArray.push(nextProps.queries[id]);\n      }\n    }\n    if (!areArraysShallowEqual(queriesArray, this.state.queriesArray)) {\n      this.setState({ queriesArray });\n    }\n\n    const dataPreviewQueries = [];\n    _forEachInstanceProperty(_context11 = nextProps.tables).call(_context11, table => {\n      const queryId = table.dataPreviewQueryId;\n      if (\n      queryId &&\n      nextProps.queries[queryId] &&\n      table.queryEditorId === nextActiveQeId)\n      {\n        dataPreviewQueries.push(_Object$assign({},\n        nextProps.queries[queryId], {\n          tableName: table.name }));\n\n      }\n    });\n    if (\n    !areArraysShallowEqual(dataPreviewQueries, this.state.dataPreviewQueries))\n    {\n      this.setState({ dataPreviewQueries });\n    }\n  }\n  popNewTab() {\n    queryCount++;\n    // Clean the url in browser history\n    window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n  }\n  renameTab(qe) {\n    /* eslint no-alert: 0 */\n    const newTitle = prompt(t('Enter a new title for the tab'));\n    if (newTitle) {\n      this.props.actions.queryEditorSetTitle(qe, newTitle);\n    }\n  }\n  activeQueryEditor() {var _context12;\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return _findInstanceProperty(_context12 = this.props.queryEditors).call(_context12, qe => qe.id === qeid) || null;\n  }\n  newQueryEditor() {var _context13;\n    queryCount++;\n    const activeQueryEditor = this.activeQueryEditor();\n    const firstDbId = Math.min(\n    ..._mapInstanceProperty(_context13 = _Object$values(this.props.databases)).call(_context13, database => database.id));\n\n    const warning = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) ?\n    '' :\n    t(\n    '-- Note: Unless you save your query, these tabs will NOT persist if you clear your cookies or change browsers.') + \"\\n\\n\";\n\n    const qe = {\n      title: t('Untitled Query %s', queryCount),\n      dbId:\n      activeQueryEditor && activeQueryEditor.dbId ?\n      activeQueryEditor.dbId :\n      this.props.defaultDbId || firstDbId,\n      schema: activeQueryEditor ? activeQueryEditor.schema : null,\n      autorun: false,\n      sql: warning + \"SELECT ...\",\n      queryLimit: this.props.defaultQueryLimit };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n  handleSelect(key) {\n    if (key === 'add_tab') {\n      this.newQueryEditor();\n    } else {\n      const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n      if (key !== qeid) {var _context14;\n        const queryEditor = _findInstanceProperty(_context14 = this.props.queryEditors).call(_context14, qe => qe.id === key);\n        this.props.actions.switchQueryEditor(\n        queryEditor,\n        this.props.displayLimit);\n\n      }\n    }\n  }\n  removeQueryEditor(qe) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n  removeAllOtherQueryEditors(cqe) {var _context15;\n    _forEachInstanceProperty(_context15 = this.props.queryEditors).call(_context15,\n    qe => qe !== cqe && this.removeQueryEditor(qe));\n\n  }\n  duplicateQueryEditor(qe) {\n    this.props.actions.cloneQueryToNewTab(qe, false);\n  }\n  toggleLeftBar() {\n    this.setState({ hideLeftBar: !this.state.hideLeftBar });\n  }\n  render() {var _context16, _context18;\n    const editors = _mapInstanceProperty(_context16 = this.props.queryEditors).call(_context16, (qe, i) => {var _context17;\n      const isSelected =\n      this.activeQueryEditor() && this.activeQueryEditor().id === qe.id;\n\n      let latestQuery;\n      if (qe.latestQueryId) {\n        latestQuery = this.props.queries[qe.latestQueryId];\n      }\n      let database;\n      if (qe.dbId) {\n        database = this.props.databases[qe.dbId];\n      }\n      const state = latestQuery ? latestQuery.state : '';\n\n      const title =\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(TabStatusIcon, {\n        onClose: () => this.removeQueryEditor(qe),\n        tabState: state }),\n      ' ',\n      qe.title, ' ');\n\n\n      const tabTitle =\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(\"span\", { className: \"ddbtn-tab\" }, title),\n      isSelected &&\n      ___EmotionJSX(SplitButton, {\n        bsSize: \"small\",\n        id: 'ddbtn-tab-' + i,\n        className: \"ddbtn-tab\",\n        title: \"\\xA0\" },\n\n      ___EmotionJSX(MenuItem, {\n        className: \"close-btn\",\n        eventKey: \"1\",\n        onClick: () => this.removeQueryEditor(qe) },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-close\" })),\n\n      t('Close tab')),\n\n      ___EmotionJSX(MenuItem, { eventKey: \"2\", onClick: () => this.renameTab(qe) },\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-i-cursor\" })),\n\n      t('Rename tab')),\n\n      ___EmotionJSX(MenuItem, { eventKey: \"3\", onClick: this.toggleLeftBar },\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-cogs\" })),\n\n      this.state.hideLeftBar ?\n      t('Expand tool bar') :\n      t('Hide tool bar')),\n\n      ___EmotionJSX(MenuItem, {\n        eventKey: \"4\",\n        onClick: () => this.removeAllOtherQueryEditors(qe) },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-times-circle-o\" })),\n\n      t('Close all other tabs')),\n\n      ___EmotionJSX(MenuItem, {\n        eventKey: \"5\",\n        onClick: () => this.duplicateQueryEditor(qe) },\n\n      ___EmotionJSX(\"div\", { className: \"icon-container\" },\n      ___EmotionJSX(\"i\", { className: \"fa fa-files-o\" })),\n\n      t('Duplicate tab'))));\n\n\n\n\n\n      return (\n        ___EmotionJSX(Tab, { key: qe.id, title: tabTitle, eventKey: qe.id },\n        isSelected &&\n        ___EmotionJSX(SqlEditor, {\n          tables: _filterInstanceProperty(_context17 = this.props.tables).call(_context17,\n          xt => xt.queryEditorId === qe.id),\n\n          queryEditor: qe,\n          editorQueries: this.state.queriesArray,\n          dataPreviewQueries: this.state.dataPreviewQueries,\n          latestQuery: latestQuery,\n          database: database,\n          actions: this.props.actions,\n          hideLeftBar: this.state.hideLeftBar,\n          defaultQueryLimit: this.props.defaultQueryLimit,\n          maxRow: this.props.maxRow,\n          displayLimit: this.props.displayLimit,\n          saveQueryWarning: this.props.saveQueryWarning,\n          scheduleQueryWarning: this.props.scheduleQueryWarning })));\n\n\n\n\n    });\n    return (\n      ___EmotionJSX(Tabs, {\n        bsStyle: \"tabs\",\n        animation: false,\n        activeKey: this.props.tabHistory[this.props.tabHistory.length - 1],\n        onSelect: _bindInstanceProperty(_context18 = this.handleSelect).call(_context18, this),\n        id: \"a11y-query-editor-tabs\",\n        className: \"SqlEditorTabs\" },\n\n      editors,\n      ___EmotionJSX(Tab, {\n        title:\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(\"i\", { className: \"fa fa-plus-circle\" }), \"\\xA0\"),\n\n\n\n        className: \"addEditorTab\",\n        eventKey: \"add_tab\",\n        disabled: this.props.offline })));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.propTypes = propTypes;\nTabbedSqlEditors.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common, requestedQuery }) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    tables: sqlLab.tables,\n    defaultDbId: sqlLab.defaultDbId,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n    scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n    requestedQuery };\n\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch) };\n\n}\n\nexport { TabbedSqlEditors };const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(queryCount, \"queryCount\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
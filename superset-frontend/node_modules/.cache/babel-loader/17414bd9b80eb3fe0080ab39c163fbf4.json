{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator\";import _everyInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/every\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * or more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *   http://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    */\nimport { useEffect, useMemo, useState } from 'react';\nimport { useFilters, usePagination, useRowSelect, useRowState, useSortBy, useTable } from 'react-table';\nimport { JsonParam, NumberParam, StringParam, useQueryParams } from 'use-query-params';\n\nexport class ListViewError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = 'ListViewError';\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}} // removes element from a list, returns new list\nexport function removeFromList(list, index) {\n  return _filterInstanceProperty(list).call(list, (_, i) => index !== i);\n}\n// apply update to elements of object list, returns new list\nfunction updateInList(list, index, update) {\n  const element = _findInstanceProperty(list).call(list, (_, i) => index === i);\n  return [\n  ..._sliceInstanceProperty(list).call(list, 0, index), _Object$assign({},\n  element, {}, update),\n  ..._sliceInstanceProperty(list).call(list, index + 1)];\n\n}\nfunction mergeCreateFilterValues(list, updateList) {\n  return _mapInstanceProperty(list).call(list, ({ id, operator }) => {\n    const update = _findInstanceProperty(updateList).call(updateList, obj => obj.id === id);\n    return { id, operator, value: update === null || update === void 0 ? void 0 : update.value };\n  });\n}\n// convert filters from UI objects to data objects\nexport function convertFilters(fts) {var _context;\n  return _mapInstanceProperty(_context = _filterInstanceProperty(fts).call(fts,\n  f => typeof f.value !== 'undefined')).call(_context,\n  ({ value, operator, id }) => ({ value, operator, id }));\n}\nexport function extractInputValue(inputType, event) {\n  if (!inputType || inputType === 'text') {\n    return event.currentTarget.value;\n  }\n  if (inputType === 'checkbox') {\n    return event.currentTarget.checked;\n  }\n  return null;\n}\nexport function getDefaultFilterOperator(filter) {var _filter$operators;\n  if (filter === null || filter === void 0 ? void 0 : filter.operator)\n  return filter.operator;\n  if (filter === null || filter === void 0 ? void 0 : (_filter$operators = filter.operators) === null || _filter$operators === void 0 ? void 0 : _filter$operators.length) {\n    return filter.operators[0].value;\n  }\n  return '';\n}\nexport function useListViewState({ fetchData, columns, data, count, initialPageSize, initialFilters = [], initialSort = [], bulkSelectMode = false, bulkSelectColumnConfig }) {\n  const [query, setQuery] = useQueryParams({\n    filters: JsonParam,\n    pageIndex: NumberParam,\n    sortColumn: StringParam,\n    sortOrder: StringParam });\n\n  const initialSortBy = useMemo(() => query.sortColumn && query.sortOrder ?\n  [{ id: query.sortColumn, desc: query.sortOrder === 'desc' }] :\n  initialSort, [query.sortColumn, query.sortOrder]);\n  const initialState = {\n    filters: convertFilters(query.filters || []),\n    pageIndex: query.pageIndex || 0,\n    pageSize: initialPageSize,\n    sortBy: initialSortBy };\n\n  const columnsWithSelect = useMemo(() => {\n    // add exact filter type so filters with falsey values are not filtered out\n    const columnsWithFilter = _mapInstanceProperty(columns).call(columns, f => _Object$assign({}, f, { filter: 'exact' }));\n    return bulkSelectMode ?\n    [bulkSelectColumnConfig, ...columnsWithFilter] :\n    columnsWithFilter;\n  }, [bulkSelectMode, columns]);\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, state: { pageIndex, pageSize, sortBy, filters } } = useTable({\n    columns: columnsWithSelect,\n    count,\n    data,\n    disableFilters: true,\n    disableSortRemove: true,\n    initialState,\n    manualFilters: true,\n    manualPagination: true,\n    manualSortBy: true,\n    pageCount: Math.ceil(count / initialPageSize) },\n  useFilters, useSortBy, usePagination, useRowState, useRowSelect);\n  const [internalFilters, setInternalFilters] = useState(query.filters || []);\n  useEffect(() => {\n    if (initialFilters.length) {\n      setInternalFilters(mergeCreateFilterValues(initialFilters, query.filters || []));\n    }\n  }, [initialFilters]);\n  useEffect(() => {\n    const queryParams = {\n      filters: internalFilters,\n      pageIndex };\n\n    if (sortBy[0]) {\n      queryParams.sortColumn = sortBy[0].id;\n      queryParams.sortOrder = sortBy[0].desc ? 'desc' : 'asc';\n    }\n    const method = typeof query.pageIndex !== 'undefined' &&\n    queryParams.pageIndex !== query.pageIndex ?\n    'push' :\n    'replace';\n    setQuery(queryParams, method);\n    fetchData({ pageIndex, pageSize, sortBy, filters });\n  }, [fetchData, pageIndex, pageSize, sortBy, filters]);\n  useEffect(() => {\n    if (!_isEqual(initialState.pageIndex, pageIndex)) {\n      gotoPage(initialState.pageIndex);\n    }\n  }, [query]);\n  const filtersApplied = _everyInstanceProperty(internalFilters).call(internalFilters, ({ id, value, operator }, index) => {var _filters$index, _filters$index2, _filters$index3;return id &&\n    ((_filters$index = filters[index]) === null || _filters$index === void 0 ? void 0 : _filters$index.id) === id &&\n    ((_filters$index2 = filters[index]) === null || _filters$index2 === void 0 ? void 0 : _filters$index2.value) === value &&\n    // @ts-ignore\n    ((_filters$index3 = filters[index]) === null || _filters$index3 === void 0 ? void 0 : _filters$index3.operator) === operator;});\n  const updateInternalFilter = (index, update) => setInternalFilters(updateInList(internalFilters, index, update));\n  const applyFilterValue = (index, value) => {\n    // skip redunundant updates\n    if (internalFilters[index].value === value) {\n      return;\n    }\n    const update = _Object$assign({}, internalFilters[index], { value });\n    const updatedFilters = updateInList(internalFilters, index, update);\n    setInternalFilters(updatedFilters);\n    setAllFilters(convertFilters(updatedFilters));\n    gotoPage(0); // clear pagination on filter\n  };\n  const removeFilterAndApply = index => {\n    const updated = removeFromList(internalFilters, index);\n    setInternalFilters(updated);\n    setAllFilters(convertFilters(updated));\n  };\n  return {\n    applyFilters: () => setAllFilters(convertFilters(internalFilters)),\n    removeFilterAndApply,\n    canNextPage,\n    canPreviousPage,\n    filtersApplied,\n    getTableBodyProps,\n    getTableProps,\n    gotoPage,\n    headerGroups,\n    pageCount,\n    prepareRow,\n    rows,\n    selectedFlatRows,\n    setAllFilters,\n    setInternalFilters,\n    state: { pageIndex, pageSize, sortBy, filters, internalFilters },\n    updateInternalFilter,\n    applyFilterValue };\n\n}__signature__(useListViewState, \"useQueryParams{[query, setQuery]}\\nuseMemo{initialSortBy}\\nuseMemo{columnsWithSelect}\\nuseTable{{ getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, canPreviousPage, canNextPage, pageCount, gotoPage, setAllFilters, selectedFlatRows, state: { pageIndex, pageSize, sortBy, filters }, }}\\nuseState{[internalFilters, setInternalFilters](query.filters || [])}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useQueryParams, useTable]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ListViewError, \"ListViewError\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(removeFromList, \"removeFromList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(updateInList, \"updateInList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(mergeCreateFilterValues, \"mergeCreateFilterValues\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(convertFilters, \"convertFilters\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(extractInputValue, \"extractInputValue\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(getDefaultFilterOperator, \"getDefaultFilterOperator\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");reactHotLoader.register(useListViewState, \"useListViewState\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/components/ListView/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
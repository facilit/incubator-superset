{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                 * Licensed to the Apache Software Foundation (ASF) under one\n                                                                                                                                                                                                                                                                                                                                                                                                 * or more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                 * distributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                 * regarding copyright ownership.  The ASF licenses this file\n                                                                                                                                                                                                                                                                                                                                                                                                 * to you under the Apache License, Version 2.0 (the\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"License\"); you may not use this file except in compliance\n                                                                                                                                                                                                                                                                                                                                                                                                 * with the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                 *\n                                                                                                                                                                                                                                                                                                                                                                                                 * Unless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                 * software distributed under the License is distributed on an\n                                                                                                                                                                                                                                                                                                                                                                                                 * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n                                                                                                                                                                                                                                                                                                                                                                                                 * KIND, either express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                 * specific language governing permissions and limitations\n                                                                                                                                                                                                                                                                                                                                                                                                 * under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Panel } from 'react-bootstrap';\n\nimport TextControl from './TextControl';\nimport MetricsControl from './MetricsControl';\nimport ControlHeader from '../ControlHeader';\nimport PopoverSection from '../../../components/PopoverSection';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst controlTypes = {\n  fixed: 'fix',\n  metric: 'metric' };\n\n\nconst propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  isFloat: PropTypes.bool,\n  datasource: PropTypes.object.isRequired,\n  default: PropTypes.shape({\n    type: PropTypes.oneOf(['fix', 'metric']),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) }) };\n\n\n\nconst defaultProps = {\n  onChange: () => {},\n  default: { type: controlTypes.fixed, value: 5 } };\n\n\nexport default class FixedOrMetricControl extends React.Component {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5;\n    super(props);\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.setType = _bindInstanceProperty(_context2 = this.setType).call(_context2, this);\n    this.setFixedValue = _bindInstanceProperty(_context3 = this.setFixedValue).call(_context3, this);\n    this.setMetric = _bindInstanceProperty(_context4 = this.setMetric).call(_context4, this);\n    this.toggle = _bindInstanceProperty(_context5 = this.toggle).call(_context5, this);\n    const type =\n    (props.value ? props.value.type : props.default.type) ||\n    controlTypes.fixed;\n    const value =\n    (props.value ? props.value.value : props.default.value) || '100';\n    this.state = {\n      type,\n      fixedValue: type === controlTypes.fixed ? value : '',\n      metricValue: type === controlTypes.metric ? value : null };\n\n  }\n  onChange() {\n    this.props.onChange({\n      type: this.state.type,\n      value:\n      this.state.type === controlTypes.fixed ?\n      this.state.fixedValue :\n      this.state.metricValue });\n\n  }\n  setType(type) {\n    this.setState({ type }, this.onChange);\n  }\n  setFixedValue(fixedValue) {\n    this.setState({ fixedValue }, this.onChange);\n  }\n  setMetric(metricValue) {\n    this.setState({ metricValue }, this.onChange);\n  }\n\n  toggle() {\n    const expanded = !this.state.expanded;\n    this.setState({\n      expanded });\n\n  }\n\n  render() {\n    const value = this.props.value || this.props.default;\n    const type = value.type || controlTypes.fixed;\n    const columns = this.props.datasource ?\n    this.props.datasource.columns :\n    null;\n    const metrics = this.props.datasource ?\n    this.props.datasource.metrics :\n    null;\n    return (\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(Label, { style: { cursor: 'pointer' }, onClick: this.toggle },\n      this.state.type === controlTypes.fixed &&\n      ___EmotionJSX(\"span\", null, this.state.fixedValue),\n\n      this.state.type === controlTypes.metric &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"span\", { style: { fontWeight: 'normal' } }, \"metric: \"),\n      ___EmotionJSX(\"strong\", null,\n      this.state.metricValue ? this.state.metricValue.label : null))),\n\n\n\n\n      ___EmotionJSX(Panel, {\n        className: \"panel-spreaded\",\n        collapsible: true,\n        expanded: this.state.expanded,\n        onToggle: this.toggle },\n\n      ___EmotionJSX(Panel.Collapse, null,\n      ___EmotionJSX(Panel.Body, null,\n      ___EmotionJSX(\"div\", { className: \"well\" },\n      ___EmotionJSX(PopoverSection, {\n        title: \"Fixed\",\n        isSelected: type === controlTypes.fixed,\n        onSelect: () => {\n          this.setType(controlTypes.fixed);\n        } },\n\n      ___EmotionJSX(TextControl, {\n        isFloat: true,\n        onChange: this.setFixedValue,\n        onFocus: () => {\n          this.setType(controlTypes.fixed);\n        },\n        value: this.state.fixedValue })),\n\n\n      ___EmotionJSX(PopoverSection, {\n        title: \"Based on a metric\",\n        isSelected: type === controlTypes.metric,\n        onSelect: () => {\n          this.setType(controlTypes.metric);\n        } },\n\n      ___EmotionJSX(MetricsControl, {\n        name: \"metric\",\n        columns: columns,\n        savedMetrics: metrics,\n        multi: false,\n        onFocus: () => {\n          this.setType(controlTypes.metric);\n        },\n        onChange: this.setMetric,\n        value: this.state.metricValue }))))))));\n\n\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFixedOrMetricControl.propTypes = propTypes;\nFixedOrMetricControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(controlTypes, \"controlTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FixedOrMetricControl.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FixedOrMetricControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FixedOrMetricControl.jsx\");reactHotLoader.register(FixedOrMetricControl, \"FixedOrMetricControl\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/controls/FixedOrMetricControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
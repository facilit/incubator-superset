{"ast":null,"code":"import \"core-js/modules/es.promise\";import \"core-js/modules/es.promise.finally\";import \"core-js/modules/web.dom-collections.iterator\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _Promise from \"@babel/runtime-corejs3/core-js-stable/promise\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * regarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * specific language governing permissions and limitations\nunder the License.\nnimport { SupersetClient } from '@superset-ui/connection';\nimport { t } from '@superset-ui/translation';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport rison from 'rison';\n// @ts-ignore\nimport { Panel } from 'react-bootstrap';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport ListView from 'src/components/ListView/ListView';\nimport SubMenu from 'src/components/Menu/SubMenu';\nimport AvatarIcon from 'src/components/AvatarIcon';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport TooltipWrapper from 'src/components/TooltipWrapper';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst PAGE_SIZE = 25;\nclass DatasetList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      datasetCount: 0,\n      datasets: [],\n      filterOperators: {},\n      filters: [],\n      lastFetchDataConfig: null,\n      loading: false,\n      owners: [],\n      databases: [],\n      permissions: [] };\n\n    this.initialSort = [{ id: 'changed_on', desc: true }];\n    this.columns = [\n    {\n      Cell: ({ row: { original: { kind } } }) => {\n        if (kind === 'physical')\n        return ___EmotionJSX(TooltipWrapper, { label: \"physical-dataset\", tooltip: t('Physical Dataset') },\n        ___EmotionJSX(Icon, { name: \"dataset-physical\" }));\n\n        return ___EmotionJSX(TooltipWrapper, { label: \"virtual-dataset\", tooltip: t('Virtual Dataset') },\n        ___EmotionJSX(Icon, { name: \"dataset-virtual\" }));\n\n      },\n      accessor: 'kind_icon' },\n\n    {\n      Cell: ({ row: { original: { table_name: datasetTitle } } }) => datasetTitle,\n      Header: t('Name'),\n      accessor: 'table_name' },\n\n    {\n      Cell: ({ row: { original: { kind } } }) => {var _kind$;return ((_kind$ = kind[0]) === null || _kind$ === void 0 ? void 0 : _kind$.toUpperCase()) + _sliceInstanceProperty(kind).call(kind, 1);},\n      Header: t('Type'),\n      accessor: 'kind' },\n\n    {\n      Header: t('Source'),\n      accessor: 'database_name' },\n\n    {\n      Header: t('Schema'),\n      accessor: 'schema' },\n\n    {\n      Cell: ({ row: { original: { changed_on: changedOn } } }) => ___EmotionJSX(\"span\", { className: \"no-wrap\" }, moment(changedOn).fromNow()),\n      Header: t('Last Modified'),\n      accessor: 'changed_on',\n      sortable: true },\n\n    {\n      Cell: ({ row: { original: { changed_by_name: changedByName, changed_by_url: changedByUrl } } }) => ___EmotionJSX(\"a\", { href: changedByUrl }, changedByName),\n      Header: t('Modified By'),\n      accessor: 'changed_by_fk' },\n\n    {\n      accessor: 'database',\n      hidden: true },\n\n    {\n      Cell: ({ row: { original: { owners, table_name: tableName } } }) => {var _context;\n        if (!owners) {\n          return null;\n        }\n        return _mapInstanceProperty(_context = _sliceInstanceProperty(owners).call(owners,\n        0, 5)).call(_context,\n        owner => ___EmotionJSX(AvatarIcon, { tableName: tableName, firstName: owner.first_name, lastName: owner.last_name, userName: owner.username, iconSize: \"20\" }));\n      },\n      Header: t('Owners'),\n      id: 'owners' },\n\n    {\n      accessor: 'is_sqllab_view',\n      hidden: true },\n\n    {\n      Cell: ({ row: { state, original } }) => {\n        const handleDelete = () => this.handleDatasetDelete(original);\n        const handleEdit = () => this.handleDatasetEdit(original);\n        if (!this.canEdit && !this.canDelete) {\n          return null;\n        }\n        return ___EmotionJSX(\"span\", { className: \"actions \" + (state && state.hover ? '' : 'invisible') },\n        ___EmotionJSX(\"a\", { role: \"button\", tabIndex: 0, className: \"action-button\", href: original.explore_url },\n        ___EmotionJSX(Icon, { name: \"compass\" })),\n\n        this.canDelete && ___EmotionJSX(ConfirmStatusChange, { title: t('Please Confirm'), description: ___EmotionJSX(React.Fragment, null,\n          t('Are you sure you want to delete '), ' ',\n          ___EmotionJSX(\"b\", null, original.table_name), \"?\"),\n          onConfirm: handleDelete },\n        confirmDelete => ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete },\n        ___EmotionJSX(Icon, { name: \"trash\" }))),\n\n\n        this.canEdit && ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleEdit },\n        ___EmotionJSX(Icon, { name: \"pencil\" })));\n\n\n      },\n      Header: t('Actions'),\n      id: 'actions' }];\n\n\n    this.menu = {\n      label: 'Data',\n      name: 'Data',\n      createButton: {\n        name: t('Dataset'),\n        url: '/tablemodelview/add' },\n\n      childs: [\n      {\n        name: 'Datasets',\n        label: t('Datasets'),\n        url: '/tablemodelview/list/?_flt_1_is_sqllab_view=y' },\n\n      { name: 'Databases', label: t('Databases'), url: '/databaseview/list/' },\n      {\n        name: 'Saved Queries',\n        label: t('Saved Queries'),\n        url: '/sqllab/my_queries/' }] };\n\n\n\n    this.hasPerm = perm => {var _context2;\n      if (!this.state.permissions.length) {\n        return false;\n      }\n      return Boolean(_findInstanceProperty(_context2 = this.state.permissions).call(_context2, p => p === perm));\n    };\n    this.handleDatasetEdit = ({ id }) => {\n      window.location.assign(\"/tablemodelview/edit/\" + id);\n    };\n    this.handleDatasetDelete = ({ id, table_name: tableName }) => SupersetClient.delete({\n      endpoint: \"/api/v1/dataset/\" + id }).\n    then(() => {\n      const { lastFetchDataConfig } = this.state;\n      if (lastFetchDataConfig) {\n        this.fetchData(lastFetchDataConfig);\n      }\n      this.props.addSuccessToast(t('Deleted: %s', tableName));\n    }, err => {\n      console.error(err);\n      this.props.addDangerToast(t('There was an issue deleting %s', tableName));\n    });\n    this.handleBulkDatasetDelete = datasets => {\n      SupersetClient.delete({\n        endpoint: \"/api/v1/dataset/?q=\" + rison.encode(_mapInstanceProperty(datasets).call(datasets, ({ id }) => id)) }).\n      then(({ json = {} }) => {\n        const { lastFetchDataConfig } = this.state;\n        if (lastFetchDataConfig) {\n          this.fetchData(lastFetchDataConfig);\n        }\n        this.props.addSuccessToast(json.message);\n      }, err => {\n        console.error(err);\n        this.props.addDangerToast(t('There was an issue deleting the selected datasets'));\n      });\n    };\n    this.fetchData = ({ pageIndex, pageSize, sortBy, filters }) => {\n      // set loading state, cache the last config for fetching data in this component.\n      this.setState({\n        lastFetchDataConfig: {\n          filters,\n          pageIndex,\n          pageSize,\n          sortBy },\n\n        loading: true });\n\n      const filterExps = _mapInstanceProperty(filters).call(filters, ({ id: col, operator: opr, value }) => ({\n        col,\n        opr,\n        value }));\n\n      const queryParams = rison.encode(_Object$assign({\n        order_column: sortBy[0].id,\n        order_direction: sortBy[0].desc ? 'desc' : 'asc',\n        page: pageIndex,\n        page_size: pageSize },\n      filterExps.length ? { filters: filterExps } : {}));\n\n      return SupersetClient.get({\n        endpoint: \"/api/v1/dataset/?q=\" + queryParams }).\n\n      then(({ json = {} }) => {\n        this.setState({ datasets: json.result, datasetCount: json.count });\n      }).\n      catch(() => {\n        this.props.addDangerToast(t('An error occurred while fetching datasets'));\n      }).\n      finally(() => {\n        this.setState({ loading: false });\n      });\n    };\n    this.updateFilters = () => {var _context3, _context4, _context5, _context6, _context7;\n      const { filterOperators, owners, databases } = this.state;\n      const convertFilter = ({ name: label, operator }) => ({ label, value: operator });\n      this.setState({\n        filters: [\n        {\n          Header: 'Database',\n          id: 'database',\n          input: 'select',\n          operators: _mapInstanceProperty(_context3 = filterOperators.database).call(_context3, convertFilter),\n          selects: _mapInstanceProperty(databases).call(databases, ({ text: label, value }) => ({\n            label,\n            value })) },\n\n\n        {\n          Header: 'Schema',\n          id: 'schema',\n          operators: _mapInstanceProperty(_context4 = filterOperators.schema).call(_context4, convertFilter) },\n\n        {\n          Header: 'Table Name',\n          id: 'table_name',\n          operators: _mapInstanceProperty(_context5 = filterOperators.table_name).call(_context5, convertFilter) },\n\n        {\n          Header: 'Owners',\n          id: 'owners',\n          input: 'select',\n          operators: _mapInstanceProperty(_context6 = filterOperators.owners).call(_context6, convertFilter),\n          selects: _mapInstanceProperty(owners).call(owners, ({ text: label, value }) => ({ label, value })) },\n\n        {\n          Header: 'SQL Lab View',\n          id: 'is_sqllab_view',\n          input: 'checkbox',\n          operators: _mapInstanceProperty(_context7 = filterOperators.is_sqllab_view).call(_context7, convertFilter) }] });\n\n\n\n    };\n  }\n  componentDidMount() {\n    _Promise.all([\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/_info\" }),\n\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/related/owners\" }),\n\n    SupersetClient.get({\n      endpoint: \"/api/v1/dataset/related/database\" })]).\n\n    then(([{ json: infoJson = {} }, { json: ownersJson = {} }, { json: databasesJson = {} }]) => {\n      this.setState({\n        filterOperators: infoJson.filters,\n        owners: ownersJson.result,\n        databases: databasesJson.result,\n        permissions: infoJson.permissions },\n      this.updateFilters);\n    }, ([e1, e2]) => {\n      this.props.addDangerToast(t('An error occurred while fetching datasets'));\n      if (e1) {\n        console.error(e1);\n      }\n      if (e2) {\n        console.error(e2);\n      }\n    });\n  }\n  get canEdit() {\n    return this.hasPerm('can_edit');\n  }\n  get canDelete() {\n    return this.hasPerm('can_delete');\n  }\n  get canCreate() {\n    return this.hasPerm('can_add');\n  }\n  render() {\n    const { datasets, datasetCount, loading, filters } = this.state;\n    return ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(SubMenu, _extends({}, this.menu, { canCreate: this.canCreate })),\n    ___EmotionJSX(\"div\", { className: \"container welcome\" },\n    ___EmotionJSX(Panel, null,\n    ___EmotionJSX(Panel.Body, null,\n    ___EmotionJSX(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected datasets?'), onConfirm: this.handleBulkDatasetDelete },\n    confirmDelete => {\n      const bulkActions = [];\n      if (this.canDelete) {\n        bulkActions.push({\n          key: 'delete',\n          name: ___EmotionJSX(React.Fragment, null,\n          ___EmotionJSX(\"i\", { className: \"fa fa-trash\" }), \" Delete\"),\n\n          onSelect: confirmDelete });\n\n      }\n      return ___EmotionJSX(ListView, { className: \"dataset-list-view\", title: 'Datasets', columns: this.columns, data: datasets, count: datasetCount, pageSize: PAGE_SIZE, fetchData: this.fetchData, loading: loading, initialSort: this.initialSort, filters: filters, bulkActions: bulkActions });\n    })))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}DatasetList.propTypes = {\n  addDangerToast: PropTypes.func.isRequired };const _default =\n\nwithToasts(DatasetList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");reactHotLoader.register(DatasetList, \"DatasetList\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/views/datasetList/DatasetList.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
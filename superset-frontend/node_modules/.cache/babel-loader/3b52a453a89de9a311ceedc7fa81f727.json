{"ast":null,"code":"import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *\nhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    * KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint-env browser */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CategoricalColorNamespace } from '@superset-ui/color';\nimport { t } from '@superset-ui/translation';\n\nimport HeaderActionsDropdown from './HeaderActionsDropdown';\nimport EditableTitle from '../../components/EditableTitle';\nimport Button from '../../components/Button';\nimport FaveStar from '../../components/FaveStar';\nimport FilterScopeModal from './filterscope/FilterScopeModal';\nimport PublishedStatus from './PublishedStatus';\nimport UndoRedoKeylisteners from './UndoRedoKeylisteners';\n\nimport { chartPropShape } from '../util/propShapes';\nimport {\nBUILDER_PANE_TYPE,\nUNDO_LIMIT,\nSAVE_TYPE_OVERWRITE,\nDASHBOARD_POSITION_DATA_LIMIT } from\n'../util/constants';\nimport { safeStringify } from '../../utils/safeStringify';\n\nimport {\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD } from\n'../../logger/LogUtils';\nimport PropertiesModal from './PropertiesModal';\nimport setPeriodicRunner from '../util/setPeriodicRunner';\nimport { options as PeriodicRefreshOptions } from './RefreshIntervalModal';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  addSuccessToast: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n  dashboardInfo: PropTypes.object.isRequired,\n  dashboardTitle: PropTypes.string.isRequired,\n  charts: PropTypes.objectOf(chartPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n  expandedSlices: PropTypes.object.isRequired,\n  customCss: PropTypes.string.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  isStarred: PropTypes.bool.isRequired,\n  isPublished: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fetchFaveStar: PropTypes.func.isRequired,\n  fetchCharts: PropTypes.func.isRequired,\n  saveFaveStar: PropTypes.func.isRequired,\n  savePublished: PropTypes.func.isRequired,\n  updateDashboardTitle: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  setEditMode: PropTypes.func.isRequired,\n  showBuilderPane: PropTypes.func.isRequired,\n  builderPaneType: PropTypes.string.isRequired,\n  updateCss: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  maxUndoHistoryExceeded: PropTypes.bool.isRequired,\n\n  // redux\n  onUndo: PropTypes.func.isRequired,\n  onRedo: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n  setMaxUndoHistoryExceeded: PropTypes.func.isRequired,\n  maxUndoHistoryToast: PropTypes.func.isRequired,\n  refreshFrequency: PropTypes.number.isRequired,\n  shouldPersistRefreshFrequency: PropTypes.bool.isRequired,\n  setRefreshFrequency: PropTypes.func.isRequired,\n  dashboardInfoChanged: PropTypes.func.isRequired,\n  dashboardTitleChanged: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  colorNamespace: undefined,\n  colorScheme: undefined };\n\n\nclass Header extends React.PureComponent {\n  static discardChanges() {\n    window.location.reload();\n  }\n\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6, _context7, _context8, _context9, _context10, _context11;\n    super(props);\n    this.state = {\n      didNotifyMaxUndoHistoryToast: false,\n      emphasizeUndo: false,\n      showingPropertiesModal: false };\n\n\n    this.handleChangeText = _bindInstanceProperty(_context = this.handleChangeText).call(_context, this);\n    this.handleCtrlZ = _bindInstanceProperty(_context2 = this.handleCtrlZ).call(_context2, this);\n    this.handleCtrlY = _bindInstanceProperty(_context3 = this.handleCtrlY).call(_context3, this);\n    this.onInsertComponentsButtonClick = _bindInstanceProperty(_context4 = this.onInsertComponentsButtonClick).call(_context4,\n    this);\n\n    this.onColorsButtonClick = _bindInstanceProperty(_context5 = this.onColorsButtonClick).call(_context5, this);\n    this.toggleEditMode = _bindInstanceProperty(_context6 = this.toggleEditMode).call(_context6, this);\n    this.forceRefresh = _bindInstanceProperty(_context7 = this.forceRefresh).call(_context7, this);\n    this.startPeriodicRender = _bindInstanceProperty(_context8 = this.startPeriodicRender).call(_context8, this);\n    this.overwriteDashboard = _bindInstanceProperty(_context9 = this.overwriteDashboard).call(_context9, this);\n    this.showPropertiesModal = _bindInstanceProperty(_context10 = this.showPropertiesModal).call(_context10, this);\n    this.hidePropertiesModal = _bindInstanceProperty(_context11 = this.hidePropertiesModal).call(_context11, this);\n  }\n\n  componentDidMount() {\n    const refreshFrequency = this.props.refreshFrequency;\n    this.startPeriodicRender(refreshFrequency * 1000);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    UNDO_LIMIT - nextProps.undoLength <= 0 &&\n    !this.state.didNotifyMaxUndoHistoryToast)\n    {\n      this.setState(() => ({ didNotifyMaxUndoHistoryToast: true }));\n      this.props.maxUndoHistoryToast();\n    }\n    if (\n    nextProps.undoLength > UNDO_LIMIT &&\n    !this.props.maxUndoHistoryExceeded)\n    {\n      this.props.setMaxUndoHistoryExceeded();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.ctrlYTimeout);\n    clearTimeout(this.ctrlZTimeout);\n  }\n\n  onInsertComponentsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.ADD_COMPONENTS);\n  }\n\n  onColorsButtonClick() {\n    this.props.showBuilderPane(BUILDER_PANE_TYPE.COLORS);\n  }\n\n  handleChangeText(nextText) {\n    const { updateDashboardTitle, onChange } = this.props;\n    if (nextText && this.props.dashboardTitle !== nextText) {\n      updateDashboardTitle(nextText);\n      onChange();\n    }\n  }\n\n  handleCtrlY() {\n    this.props.onRedo();\n    this.setState({ emphasizeRedo: true }, () => {\n      if (this.ctrlYTimeout) clearTimeout(this.ctrlYTimeout);\n      this.ctrlYTimeout = _setTimeout(() => {\n        this.setState({ emphasizeRedo: false });\n      }, 100);\n    });\n  }\n\n  handleCtrlZ() {\n    this.props.onUndo();\n    this.setState({ emphasizeUndo: true }, () => {\n      if (this.ctrlZTimeout) clearTimeout(this.ctrlZTimeout);\n      this.ctrlZTimeout = _setTimeout(() => {\n        this.setState({ emphasizeUndo: false });\n      }, 100);\n    });\n  }\n\n  forceRefresh() {\n    if (!this.props.isLoading) {\n      const chartList = _Object$keys(this.props.charts);\n      this.props.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartList.length });\n\n\n      return this.props.fetchCharts(\n      chartList,\n      true,\n      0,\n      this.props.dashboardInfo.id);\n\n    }\n    return false;\n  }\n\n  startPeriodicRender(interval) {\n    let intervalMessage;\n    if (interval) {\n      const predefinedValue = _findInstanceProperty(PeriodicRefreshOptions).call(PeriodicRefreshOptions,\n      option => option.value === interval / 1000);\n\n      if (predefinedValue) {\n        intervalMessage = predefinedValue.label;\n      } else {\n        intervalMessage = moment.duration(interval, 'millisecond').humanize();\n      }\n    }\n\n    const periodicRender = () => {var _context12, _context13;\n      const { fetchCharts, logEvent, charts, dashboardInfo } = this.props;\n      const { metadata } = dashboardInfo;\n      const immune = metadata.timed_refresh_immune_slices || [];\n      const affectedCharts = _mapInstanceProperty(_context12 = _filterInstanceProperty(_context13 = _Object$values(charts)).call(_context13,\n      chart => _indexOfInstanceProperty(immune).call(immune, chart.id) === -1)).call(_context12,\n      chart => chart.id);\n\n      logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n        interval,\n        chartCount: affectedCharts.length });\n\n      this.props.addWarningToast(\n      t(\"This dashboard is currently force refreshing; the next force refresh will be in %s.\",\n\n      intervalMessage));\n\n\n\n      return fetchCharts(\n      affectedCharts,\n      true,\n      interval * 0.2,\n      dashboardInfo.id);\n\n    };\n\n    this.refreshTimer = setPeriodicRunner({\n      interval,\n      periodicRender,\n      refreshTimer: this.refreshTimer });\n\n  }\n\n  toggleEditMode() {\n    this.props.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !this.props.editMode });\n\n    this.props.setEditMode(!this.props.editMode);\n  }\n\n  overwriteDashboard() {\n    const {\n      dashboardTitle,\n      layout: positions,\n      expandedSlices,\n      css,\n      colorNamespace,\n      colorScheme,\n      dashboardInfo,\n      refreshFrequency: currentRefreshFrequency,\n      shouldPersistRefreshFrequency } =\n    this.props;\n\n    const scale = CategoricalColorNamespace.getScale(\n    colorScheme,\n    colorNamespace);\n\n    const labelColors = colorScheme ? scale.getColorMap() : {};\n    // check refresh frequency is for current session or persist\n    const refreshFrequency = shouldPersistRefreshFrequency ?\n    currentRefreshFrequency :\n    dashboardInfo.metadata.refresh_frequency; // eslint-disable camelcase\n\n    const data = {\n      positions,\n      expanded_slices: expandedSlices,\n      css,\n      color_namespace: colorNamespace,\n      color_scheme: colorScheme,\n      label_colors: labelColors,\n      dashboard_title: dashboardTitle,\n      refresh_frequency: refreshFrequency };\n\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(positions).length;\n    const limit =\n    dashboardInfo.common.conf.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT ||\n    DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      this.props.addDangerToast(\n      t(\n      'Your dashboard is too large. Please reduce the size before save it.'));\n\n\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        this.props.addWarningToast('Your dashboard is near the size limit.');\n      }\n\n      this.props.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }\n\n  showPropertiesModal() {\n    this.setState({ showingPropertiesModal: true });\n  }\n\n  hidePropertiesModal() {\n    this.setState({ showingPropertiesModal: false });\n  }\n\n  render() {\n    const {\n      dashboardTitle,\n      layout,\n      expandedSlices,\n      customCss,\n      colorNamespace,\n      colorScheme,\n      onUndo,\n      onRedo,\n      undoLength,\n      redoLength,\n      onChange,\n      onSave,\n      updateCss,\n      editMode,\n      isPublished,\n      builderPaneType,\n      dashboardInfo,\n      hasUnsavedChanges,\n      isLoading,\n      refreshFrequency,\n      shouldPersistRefreshFrequency,\n      setRefreshFrequency } =\n    this.props;\n\n    const userCanEdit = dashboardInfo.dash_edit_perm;\n    const userCanSaveAs = dashboardInfo.dash_save_perm;\n    const refreshLimit =\n    dashboardInfo.common.conf.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n    const refreshWarning =\n    dashboardInfo.common.conf.\n    SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n    const popButton = hasUnsavedChanges;\n\n    return (\n      ___EmotionJSX(\"div\", { className: \"dashboard-header\" },\n      ___EmotionJSX(\"div\", { className: \"dashboard-component-header header-large\" },\n      ___EmotionJSX(EditableTitle, {\n        title: dashboardTitle,\n        canEdit: userCanEdit && editMode,\n        onSaveTitle: this.handleChangeText,\n        showTooltip: false }),\n\n      ___EmotionJSX(\"span\", { className: \"publish\" },\n      ___EmotionJSX(PublishedStatus, {\n        dashboardId: dashboardInfo.id,\n        isPublished: isPublished,\n        savePublished: this.props.savePublished,\n        canEdit: userCanEdit,\n        canSave: userCanSaveAs })),\n\n\n      dashboardInfo.userId &&\n      ___EmotionJSX(\"span\", { className: \"favstar\" },\n      ___EmotionJSX(FaveStar, {\n        itemId: dashboardInfo.id,\n        fetchFaveStar: this.props.fetchFaveStar,\n        saveFaveStar: this.props.saveFaveStar,\n        isStarred: this.props.isStarred }))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"button-container\" },\n      userCanSaveAs &&\n      ___EmotionJSX(\"div\", { className: \"button-container\" },\n      editMode &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: onUndo,\n        disabled: undoLength < 1,\n        bsStyle: this.state.emphasizeUndo ? 'primary' : undefined },\n\n      ___EmotionJSX(\"div\", { title: \"Undo\", className: \"undo-action fa fa-reply\" })),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: onRedo,\n        disabled: redoLength < 1,\n        bsStyle: this.state.emphasizeRedo ? 'primary' : undefined },\n\n      ___EmotionJSX(\"div\", { title: \"Redo\", className: \"redo-action fa fa-share\" })),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        active: builderPaneType === BUILDER_PANE_TYPE.ADD_COMPONENTS,\n        bsSize: \"small\",\n        onClick: this.onInsertComponentsButtonClick },\n\n      t('Components')),\n\n\n\n      editMode &&\n      ___EmotionJSX(Button, {\n        active: builderPaneType === BUILDER_PANE_TYPE.COLORS,\n        bsSize: \"small\",\n        onClick: this.onColorsButtonClick },\n\n      t('Colors')),\n\n\n\n      editMode &&\n      ___EmotionJSX(FilterScopeModal, {\n        triggerNode: ___EmotionJSX(Button, { bsSize: \"small\" }, t('Filters')) }),\n\n\n\n      editMode && hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        bsStyle: popButton ? 'primary' : undefined,\n        onClick: this.overwriteDashboard },\n\n      t('Save changes')),\n\n\n\n      editMode && !hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: this.toggleEditMode,\n        bsStyle: undefined,\n        disabled: !userCanEdit },\n\n      t('Switch to view mode')),\n\n\n\n      editMode &&\n      ___EmotionJSX(UndoRedoKeylisteners, {\n        onUndo: this.handleCtrlZ,\n        onRedo: this.handleCtrlY })),\n\n\n\n\n\n      !editMode && !hasUnsavedChanges &&\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: this.toggleEditMode,\n        bsStyle: popButton ? 'primary' : undefined,\n        disabled: !userCanEdit },\n\n      t('Edit dashboard')),\n\n\n\n      this.state.showingPropertiesModal &&\n      ___EmotionJSX(PropertiesModal, {\n        dashboardId: dashboardInfo.id,\n        show: this.state.showingPropertiesModal,\n        onHide: this.hidePropertiesModal,\n        onDashboardSave: updates => {\n          this.props.dashboardInfoChanged({\n            slug: updates.slug,\n            metadata: JSON.parse(updates.jsonMetadata) });\n\n          this.props.dashboardTitleChanged(updates.title);\n          if (updates.slug) {\n            history.pushState(\n            { event: 'dashboard_properties_changed' },\n            '', \"/superset/dashboard/\" +\n            updates.slug + \"/\");\n\n          }\n        } }),\n\n\n\n      ___EmotionJSX(HeaderActionsDropdown, {\n        addSuccessToast: this.props.addSuccessToast,\n        addDangerToast: this.props.addDangerToast,\n        dashboardId: dashboardInfo.id,\n        dashboardTitle: dashboardTitle,\n        dashboardInfo: dashboardInfo,\n        layout: layout,\n        expandedSlices: expandedSlices,\n        customCss: customCss,\n        colorNamespace: colorNamespace,\n        colorScheme: colorScheme,\n        onSave: onSave,\n        onChange: onChange,\n        forceRefreshAllCharts: this.forceRefresh,\n        startPeriodicRender: this.startPeriodicRender,\n        refreshFrequency: refreshFrequency,\n        shouldPersistRefreshFrequency: shouldPersistRefreshFrequency,\n        setRefreshFrequency: setRefreshFrequency,\n        updateCss: updateCss,\n        editMode: editMode,\n        hasUnsavedChanges: hasUnsavedChanges,\n        userCanEdit: userCanEdit,\n        userCanSave: userCanSaveAs,\n        isLoading: isLoading,\n        showPropertiesModal: this.showPropertiesModal,\n        refreshLimit: refreshLimit,\n        refreshWarning: refreshWarning }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;const _default =\n\nHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(Header, \"Header\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/dashboard/components/Header.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
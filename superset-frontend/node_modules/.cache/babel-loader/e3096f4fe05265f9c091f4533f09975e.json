{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * distributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             * KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { t } from '@superset-ui/translation';\n\nimport ExploreChartPanel from './ExploreChartPanel';\nimport ControlPanelsContainer from './ControlPanelsContainer';\nimport SaveModal from './SaveModal';\nimport QueryAndSaveBtns from './QueryAndSaveBtns';\nimport { getExploreLongUrl } from '../exploreUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\nimport { getFormDataFromControls } from '../controlUtils';\nimport { chartPropShape } from '../../dashboard/util/propShapes';\nimport * as exploreActions from '../actions/exploreActions';\nimport * as saveModalActions from '../actions/saveModalActions';\nimport * as chartActions from '../../chart/chartAction';\nimport { fetchDatasourceMetadata } from '../../dashboard/actions/datasources';\nimport * as logActions from '../../logger/actions/';\nimport {\nLOG_ACTIONS_MOUNT_EXPLORER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS } from\n'../../logger/LogUtils';\nimport Hotkeys from '../../components/Hotkeys';\n\n// Prolly need to move this to a global context\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";const keymap = {\n  RUN: 'ctrl + r, ctrl + enter',\n  SAVE: 'ctrl + s' };\n\n\nconst getHotKeys = () => {var _context;return (\n    _mapInstanceProperty(_context = _Object$keys(keymap)).call(_context, k => ({\n      name: k,\n      descr: keymap[k],\n      key: k })));};\n\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string };\n\n\nclass ExploreViewContainer extends React.Component {\n  constructor(props) {var _context2, _context3, _context4, _context5, _context6, _context7, _context8;\n    super(props);\n\n    this.state = {\n      height: this.getHeight(),\n      width: this.getWidth(),\n      showModal: false,\n      chartIsStale: false,\n      refreshOverlayVisible: false };\n\n\n    this.addHistory = _bindInstanceProperty(_context2 = this.addHistory).call(_context2, this);\n    this.handleResize = _bindInstanceProperty(_context3 = this.handleResize).call(_context3, this);\n    this.handlePopstate = _bindInstanceProperty(_context4 = this.handlePopstate).call(_context4, this);\n    this.onStop = _bindInstanceProperty(_context5 = this.onStop).call(_context5, this);\n    this.onQuery = _bindInstanceProperty(_context6 = this.onQuery).call(_context6, this);\n    this.toggleModal = _bindInstanceProperty(_context7 = this.toggleModal).call(_context7, this);\n    this.handleKeydown = _bindInstanceProperty(_context8 = this.handleKeydown).call(_context8, this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('popstate', this.handlePopstate);\n    document.addEventListener('keydown', this.handleKeydown);\n    this.addHistory({ isReplace: true });\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n\n    // Trigger the chart if there are no errors\n    const { chart } = this.props;\n    if (!this.hasErrors()) {\n      this.props.actions.triggerQuery(true, this.props.chart.id);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n    nextProps.controls.viz_type.value !== this.props.controls.viz_type.value)\n    {\n      this.props.actions.resetControls();\n    }\n    if (\n    nextProps.controls.datasource && (\n    this.props.controls.datasource == null ||\n    nextProps.controls.datasource.value !==\n    this.props.controls.datasource.value))\n    {\n      fetchDatasourceMetadata(nextProps.form_data.datasource, true);\n    }\n\n    const changedControlKeys = this.findChangedControlKeys(\n    this.props.controls,\n    nextProps.controls);\n\n    if (this.hasDisplayControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.updateQueryFormData(\n      getFormDataFromControls(nextProps.controls),\n      this.props.chart.id);\n\n      this.props.actions.renderTriggered(\n      new Date().getTime(),\n      this.props.chart.id);\n\n    }\n    if (this.hasQueryControlChanged(changedControlKeys, nextProps.controls)) {\n      this.props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n      this.setState({ chartIsStale: true, refreshOverlayVisible: true });\n    }\n  }\n\n  /* eslint no-unused-vars: 0 */\n  componentDidUpdate(prevProps, prevState) {\n    const changedControlKeys = this.findChangedControlKeys(\n    prevProps.controls,\n    this.props.controls);\n\n    if (\n    this.hasDisplayControlChanged(changedControlKeys, this.props.controls))\n    {\n      this.addHistory({});\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('popstate', this.handlePopstate);\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  onQuery() {\n    // remove alerts when query\n    this.props.actions.removeControlPanelAlert();\n    this.props.actions.triggerQuery(true, this.props.chart.id);\n\n    this.setState({ chartIsStale: false, refreshOverlayVisible: false });\n    this.addHistory({});\n  }\n\n  onStop() {\n    if (this.props.chart && this.props.chart.queryController) {\n      this.props.chart.queryController.abort();\n    }\n  }\n\n  getWidth() {\n    return window.innerWidth + \"px\";\n  }\n\n  getHeight() {\n    if (this.props.forcedHeight) {\n      return this.props.forcedHeight + 'px';\n    }\n    const navHeight = this.props.standalone ? 0 : 90;\n    return window.innerHeight - navHeight + \"px\";\n  }\n\n  handleKeydown(event) {\n    const controlOrCommand = event.ctrlKey || event.metaKey;\n    if (controlOrCommand) {\n      const isEnter = event.key === 'Enter' || event.keyCode === 13;\n      const isS = event.key === 's' || event.keyCode === 83;\n      if (isEnter) {\n        this.onQuery();\n      } else if (isS) {\n        if (_sliceInstanceProperty(this.props)) {\n          this.props.actions.\n          saveSlice(this.props.form_data, {\n            action: 'overwrite',\n            slice_id: _sliceInstanceProperty(this.props).slice_id,\n            slice_name: _sliceInstanceProperty(this.props).slice_name,\n            add_to_dash: 'noSave',\n            goto_dash: false }).\n\n          then(({ data }) => {\n            window.location = _sliceInstanceProperty(data).slice_url;\n          });\n        }\n      }\n    }\n  }\n\n  findChangedControlKeys(prevControls, currentControls) {var _context9;\n    return _filterInstanceProperty(_context9 = _Object$keys(currentControls)).call(_context9,\n    (key) =>\n    typeof prevControls[key] !== 'undefined' &&\n    !areObjectsEqual(currentControls[key].value, prevControls[key].value));\n\n  }\n\n  hasDisplayControlChanged(changedControlKeys, currentControls) {\n    return _someInstanceProperty(changedControlKeys).call(changedControlKeys, key => currentControls[key].renderTrigger);\n  }\n\n  hasQueryControlChanged(changedControlKeys, currentControls) {\n    return _someInstanceProperty(changedControlKeys).call(changedControlKeys,\n    (key) =>\n    !currentControls[key].renderTrigger &&\n    !currentControls[key].dontRefreshOnChange);\n\n  }\n\n  addHistory({ isReplace = false, title }) {\n    const payload = _Object$assign({}, this.props.form_data);\n    const longUrl = getExploreLongUrl(this.props.form_data, null, false);\n    try {\n      if (isReplace) {\n        history.replaceState(payload, title, longUrl);\n      } else {\n        history.pushState(payload, title, longUrl);\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(\n      'Failed at altering browser history',\n      payload,\n      title,\n      longUrl);\n\n    }\n\n    // it seems some browsers don't support pushState title attribute\n    if (title) {\n      document.title = title;\n    }\n  }\n\n  handleResize() {\n    clearTimeout(this.resizeTimer);\n    this.resizeTimer = _setTimeout(() => {\n      this.setState({ height: this.getHeight(), width: this.getWidth() });\n    }, 250);\n  }\n\n  handlePopstate() {\n    const formData = history.state;\n    if (formData && _Object$keys(formData).length) {\n      this.props.actions.setExploreControls(formData);\n      this.props.actions.postChartFormData(\n      formData,\n      false,\n      this.props.timeout,\n      this.props.chart.id);\n\n    }\n  }\n\n  toggleModal() {\n    this.setState({ showModal: !this.state.showModal });\n  }\n  hasErrors() {var _context10;\n    const ctrls = this.props.controls;\n    return _someInstanceProperty(_context10 = _Object$keys(ctrls)).call(_context10,\n    k => ctrls[k].validationErrors && ctrls[k].validationErrors.length > 0);\n\n  }\n  renderErrorMessage() {\n    // Returns an error message as a node if any errors are in the store\n    const errors = [];\n    const ctrls = this.props.controls;\n    for (const controlName in this.props.controls) {\n      const control = this.props.controls[controlName];\n      if (control.validationErrors && control.validationErrors.length > 0) {\n        errors.push(\n        ___EmotionJSX(\"div\", { key: controlName },\n        t('Control labeled '),\n        ___EmotionJSX(\"strong\", null, \" \\\"\" + control.label + \"\\\" \"),\n        control.validationErrors.join('. ')));\n\n\n      }\n    }\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = ___EmotionJSX(\"div\", { style: { textAlign: 'left' } }, errors);\n    }\n    return errorMessage;\n  }\n  renderChartContainer() {\n    return (\n      ___EmotionJSX(ExploreChartPanel, _extends({\n        width: this.state.width,\n        height: this.state.height },\n      this.props, {\n        errorMessage: this.renderErrorMessage(),\n        refreshOverlayVisible: this.state.refreshOverlayVisible,\n        addHistory: this.addHistory,\n        onQuery: this.onQuery })));\n\n\n  }\n\n  render() {\n    if (this.props.standalone) {\n      return this.renderChartContainer();\n    }\n    return (\n      ___EmotionJSX(\"div\", {\n        id: \"explore-container\",\n        className: \"container-fluid\",\n        style: { height: this.state.height, overflow: 'hidden' } },\n\n      this.state.showModal &&\n      ___EmotionJSX(SaveModal, {\n        onHide: this.toggleModal,\n        actions: this.props.actions,\n        form_data: this.props.form_data,\n        sliceName: this.props.sliceName }),\n\n\n      ___EmotionJSX(\"div\", { className: \"row\" },\n      ___EmotionJSX(\"div\", { className: \"col-sm-4\" },\n      ___EmotionJSX(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center' } },\n\n\n      ___EmotionJSX(QueryAndSaveBtns, {\n        canAdd: !!(this.props.can_add || this.props.can_overwrite),\n        onQuery: this.onQuery,\n        onSave: this.toggleModal,\n        onStop: this.onStop,\n        loading: this.props.chart.chartStatus === 'loading',\n        chartIsStale: this.state.chartIsStale,\n        errorMessage: this.renderErrorMessage(),\n        datasourceType: this.props.datasource_type }),\n\n      ___EmotionJSX(\"div\", { className: \"m-l-5 text-muted\" },\n      ___EmotionJSX(Hotkeys, {\n        header: \"Keyboard shortcuts\",\n        hotkeys: getHotKeys(),\n        placement: \"right\" }))),\n\n\n\n      ___EmotionJSX(\"br\", null),\n      ___EmotionJSX(ControlPanelsContainer, {\n        actions: this.props.actions,\n        form_data: this.props.form_data,\n        controls: this.props.controls,\n        datasource_type: this.props.datasource_type,\n        isDatasourceMetaLoading: this.props.isDatasourceMetaLoading })),\n\n\n      ___EmotionJSX(\"div\", { className: \"col-sm-8\" }, this.renderChartContainer()))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const { explore, charts, impressionId } = state;\n  const form_data = getFormDataFromControls(explore.controls);\n  const chartKey = _Object$keys(charts)[0];\n  const chart = charts[chartKey];\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource: explore.datasource,\n    datasource_type: explore.datasource.type,\n    datasourceId: explore.datasource_id,\n    controls: explore.controls,\n    can_overwrite: !!explore.can_overwrite,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    column_formats: explore.datasource ?\n    explore.datasource.column_formats :\n    null,\n    containerId: _sliceInstanceProperty(explore) ? \"slice-container-\" +\n    _sliceInstanceProperty(explore).slice_id :\n    'slice-container',\n    isStarred: explore.isStarred,\n    slice: _sliceInstanceProperty(explore),\n    sliceName: explore.sliceName,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: form_data.datasource_name,\n    vizType: form_data.viz_type,\n    standalone: explore.standalone,\n    forcedHeight: explore.forced_height,\n    chart,\n    timeout: explore.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    impressionId };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = _Object$assign({},\n  exploreActions, {},\n  saveModalActions, {},\n  chartActions, {},\n  logActions);\n\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}\n\nexport { ExploreViewContainer };const _default =\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nExploreViewContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(keymap, \"keymap\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(getHotKeys, \"getHotKeys\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(ExploreViewContainer, \"ExploreViewContainer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/components/ExploreViewContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";import _Object$assign from \"@babel/runtime-corejs3/core-js-stable/object/assign\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\nn/* eslint camelcase: 0 */\nimport { getControlsState } from '../store';\nimport { getControlState, getFormDataFromControls } from '../controlUtils';\nimport * as actions from '../actions/exploreActions';\n\nexport default function exploreReducer(state = {}, action) {\n  const actionHandlers = {\n    [actions.TOGGLE_FAVE_STAR]() {\n      return _Object$assign({},\n      state, {\n        isStarred: action.isStarred });\n\n    },\n    [actions.POST_DATASOURCE_STARTED]() {\n      return _Object$assign({},\n      state, {\n        isDatasourceMetaLoading: true });\n\n    },\n    [actions.SET_DATASOURCE]() {\n      const newFormData = _Object$assign({}, state.form_data);\n      if (action.datasource.type !== state.datasource.type) {\n        if (action.datasource.type === 'table') {\n          newFormData.granularity_sqla = action.datasource.granularity_sqla;\n          newFormData.time_grain_sqla = action.datasource.time_grain_sqla;\n          delete newFormData.druid_time_origin;\n          delete newFormData.granularity;\n        } else {\n          newFormData.druid_time_origin = action.datasource.druid_time_origin;\n          newFormData.granularity = action.datasource.granularity;\n          delete newFormData.granularity_sqla;\n          delete newFormData.time_grain_sqla;\n        }\n      }\n      const newState = _Object$assign({},\n      state, {\n        datasource: action.datasource,\n        datasource_id: action.datasource.id,\n        datasource_type: action.datasource.type });\n\n      return _Object$assign({},\n      newState, {\n        form_data: newFormData,\n        controls: getControlsState(newState, newFormData) });\n\n    },\n    [actions.FETCH_DATASOURCES_STARTED]() {\n      return _Object$assign({},\n      state, {\n        isDatasourcesLoading: true });\n\n    },\n    [actions.FETCH_DATASOURCES_SUCCEEDED]() {\n      return _Object$assign({},\n      state, {\n        isDatasourcesLoading: false });\n\n    },\n    [actions.FETCH_DATASOURCES_FAILED]() {\n      return _Object$assign({},\n      state, {\n        isDatasourcesLoading: false,\n        controlPanelAlert: action.error });\n\n    },\n    [actions.SET_DATASOURCES]() {\n      return _Object$assign({},\n      state, {\n        datasources: action.datasources });\n\n    },\n    [actions.REMOVE_CONTROL_PANEL_ALERT]() {\n      return _Object$assign({},\n      state, {\n        controlPanelAlert: null });\n\n    },\n    [actions.SET_FIELD_VALUE]() {\n      const new_form_data = state.form_data;\n      new_form_data[action.controlName] = action.value;\n\n      // These errors are reported from the Control components\n      let errors = action.validationErrors || [];\n      const vizType = new_form_data.viz_type;\n      const control = _Object$assign({},\n      getControlState(action.controlName, vizType, state, action.value));\n\n\n      // These errors are based on control config `validators`\n      errors = _concatInstanceProperty(errors).call(errors, control.validationErrors || []);\n      const hasErrors = errors && errors.length > 0;\n      return _Object$assign({},\n      state, {\n        form_data: new_form_data,\n        triggerRender: control.renderTrigger && !hasErrors,\n        controls: _Object$assign({},\n        state.controls, {\n          [action.controlName]: _Object$assign({},\n          control, {\n            validationErrors: errors }) }) });\n\n\n\n    },\n    [actions.SET_EXPLORE_CONTROLS]() {\n      return _Object$assign({},\n      state, {\n        controls: getControlsState(state, action.formData) });\n\n    },\n    [actions.UPDATE_CHART_TITLE]() {\n      return _Object$assign({},\n      state, {\n        sliceName: action.sliceName });\n\n    },\n    [actions.RESET_FIELDS]() {\n      return _Object$assign({},\n      state, {\n        controls: getControlsState(\n        state,\n        getFormDataFromControls(state.controls)) });\n\n\n    },\n    [actions.CREATE_NEW_SLICE]() {\n      return _Object$assign({},\n      state, {\n        slice: _sliceInstanceProperty(action),\n        controls: getControlsState(state, action.form_data),\n        can_add: action.can_add,\n        can_download: action.can_download,\n        can_overwrite: action.can_overwrite });\n\n    },\n    [actions.SLICE_UPDATED]() {\n      return _Object$assign({},\n      state, {\n        slice: _Object$assign({}, _sliceInstanceProperty(\n        state), {}, _sliceInstanceProperty(\n        action)) });\n\n\n    } };\n\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(exploreReducer, \"exploreReducer\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/reducers/exploreReducer.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/home/tiago/git-facilit/incubator-superset/superset-frontend/src/explore/reducers/exploreReducer.js"],"names":["getControlsState","getControlState","getFormDataFromControls","actions","exploreReducer","state","action","actionHandlers","TOGGLE_FAVE_STAR","isStarred","POST_DATASOURCE_STARTED","isDatasourceMetaLoading","SET_DATASOURCE","newFormData","form_data","datasource","type","granularity_sqla","time_grain_sqla","druid_time_origin","granularity","newState","datasource_id","id","datasource_type","controls","FETCH_DATASOURCES_STARTED","isDatasourcesLoading","FETCH_DATASOURCES_SUCCEEDED","FETCH_DATASOURCES_FAILED","controlPanelAlert","error","SET_DATASOURCES","datasources","REMOVE_CONTROL_PANEL_ALERT","SET_FIELD_VALUE","new_form_data","controlName","value","errors","validationErrors","vizType","viz_type","control","hasErrors","length","triggerRender","renderTrigger","SET_EXPLORE_CONTROLS","formData","UPDATE_CHART_TITLE","sliceName","RESET_FIELDS","CREATE_NEW_SLICE","slice","can_add","can_download","can_overwrite","SLICE_UPDATED"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { getControlsState } from '../store';\nimport { getControlState, getFormDataFromControls } from '../controlUtils';\nimport * as actions from '../actions/exploreActions';\n\nexport default function exploreReducer(state = {}, action) {\n  const actionHandlers = {\n    [actions.TOGGLE_FAVE_STAR]() {\n      return {\n        ...state,\n        isStarred: action.isStarred,\n      };\n    },\n    [actions.POST_DATASOURCE_STARTED]() {\n      return {\n        ...state,\n        isDatasourceMetaLoading: true,\n      };\n    },\n    [actions.SET_DATASOURCE]() {\n      const newFormData = { ...state.form_data };\n      if (action.datasource.type !== state.datasource.type) {\n        if (action.datasource.type === 'table') {\n          newFormData.granularity_sqla = action.datasource.granularity_sqla;\n          newFormData.time_grain_sqla = action.datasource.time_grain_sqla;\n          delete newFormData.druid_time_origin;\n          delete newFormData.granularity;\n        } else {\n          newFormData.druid_time_origin = action.datasource.druid_time_origin;\n          newFormData.granularity = action.datasource.granularity;\n          delete newFormData.granularity_sqla;\n          delete newFormData.time_grain_sqla;\n        }\n      }\n      const newState = {\n        ...state,\n        datasource: action.datasource,\n        datasource_id: action.datasource.id,\n        datasource_type: action.datasource.type,\n      };\n      return {\n        ...newState,\n        form_data: newFormData,\n        controls: getControlsState(newState, newFormData),\n      };\n    },\n    [actions.FETCH_DATASOURCES_STARTED]() {\n      return {\n        ...state,\n        isDatasourcesLoading: true,\n      };\n    },\n    [actions.FETCH_DATASOURCES_SUCCEEDED]() {\n      return {\n        ...state,\n        isDatasourcesLoading: false,\n      };\n    },\n    [actions.FETCH_DATASOURCES_FAILED]() {\n      return {\n        ...state,\n        isDatasourcesLoading: false,\n        controlPanelAlert: action.error,\n      };\n    },\n    [actions.SET_DATASOURCES]() {\n      return {\n        ...state,\n        datasources: action.datasources,\n      };\n    },\n    [actions.REMOVE_CONTROL_PANEL_ALERT]() {\n      return {\n        ...state,\n        controlPanelAlert: null,\n      };\n    },\n    [actions.SET_FIELD_VALUE]() {\n      const new_form_data = state.form_data;\n      new_form_data[action.controlName] = action.value;\n\n      // These errors are reported from the Control components\n      let errors = action.validationErrors || [];\n      const vizType = new_form_data.viz_type;\n      const control = {\n        ...getControlState(action.controlName, vizType, state, action.value),\n      };\n\n      // These errors are based on control config `validators`\n      errors = errors.concat(control.validationErrors || []);\n      const hasErrors = errors && errors.length > 0;\n      return {\n        ...state,\n        form_data: new_form_data,\n        triggerRender: control.renderTrigger && !hasErrors,\n        controls: {\n          ...state.controls,\n          [action.controlName]: {\n            ...control,\n            validationErrors: errors,\n          },\n        },\n      };\n    },\n    [actions.SET_EXPLORE_CONTROLS]() {\n      return {\n        ...state,\n        controls: getControlsState(state, action.formData),\n      };\n    },\n    [actions.UPDATE_CHART_TITLE]() {\n      return {\n        ...state,\n        sliceName: action.sliceName,\n      };\n    },\n    [actions.RESET_FIELDS]() {\n      return {\n        ...state,\n        controls: getControlsState(\n          state,\n          getFormDataFromControls(state.controls),\n        ),\n      };\n    },\n    [actions.CREATE_NEW_SLICE]() {\n      return {\n        ...state,\n        slice: action.slice,\n        controls: getControlsState(state, action.form_data),\n        can_add: action.can_add,\n        can_download: action.can_download,\n        can_overwrite: action.can_overwrite,\n      };\n    },\n    [actions.SLICE_UPDATED]() {\n      return {\n        ...state,\n        slice: {\n          ...state.slice,\n          ...action.slice,\n        },\n      };\n    },\n  };\n  if (action.type in actionHandlers) {\n    return actionHandlers[action.type]();\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\nicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\nicense\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nnnless required by applicable law or agreed to in writing,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   * software distributed under the License is distributed on an\nneither express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   */\nimport moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport Dialog from 'react-bootstrap-dialog';\nimport { t } from '@superset-ui/translation';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nimport shortid from 'shortid';\nimport { exploreChart } from '../../explore/exploreUtils';\nimport * as actions from '../actions/sqlLab';\nimport Button from '../../components/Button';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  query: PropTypes.object,\n  errorMessage: PropTypes.string,\n  timeout: PropTypes.number,\n  database: PropTypes.object.isRequired };\n\nconst defaultProps = {\n  query: {} };\n\n\nclass ExploreResultsButton extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.visualize = _bindInstanceProperty(_context = this.visualize).call(_context, this);\n    this.onClick = _bindInstanceProperty(_context2 = this.onClick).call(_context2, this);\n    this.getInvalidColumns = _bindInstanceProperty(_context3 = this.getInvalidColumns).call(_context3, this);\n    this.renderInvalidColumnMessage = _bindInstanceProperty(_context4 = this.renderInvalidColumnMessage).call(_context4,\n    this);\n\n  }\n  onClick() {\n    const timeout = this.props.timeout;\n    const msg = this.renderInvalidColumnMessage();\n    if (Math.round(this.getQueryDuration()) > timeout) {\n      this.dialog.show({\n        title: t('Explore'),\n        body: this.renderTimeoutWarning(),\n        actions: [\n        Dialog.CancelAction(),\n        Dialog.OKAction(() => {\n          this.visualize();\n        })],\n\n        bsSize: 'large',\n        onHide: dialog => {\n          dialog.hide();\n        } });\n\n    } else if (msg) {\n      this.dialog.show({\n        title: t('Explore'),\n        body: msg,\n        actions: [Dialog.DefaultAction('Ok', () => {}, 'btn-primary')],\n        bsSize: 'large',\n        bsStyle: 'warning',\n        onHide: dialog => {\n          dialog.hide();\n        } });\n\n    } else {\n      this.visualize();\n    }\n  }\n  getColumns() {\n    const props = this.props;\n    if (\n    props.query &&\n    props.query.results &&\n    props.query.results.selected_columns)\n    {\n      return props.query.results.selected_columns;\n    }\n    return [];\n  }\n  getQueryDuration() {\n    return moment.\n    duration(this.props.query.endDttm - this.props.query.startDttm).\n    asSeconds();\n  }\n  getInvalidColumns() {var _context5, _context6;\n    const re1 = /^[A-Za-z_]\\w*$/; // starts with char or _, then only alphanum\n    const re2 = /__\\d+$/; // does not finish with __ and then a number which screams dup col name\n    const re3 = /^__/; // is not a reserved column name e.g. __timestamp\n\n    return _filterInstanceProperty(_context5 = _mapInstanceProperty(_context6 = this.props.query.results.selected_columns).call(_context6,\n    col => col.name)).call(_context5,\n    col => !re1.test(col) || re2.test(col) || re3.test(col));\n  }\n  datasourceName() {\n    const { query } = this.props;\n    const uniqueId = shortid.generate();\n    let datasourceName = uniqueId;\n    if (query) {\n      datasourceName = query.user ? query.user + \"-\" : '';\n      datasourceName += query.tab + \"-\" + uniqueId;\n    }\n    return datasourceName;\n  }\n  buildVizOptions() {\n    const { schema, sql, dbId, templateParams } = this.props.query;\n    return {\n      dbId,\n      schema,\n      sql,\n      templateParams,\n      datasourceName: this.datasourceName(),\n      columns: this.getColumns() };\n\n  }\n  visualize() {\n    this.props.actions.\n    createDatasource(this.buildVizOptions()).\n    then(data => {\n      const columns = this.getColumns();\n      const formData = {\n        datasource: data.table_id + \"__table\",\n        metrics: [],\n        groupby: [],\n        time_range: 'No filter',\n        viz_type: 'table',\n        all_columns: _mapInstanceProperty(columns).call(columns, c => c.name),\n        row_limit: 1000 };\n\n\n      this.props.actions.addInfoToast(\n      t('Creating a data source and creating a new tab'));\n\n\n      // open new window for data visualization\n      exploreChart(formData);\n    }).\n    catch(() => {\n      this.props.actions.addDangerToast(\n      this.props.errorMessage || t('An error occurred'));\n\n    });\n  }\n  renderTimeoutWarning() {\n    return (\n      ___EmotionJSX(Alert, { bsStyle: \"warning\" },\n      t(\n      'This query took %s seconds to run, ',\n      Math.round(this.getQueryDuration())) +\n\n      t(\n      'and the explore view times out at %s seconds ',\n      this.props.timeout) +\n\n      t(\n      'following this flow will most likely lead to your query timing out. ') +\n\n      t(\n      'We recommend your summarize your data further before following that flow. ') +\n\n      t('If activated you can use the '),\n      ___EmotionJSX(\"strong\", null, \"CREATE TABLE AS \"),\n      t('feature to store a summarized data set that you can then explore.')));\n\n\n  }\n  renderInvalidColumnMessage() {\n    const invalidColumns = this.getInvalidColumns();\n    if (invalidColumns.length === 0) {\n      return null;\n    }\n    return (\n      ___EmotionJSX(\"div\", null,\n      t('Column name(s) '),\n      ___EmotionJSX(\"code\", null,\n      ___EmotionJSX(\"strong\", null, invalidColumns.join(', '), \" \")),\n\n      t('cannot be used as a column name. Please use aliases (as in '),\n      ___EmotionJSX(\"code\", null, \"SELECT count(*)\\xA0\",\n\n      ___EmotionJSX(\"strong\", null, \"AS my_alias\")), \")\",\n\n      ' ',\n      t(\"limited to alphanumeric characters and underscores. Column aliases starting\\n          with double underscores or ending with double underscores followed by a\\n          numeric value are not allowed for reasons discussed in Github issue #5739.\\n          \")));\n\n\n\n\n\n  }\n  render() {\n    const allowsSubquery =\n    this.props.database && this.props.database.allows_subquery;\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(Button, {\n        bsSize: \"small\",\n        onClick: this.onClick,\n        disabled: !allowsSubquery,\n        tooltip: t('Explore the result set in the data exploration view') },\n\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        icon: \"line-chart\",\n        placement: \"top\",\n        label: \"explore\" }),\n      ' ',\n      t('Explore')),\n\n      ___EmotionJSX(Dialog, {\n        ref: el => {\n          this.dialog = el;\n        } })));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ExploreResultsButton.propTypes = propTypes;\nExploreResultsButton.defaultProps = defaultProps;\n\nfunction mapStateToProps({ sqlLab, common }) {\n  return {\n    errorMessage: sqlLab.errorMessage,\n    timeout: common.conf ? common.conf.SUPERSET_WEBSERVER_TIMEOUT : null };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch) };\n\n}\n\nexport { ExploreResultsButton };const _default =\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nExploreResultsButton);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");reactHotLoader.register(ExploreResultsButton, \"ExploreResultsButton\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");reactHotLoader.register(_default, \"default\", \"/home/tiago/git-facilit/incubator-superset/superset-frontend/src/SqlLab/components/ExploreResultsButton.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":null,"metadata":{},"sourceType":"module"}
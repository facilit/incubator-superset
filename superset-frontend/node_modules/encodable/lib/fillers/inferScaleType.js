"use strict";

exports.__esModule = true;
exports.default = inferScaleType;

var _VegaLite = require("../types/VegaLite");

/**
 * Sometimes scale type is not specified but can be inferred
 * from other fields.
 * See https://vega.github.io/vega-lite/docs/scale.html
 * @param channelType type of the channel
 * @param fieldType type of the field
 * @param bin is value binned
 */
function inferScaleType(channelType, fieldType, bin = false) {
  if (fieldType === 'nominal' || fieldType === 'ordinal') {
    switch (channelType) {
      // For positional (x and y) ordinal and ordinal fields,
      // "point" is the default scale type for all marks
      // except bar and rect marks, which use "band" scales.
      // https://vega.github.io/vega-lite/docs/scale.html
      case 'XBand':
      case 'YBand':
        return _VegaLite.ScaleType.BAND;

      case 'X':
      case 'Y':
      case 'Numeric':
        return _VegaLite.ScaleType.POINT;

      case 'Color':
      case 'Category':
        return _VegaLite.ScaleType.ORDINAL;

      default:
    }
  } else if (fieldType === 'quantitative') {
    switch (channelType) {
      case 'XBand':
      case 'YBand':
      case 'X':
      case 'Y':
      case 'Numeric':
        return _VegaLite.ScaleType.LINEAR;

      case 'Color':
        return bin ? _VegaLite.ScaleType.BIN_ORDINAL : _VegaLite.ScaleType.LINEAR;

      default:
    }
  } else if (fieldType === 'temporal') {
    switch (channelType) {
      case 'XBand':
      case 'YBand':
      case 'X':
      case 'Y':
      case 'Numeric':
        return _VegaLite.ScaleType.UTC;

      case 'Color':
        return _VegaLite.ScaleType.LINEAR;

      default:
    }
  }

  return undefined;
}
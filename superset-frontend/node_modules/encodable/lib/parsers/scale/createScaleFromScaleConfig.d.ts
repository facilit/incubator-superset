import { CategoricalColorScale } from '@superset-ui/color';
import { ScaleLinear, ScaleLogarithmic, ScalePower, ScaleTime, ScaleQuantile, ScaleQuantize, ScaleThreshold, ScaleOrdinal, ScalePoint, ScaleBand } from 'd3-scale';
import { Value } from '../../types/VegaLite';
import { ScaleConfig, CategoricalScaleInput, LinearScaleConfig, LogScaleConfig, PowScaleConfig, SqrtScaleConfig, SymlogScaleConfig, TimeScaleConfig, UtcScaleConfig, QuantileScaleConfig, QuantizeScaleConfig, ThresholdScaleConfig, BinOrdinalScaleConfig, OrdinalScaleConfig, PointScaleConfig, BandScaleConfig, AllScale } from '../../types/Scale';
declare function createScaleFromScaleConfig<Output extends Value>(config: LinearScaleConfig<Output>): ScaleLinear<Output, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: LogScaleConfig<Output> | SymlogScaleConfig<Output>): ScaleLogarithmic<Output, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: PowScaleConfig<Output> | SqrtScaleConfig<Output>): ScalePower<Output, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: TimeScaleConfig<Output> | UtcScaleConfig<Output>): ScaleTime<Output, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: QuantileScaleConfig<Output>): ScaleQuantile<Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: QuantizeScaleConfig<Output>): ScaleQuantize<Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: ThresholdScaleConfig<Output>): ScaleThreshold<number | string | Date, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: BinOrdinalScaleConfig<Output>): ScaleOrdinal<CategoricalScaleInput, Output>;
declare function createScaleFromScaleConfig<Output extends Value>(config: OrdinalScaleConfig<Output>): ScaleOrdinal<CategoricalScaleInput, Output> | CategoricalColorScale;
declare function createScaleFromScaleConfig<Output extends Value>(config: PointScaleConfig<Output>): ScalePoint<CategoricalScaleInput>;
declare function createScaleFromScaleConfig<Output extends Value>(config: BandScaleConfig<Output>): ScaleBand<CategoricalScaleInput>;
declare function createScaleFromScaleConfig<Output extends Value>(config: ScaleConfig<Output>): AllScale<Output>;
export default createScaleFromScaleConfig;
//# sourceMappingURL=createScaleFromScaleConfig.d.ts.map
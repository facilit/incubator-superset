import { validateNonEmpty } from '@superset-ui/validator';
declare const _default: {
    controlPanelSections: ({
        label: string;
        expanded: boolean;
        controlSetRows: (string[] | {
            name: string;
            config: {
                type: string;
                label: string;
                default: boolean;
                description: string;
            };
        }[])[];
    } | {
        label: string;
        expanded: boolean;
        controlSetRows: ((string | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: string;
            };
        })[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        } | null)[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: null;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                default: boolean;
                renderTrigger: boolean;
                description: string;
            };
        })[])[];
    } | {
        label: string;
        expanded: boolean;
        controlSetRows: ({
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: string;
            };
        }[] | ({
            name: string;
            config: {
                type: string;
                label: string;
                choices: import("@superset-ui/chart-controls/lib/utils/selectOptions").Formatted[];
                default: string;
                clearable: boolean;
                renderTrigger: boolean;
                description: string;
            };
        } | {
            name: string;
            config: {
                type: string;
                label: string;
                renderTrigger: boolean;
                default: boolean;
                description: string;
            };
        })[])[];
    })[];
    controlOverrides: {
        groupby: {
            label: string;
            validators: (typeof validateNonEmpty)[];
        };
        columns: {
            label: string;
            description: string;
        };
    };
};
export default _default;
//# sourceMappingURL=controlPanel.d.ts.map